// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/events.proto
// Protobuf C++ Version: 6.31.1

#include "seshat/events.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seshat {

inline constexpr UnsubscribeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscription_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UnsubscribeRequest::UnsubscribeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UnsubscribeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnsubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeRequestDefaultTypeInternal() {}
  union {
    UnsubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;

inline constexpr Subscription::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_types_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        created_timestamp_{::int64_t{0}},
        priority_{0},
        events_received_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Subscription::Subscription(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Subscription_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscriptionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscriptionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscriptionDefaultTypeInternal() {}
  union {
    Subscription _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscriptionDefaultTypeInternal _Subscription_default_instance_;

inline constexpr SubscribeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_types_{},
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priority_{0},
        include_history_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeRequest::SubscribeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeRequestDefaultTypeInternal() {}
  union {
    SubscribeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;

inline constexpr SubscribeAllRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        priority_{0},
        include_history_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeAllRequest::SubscribeAllRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeAllRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeAllRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeAllRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeAllRequestDefaultTypeInternal() {}
  union {
    SubscribeAllRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeAllRequestDefaultTypeInternal _SubscribeAllRequest_default_instance_;

inline constexpr GetSubscriptionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscriber_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetSubscriptionsRequest::GetSubscriptionsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSubscriptionsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSubscriptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubscriptionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubscriptionsRequestDefaultTypeInternal() {}
  union {
    GetSubscriptionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubscriptionsRequestDefaultTypeInternal _GetSubscriptionsRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GameEvent_DataEntry_DoNotUse::GameEvent_DataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GameEvent_DataEntry_DoNotUse::MapEntry(GameEvent_DataEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GameEvent_DataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GameEvent_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameEvent_DataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameEvent_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GameEvent_DataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameEvent_DataEntry_DoNotUseDefaultTypeInternal _GameEvent_DataEntry_DoNotUse_default_instance_;

inline constexpr EventHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_types_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        since_timestamp_{::int64_t{0}},
        until_timestamp_{::int64_t{0}},
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventHistoryRequest::EventHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EventHistoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventHistoryRequestDefaultTypeInternal() {}
  union {
    EventHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventHistoryRequestDefaultTypeInternal _EventHistoryRequest_default_instance_;

inline constexpr ClearEventHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_types_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ClearEventHistoryRequest::ClearEventHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClearEventHistoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClearEventHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearEventHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearEventHistoryRequestDefaultTypeInternal() {}
  union {
    ClearEventHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearEventHistoryRequestDefaultTypeInternal _ClearEventHistoryRequest_default_instance_;

inline constexpr GameEvent::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr},
        timestamp_{::int64_t{0}},
        priority_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GameEvent::GameEvent(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GameEvent_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GameEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GameEventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GameEventDefaultTypeInternal() {}
  union {
    GameEvent _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GameEventDefaultTypeInternal _GameEvent_default_instance_;

inline constexpr UnsubscribeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UnsubscribeResponse::UnsubscribeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UnsubscribeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnsubscribeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeResponseDefaultTypeInternal() {}
  union {
    UnsubscribeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeResponseDefaultTypeInternal _UnsubscribeResponse_default_instance_;

inline constexpr PublishEventResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PublishEventResponse::PublishEventResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PublishEventResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PublishEventResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishEventResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishEventResponseDefaultTypeInternal() {}
  union {
    PublishEventResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishEventResponseDefaultTypeInternal _PublishEventResponse_default_instance_;

inline constexpr PublishEventRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        event_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PublishEventRequest::PublishEventRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PublishEventRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PublishEventRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PublishEventRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PublishEventRequestDefaultTypeInternal() {}
  union {
    PublishEventRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;

inline constexpr GetSubscriptionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subscriptions_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetSubscriptionsResponse::GetSubscriptionsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetSubscriptionsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetSubscriptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSubscriptionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSubscriptionsResponseDefaultTypeInternal() {}
  union {
    GetSubscriptionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSubscriptionsResponseDefaultTypeInternal _GetSubscriptionsResponse_default_instance_;

inline constexpr EventHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        events_{},
        status_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EventHistoryResponse::EventHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EventHistoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventHistoryResponseDefaultTypeInternal() {}
  union {
    EventHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventHistoryResponseDefaultTypeInternal _EventHistoryResponse_default_instance_;

inline constexpr ClearEventHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr},
        cleared_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ClearEventHistoryResponse::ClearEventHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ClearEventHistoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ClearEventHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ClearEventHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ClearEventHistoryResponseDefaultTypeInternal() {}
  union {
    ClearEventHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ClearEventHistoryResponseDefaultTypeInternal _ClearEventHistoryResponse_default_instance_;
}  // namespace seshat
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_seshat_2fevents_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_seshat_2fevents_2eproto = nullptr;
const ::uint32_t
    TableStruct_seshat_2fevents_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventRequest, _impl_.event_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventResponse, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventResponse, _impl_.event_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::PublishEventResponse, _impl_.timestamp_),
        1,
        0,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeRequest, _impl_.event_types_),
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeRequest, _impl_.subscriber_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeRequest, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeRequest, _impl_.include_history_),
        ~0u,
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeAllRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeAllRequest, _impl_.subscriber_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeAllRequest, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seshat::SubscribeAllRequest, _impl_.include_history_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UnsubscribeRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UnsubscribeRequest, _impl_.subscription_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UnsubscribeResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UnsubscribeResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent_DataEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent_DataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent_DataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_._has_bits_),
        10, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.context_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::seshat::GameEvent, _impl_.source_),
        0,
        1,
        3,
        4,
        5,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_.event_types_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_.since_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryRequest, _impl_.until_timestamp_),
        ~0u,
        0,
        3,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryResponse, _impl_.events_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::EventHistoryResponse, _impl_.status_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryRequest, _impl_.event_types_),
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryRequest, _impl_.entity_id_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryResponse, _impl_.cleared_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::ClearEventHistoryResponse, _impl_.status_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetSubscriptionsRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetSubscriptionsRequest, _impl_.subscriber_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetSubscriptionsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetSubscriptionsResponse, _impl_.subscriptions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetSubscriptionsResponse, _impl_.status_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.subscriber_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.event_types_),
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.priority_),
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.created_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::Subscription, _impl_.events_received_),
        0,
        1,
        ~0u,
        3,
        2,
        4,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::seshat::PublishEventRequest)},
        {5, sizeof(::seshat::PublishEventResponse)},
        {14, sizeof(::seshat::SubscribeRequest)},
        {25, sizeof(::seshat::SubscribeAllRequest)},
        {34, sizeof(::seshat::UnsubscribeRequest)},
        {39, sizeof(::seshat::UnsubscribeResponse)},
        {44, sizeof(::seshat::GameEvent_DataEntry_DoNotUse)},
        {51, sizeof(::seshat::GameEvent)},
        {68, sizeof(::seshat::EventHistoryRequest)},
        {81, sizeof(::seshat::EventHistoryResponse)},
        {90, sizeof(::seshat::ClearEventHistoryRequest)},
        {97, sizeof(::seshat::ClearEventHistoryResponse)},
        {104, sizeof(::seshat::GetSubscriptionsRequest)},
        {109, sizeof(::seshat::GetSubscriptionsResponse)},
        {116, sizeof(::seshat::Subscription)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::seshat::_PublishEventRequest_default_instance_._instance,
    &::seshat::_PublishEventResponse_default_instance_._instance,
    &::seshat::_SubscribeRequest_default_instance_._instance,
    &::seshat::_SubscribeAllRequest_default_instance_._instance,
    &::seshat::_UnsubscribeRequest_default_instance_._instance,
    &::seshat::_UnsubscribeResponse_default_instance_._instance,
    &::seshat::_GameEvent_DataEntry_DoNotUse_default_instance_._instance,
    &::seshat::_GameEvent_default_instance_._instance,
    &::seshat::_EventHistoryRequest_default_instance_._instance,
    &::seshat::_EventHistoryResponse_default_instance_._instance,
    &::seshat::_ClearEventHistoryRequest_default_instance_._instance,
    &::seshat::_ClearEventHistoryResponse_default_instance_._instance,
    &::seshat::_GetSubscriptionsRequest_default_instance_._instance,
    &::seshat::_GetSubscriptionsResponse_default_instance_._instance,
    &::seshat::_Subscription_default_instance_._instance,
};
const char descriptor_table_protodef_seshat_2fevents_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023seshat/events.proto\022\006seshat\032\023seshat/co"
    "mmon.proto\">\n\023PublishEventRequest\022\'\n\005eve"
    "nt\030\001 \001(\0132\021.seshat.GameEventR\005event\"w\n\024Pu"
    "blishEventResponse\022&\n\006status\030\001 \001(\0132\016.ses"
    "hat.ResultR\006status\022\031\n\010event_id\030\002 \001(\tR\007ev"
    "entId\022\034\n\ttimestamp\030\003 \001(\003R\ttimestamp\"\235\001\n\020"
    "SubscribeRequest\022\037\n\013event_types\030\001 \003(\tR\ne"
    "ventTypes\022#\n\rsubscriber_id\030\002 \001(\tR\014subscr"
    "iberId\022\032\n\010priority\030\003 \001(\005R\010priority\022\'\n\017in"
    "clude_history\030\004 \001(\010R\016includeHistory\"\177\n\023S"
    "ubscribeAllRequest\022#\n\rsubscriber_id\030\001 \001("
    "\tR\014subscriberId\022\032\n\010priority\030\002 \001(\005R\010prior"
    "ity\022\'\n\017include_history\030\003 \001(\010R\016includeHis"
    "tory\"=\n\022UnsubscribeRequest\022\'\n\017subscripti"
    "on_id\030\001 \001(\tR\016subscriptionId\"=\n\023Unsubscri"
    "beResponse\022&\n\006status\030\001 \001(\0132\016.seshat.Resu"
    "ltR\006status\"\233\002\n\tGameEvent\022\016\n\002id\030\001 \001(\tR\002id"
    "\022\022\n\004type\030\002 \001(\tR\004type\022.\n\007context\030\003 \001(\0132\024."
    "seshat.EventContextR\007context\022\034\n\ttimestam"
    "p\030\004 \001(\003R\ttimestamp\022\032\n\010priority\030\005 \001(\005R\010pr"
    "iority\022/\n\004data\030\006 \003(\0132\033.seshat.GameEvent."
    "DataEntryR\004data\022\026\n\006source\030\007 \001(\tR\006source\032"
    "7\n\tDataEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030"
    "\002 \001(\tR\005value:\0028\001\"\273\001\n\023EventHistoryRequest"
    "\022\037\n\013event_types\030\001 \003(\tR\neventTypes\022\033\n\tent"
    "ity_id\030\002 \001(\tR\010entityId\022\024\n\005limit\030\003 \001(\005R\005l"
    "imit\022\'\n\017since_timestamp\030\004 \001(\003R\016sinceTime"
    "stamp\022\'\n\017until_timestamp\030\005 \001(\003R\016untilTim"
    "estamp\"\212\001\n\024EventHistoryResponse\022)\n\006event"
    "s\030\001 \003(\0132\021.seshat.GameEventR\006events\022\037\n\013to"
    "tal_count\030\002 \001(\005R\ntotalCount\022&\n\006status\030\003 "
    "\001(\0132\016.seshat.ResultR\006status\"X\n\030ClearEven"
    "tHistoryRequest\022\037\n\013event_types\030\001 \003(\tR\nev"
    "entTypes\022\033\n\tentity_id\030\002 \001(\tR\010entityId\"h\n"
    "\031ClearEventHistoryResponse\022#\n\rcleared_co"
    "unt\030\001 \001(\005R\014clearedCount\022&\n\006status\030\002 \001(\0132"
    "\016.seshat.ResultR\006status\">\n\027GetSubscripti"
    "onsRequest\022#\n\rsubscriber_id\030\001 \001(\tR\014subsc"
    "riberId\"~\n\030GetSubscriptionsResponse\022:\n\rs"
    "ubscriptions\030\001 \003(\0132\024.seshat.Subscription"
    "R\rsubscriptions\022&\n\006status\030\002 \001(\0132\016.seshat"
    ".ResultR\006status\"\326\001\n\014Subscription\022\016\n\002id\030\001"
    " \001(\tR\002id\022#\n\rsubscriber_id\030\002 \001(\tR\014subscri"
    "berId\022\037\n\013event_types\030\003 \003(\tR\neventTypes\022\032"
    "\n\010priority\030\004 \001(\005R\010priority\022+\n\021created_ti"
    "mestamp\030\005 \001(\003R\020createdTimestamp\022\'\n\017event"
    "s_received\030\006 \001(\005R\016eventsReceived2\256\004\n\014Eve"
    "ntService\022I\n\014PublishEvent\022\033.seshat.Publi"
    "shEventRequest\032\034.seshat.PublishEventResp"
    "onse\022B\n\021SubscribeToEvents\022\030.seshat.Subsc"
    "ribeRequest\032\021.seshat.GameEvent0\001\022H\n\024Subs"
    "cribeToAllEvents\022\033.seshat.SubscribeAllRe"
    "quest\032\021.seshat.GameEvent0\001\022L\n\017GetEventHi"
    "story\022\033.seshat.EventHistoryRequest\032\034.ses"
    "hat.EventHistoryResponse\022X\n\021ClearEventHi"
    "story\022 .seshat.ClearEventHistoryRequest\032"
    "!.seshat.ClearEventHistoryResponse\022U\n\020Ge"
    "tSubscriptions\022\037.seshat.GetSubscriptions"
    "Request\032 .seshat.GetSubscriptionsRespons"
    "e\022F\n\013Unsubscribe\022\032.seshat.UnsubscribeReq"
    "uest\032\033.seshat.UnsubscribeResponseB!Z\037git"
    "hub.com/seshat/protos/seshatb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_seshat_2fevents_2eproto_deps[1] = {
        &::descriptor_table_seshat_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_seshat_2fevents_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_seshat_2fevents_2eproto = {
    false,
    false,
    2476,
    descriptor_table_protodef_seshat_2fevents_2eproto,
    "seshat/events.proto",
    &descriptor_table_seshat_2fevents_2eproto_once,
    descriptor_table_seshat_2fevents_2eproto_deps,
    1,
    15,
    schemas,
    file_default_instances,
    TableStruct_seshat_2fevents_2eproto::offsets,
    file_level_enum_descriptors_seshat_2fevents_2eproto,
    file_level_service_descriptors_seshat_2fevents_2eproto,
};
namespace seshat {
// ===================================================================

class PublishEventRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PublishEventRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PublishEventRequest, _impl_._has_bits_);
};

PublishEventRequest::PublishEventRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PublishEventRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.PublishEventRequest)
}
PROTOBUF_NDEBUG_INLINE PublishEventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::PublishEventRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PublishEventRequest::PublishEventRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PublishEventRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PublishEventRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishEventRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.event_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.event_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.PublishEventRequest)
}
PROTOBUF_NDEBUG_INLINE PublishEventRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void PublishEventRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.event_ = {};
}
PublishEventRequest::~PublishEventRequest() {
  // @@protoc_insertion_point(destructor:seshat.PublishEventRequest)
  SharedDtor(*this);
}
inline void PublishEventRequest::SharedDtor(MessageLite& self) {
  PublishEventRequest& this_ = static_cast<PublishEventRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.event_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PublishEventRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PublishEventRequest(arena);
}
constexpr auto PublishEventRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(PublishEventRequest),
                                            alignof(PublishEventRequest));
}
constexpr auto PublishEventRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PublishEventRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PublishEventRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PublishEventRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PublishEventRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PublishEventRequest>(), &PublishEventRequest::ByteSizeLong,
              &PublishEventRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PublishEventRequest, _impl_._cached_size_),
          false,
      },
      &PublishEventRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PublishEventRequest_class_data_ =
        PublishEventRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PublishEventRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PublishEventRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PublishEventRequest_class_data_.tc_table);
  return PublishEventRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
PublishEventRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PublishEventRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PublishEventRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::PublishEventRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.GameEvent event = 1 [json_name = "event"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PublishEventRequest, _impl_.event_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.GameEvent event = 1 [json_name = "event"];
    {PROTOBUF_FIELD_OFFSET(PublishEventRequest, _impl_.event_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::GameEvent>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void PublishEventRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.PublishEventRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.event_ != nullptr);
    _impl_.event_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PublishEventRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PublishEventRequest& this_ = static_cast<const PublishEventRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PublishEventRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PublishEventRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.PublishEventRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.GameEvent event = 1 [json_name = "event"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.event_, this_._impl_.event_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.PublishEventRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PublishEventRequest::ByteSizeLong(const MessageLite& base) {
  const PublishEventRequest& this_ = static_cast<const PublishEventRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PublishEventRequest::ByteSizeLong() const {
  const PublishEventRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.PublishEventRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .seshat.GameEvent event = 1 [json_name = "event"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.event_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PublishEventRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PublishEventRequest*>(&to_msg);
  auto& from = static_cast<const PublishEventRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.PublishEventRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.event_ != nullptr);
    if (_this->_impl_.event_ == nullptr) {
      _this->_impl_.event_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.event_);
    } else {
      _this->_impl_.event_->MergeFrom(*from._impl_.event_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PublishEventRequest::CopyFrom(const PublishEventRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.PublishEventRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PublishEventRequest::InternalSwap(PublishEventRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.event_, other->_impl_.event_);
}

::google::protobuf::Metadata PublishEventRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PublishEventResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PublishEventResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_._has_bits_);
};

void PublishEventResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
PublishEventResponse::PublishEventResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PublishEventResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.PublishEventResponse)
}
PROTOBUF_NDEBUG_INLINE PublishEventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::PublishEventResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_id_(arena, from.event_id_) {}

PublishEventResponse::PublishEventResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PublishEventResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PublishEventResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PublishEventResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:seshat.PublishEventResponse)
}
PROTOBUF_NDEBUG_INLINE PublishEventResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_id_(arena) {}

inline void PublishEventResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::timestamp_));
}
PublishEventResponse::~PublishEventResponse() {
  // @@protoc_insertion_point(destructor:seshat.PublishEventResponse)
  SharedDtor(*this);
}
inline void PublishEventResponse::SharedDtor(MessageLite& self) {
  PublishEventResponse& this_ = static_cast<PublishEventResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.event_id_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PublishEventResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PublishEventResponse(arena);
}
constexpr auto PublishEventResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PublishEventResponse),
                                            alignof(PublishEventResponse));
}
constexpr auto PublishEventResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PublishEventResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PublishEventResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PublishEventResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PublishEventResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PublishEventResponse>(), &PublishEventResponse::ByteSizeLong,
              &PublishEventResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_._cached_size_),
          false,
      },
      &PublishEventResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PublishEventResponse_class_data_ =
        PublishEventResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PublishEventResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PublishEventResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PublishEventResponse_class_data_.tc_table);
  return PublishEventResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 44, 2>
PublishEventResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    PublishEventResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::PublishEventResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.Result status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.status_)}},
    // string event_id = 2 [json_name = "eventId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.event_id_)}},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PublishEventResponse, _impl_.timestamp_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Result status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string event_id = 2 [json_name = "eventId"];
    {PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.event_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
    "\33\0\10\0\0\0\0\0"
    "seshat.PublishEventResponse"
    "event_id"
  }},
};
PROTOBUF_NOINLINE void PublishEventResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.PublishEventResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.event_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PublishEventResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PublishEventResponse& this_ = static_cast<const PublishEventResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PublishEventResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PublishEventResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.PublishEventResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 1 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  // string event_id = 2 [json_name = "eventId"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_event_id().empty()) {
      const ::std::string& _s = this_._internal_event_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.PublishEventResponse.event_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 timestamp = 3 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.PublishEventResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PublishEventResponse::ByteSizeLong(const MessageLite& base) {
  const PublishEventResponse& this_ = static_cast<const PublishEventResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PublishEventResponse::ByteSizeLong() const {
  const PublishEventResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.PublishEventResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string event_id = 2 [json_name = "eventId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_event_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_event_id());
      }
    }
    // .seshat.Result status = 1 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int64 timestamp = 3 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PublishEventResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PublishEventResponse*>(&to_msg);
  auto& from = static_cast<const PublishEventResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.PublishEventResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_event_id().empty()) {
        _this->_internal_set_event_id(from._internal_event_id());
      } else {
        if (_this->_impl_.event_id_.IsDefault()) {
          _this->_internal_set_event_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PublishEventResponse::CopyFrom(const PublishEventResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.PublishEventResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PublishEventResponse::InternalSwap(PublishEventResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_id_, &other->_impl_.event_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.timestamp_)
      + sizeof(PublishEventResponse::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(PublishEventResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata PublishEventResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._has_bits_);
};

SubscribeRequest::SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SubscribeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_types_{visibility, arena, from.event_types_},
        subscriber_id_(arena, from.subscriber_id_) {}

SubscribeRequest::SubscribeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, priority_),
           offsetof(Impl_, include_history_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::include_history_));

  // @@protoc_insertion_point(copy_constructor:seshat.SubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_types_{visibility, arena},
        subscriber_id_(arena) {}

inline void SubscribeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           0,
           offsetof(Impl_, include_history_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::include_history_));
}
SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:seshat.SubscribeRequest)
  SharedDtor(*this);
}
inline void SubscribeRequest::SharedDtor(MessageLite& self) {
  SubscribeRequest& this_ = static_cast<SubscribeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeRequest(arena);
}
constexpr auto SubscribeRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.event_types_) +
          decltype(SubscribeRequest::_impl_.event_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SubscribeRequest), alignof(SubscribeRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SubscribeRequest::PlacementNew_,
                                 sizeof(SubscribeRequest),
                                 alignof(SubscribeRequest));
  }
}
constexpr auto SubscribeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeRequest>(), &SubscribeRequest::ByteSizeLong,
              &SubscribeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._cached_size_),
          false,
      },
      &SubscribeRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_ =
        SubscribeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeRequest_class_data_.tc_table);
  return SubscribeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2>
SubscribeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SubscribeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_history = 4 [json_name = "includeHistory"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeRequest, _impl_.include_history_), 2>(),
     {32, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.include_history_)}},
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.event_types_)}},
    // string subscriber_id = 2 [json_name = "subscriberId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.subscriber_id_)}},
    // int32 priority = 3 [json_name = "priority"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeRequest, _impl_.priority_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.priority_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.event_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string subscriber_id = 2 [json_name = "subscriberId"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.subscriber_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 priority = 3 [json_name = "priority"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.priority_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool include_history = 4 [json_name = "includeHistory"];
    {PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.include_history_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\27\13\15\0\0\0\0\0"
    "seshat.SubscribeRequest"
    "event_types"
    "subscriber_id"
  }},
};
PROTOBUF_NOINLINE void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SubscribeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.subscriber_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.priority_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.include_history_) -
        reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.include_history_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string event_types = 1 [json_name = "eventTypes"];
  for (int i = 0, n = this_._internal_event_types_size(); i < n; ++i) {
    const auto& s = this_._internal_event_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SubscribeRequest.event_types");
    target = stream->WriteString(1, s, target);
  }

  // string subscriber_id = 2 [json_name = "subscriberId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_subscriber_id().empty()) {
      const ::std::string& _s = this_._internal_subscriber_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SubscribeRequest.subscriber_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 priority = 3 [json_name = "priority"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_priority() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_priority(), target);
    }
  }

  // bool include_history = 4 [json_name = "includeHistory"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_include_history() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_include_history(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SubscribeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeRequest::ByteSizeLong(const MessageLite& base) {
  const SubscribeRequest& this_ = static_cast<const SubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeRequest::ByteSizeLong() const {
  const SubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SubscribeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_event_types().size());
      for (int i = 0, n = this_._internal_event_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_event_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string subscriber_id = 2 [json_name = "subscriberId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_subscriber_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_subscriber_id());
      }
    }
    // int32 priority = 3 [json_name = "priority"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_priority() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_priority());
      }
    }
    // bool include_history = 4 [json_name = "includeHistory"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_include_history() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_types()->MergeFrom(from._internal_event_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_subscriber_id().empty()) {
        _this->_internal_set_subscriber_id(from._internal_subscriber_id());
      } else {
        if (_this->_impl_.subscriber_id_.IsDefault()) {
          _this->_internal_set_subscriber_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_priority() != 0) {
        _this->_impl_.priority_ = from._impl_.priority_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_include_history() != 0) {
        _this->_impl_.include_history_ = from._impl_.include_history_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeRequest::InternalSwap(SubscribeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.event_types_.InternalSwap(&other->_impl_.event_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.include_history_)
      + sizeof(SubscribeRequest::_impl_.include_history_)
      - PROTOBUF_FIELD_OFFSET(SubscribeRequest, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SubscribeAllRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeAllRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_._has_bits_);
};

SubscribeAllRequest::SubscribeAllRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeAllRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SubscribeAllRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeAllRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SubscribeAllRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subscriber_id_(arena, from.subscriber_id_) {}

SubscribeAllRequest::SubscribeAllRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeAllRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeAllRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeAllRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, priority_),
           offsetof(Impl_, include_history_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::include_history_));

  // @@protoc_insertion_point(copy_constructor:seshat.SubscribeAllRequest)
}
PROTOBUF_NDEBUG_INLINE SubscribeAllRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subscriber_id_(arena) {}

inline void SubscribeAllRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, priority_),
           0,
           offsetof(Impl_, include_history_) -
               offsetof(Impl_, priority_) +
               sizeof(Impl_::include_history_));
}
SubscribeAllRequest::~SubscribeAllRequest() {
  // @@protoc_insertion_point(destructor:seshat.SubscribeAllRequest)
  SharedDtor(*this);
}
inline void SubscribeAllRequest::SharedDtor(MessageLite& self) {
  SubscribeAllRequest& this_ = static_cast<SubscribeAllRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeAllRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeAllRequest(arena);
}
constexpr auto SubscribeAllRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeAllRequest),
                                            alignof(SubscribeAllRequest));
}
constexpr auto SubscribeAllRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeAllRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeAllRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeAllRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeAllRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeAllRequest>(), &SubscribeAllRequest::ByteSizeLong,
              &SubscribeAllRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_._cached_size_),
          false,
      },
      &SubscribeAllRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeAllRequest_class_data_ =
        SubscribeAllRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeAllRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeAllRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeAllRequest_class_data_.tc_table);
  return SubscribeAllRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2>
SubscribeAllRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeAllRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SubscribeAllRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string subscriber_id = 1 [json_name = "subscriberId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.subscriber_id_)}},
    // int32 priority = 2 [json_name = "priority"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SubscribeAllRequest, _impl_.priority_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.priority_)}},
    // bool include_history = 3 [json_name = "includeHistory"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SubscribeAllRequest, _impl_.include_history_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.include_history_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscriber_id = 1 [json_name = "subscriberId"];
    {PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.subscriber_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 priority = 2 [json_name = "priority"];
    {PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.priority_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool include_history = 3 [json_name = "includeHistory"];
    {PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.include_history_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\32\15\0\0\0\0\0\0"
    "seshat.SubscribeAllRequest"
    "subscriber_id"
  }},
};
PROTOBUF_NOINLINE void SubscribeAllRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SubscribeAllRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.subscriber_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.priority_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.include_history_) -
        reinterpret_cast<char*>(&_impl_.priority_)) + sizeof(_impl_.include_history_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeAllRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeAllRequest& this_ = static_cast<const SubscribeAllRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeAllRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeAllRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SubscribeAllRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string subscriber_id = 1 [json_name = "subscriberId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_subscriber_id().empty()) {
      const ::std::string& _s = this_._internal_subscriber_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SubscribeAllRequest.subscriber_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 priority = 2 [json_name = "priority"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_priority() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_priority(), target);
    }
  }

  // bool include_history = 3 [json_name = "includeHistory"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_include_history() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_include_history(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SubscribeAllRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeAllRequest::ByteSizeLong(const MessageLite& base) {
  const SubscribeAllRequest& this_ = static_cast<const SubscribeAllRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeAllRequest::ByteSizeLong() const {
  const SubscribeAllRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SubscribeAllRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string subscriber_id = 1 [json_name = "subscriberId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_subscriber_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_subscriber_id());
      }
    }
    // int32 priority = 2 [json_name = "priority"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_priority() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_priority());
      }
    }
    // bool include_history = 3 [json_name = "includeHistory"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_include_history() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeAllRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeAllRequest*>(&to_msg);
  auto& from = static_cast<const SubscribeAllRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SubscribeAllRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_subscriber_id().empty()) {
        _this->_internal_set_subscriber_id(from._internal_subscriber_id());
      } else {
        if (_this->_impl_.subscriber_id_.IsDefault()) {
          _this->_internal_set_subscriber_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_priority() != 0) {
        _this->_impl_.priority_ = from._impl_.priority_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_include_history() != 0) {
        _this->_impl_.include_history_ = from._impl_.include_history_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeAllRequest::CopyFrom(const SubscribeAllRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SubscribeAllRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeAllRequest::InternalSwap(SubscribeAllRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.include_history_)
      + sizeof(SubscribeAllRequest::_impl_.include_history_)
      - PROTOBUF_FIELD_OFFSET(SubscribeAllRequest, _impl_.priority_)>(
          reinterpret_cast<char*>(&_impl_.priority_),
          reinterpret_cast<char*>(&other->_impl_.priority_));
}

::google::protobuf::Metadata SubscribeAllRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnsubscribeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UnsubscribeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_._has_bits_);
};

UnsubscribeRequest::UnsubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UnsubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UnsubscribeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subscription_id_(arena, from.subscription_id_) {}

UnsubscribeRequest::UnsubscribeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UnsubscribeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnsubscribeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.UnsubscribeRequest)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subscription_id_(arena) {}

inline void UnsubscribeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UnsubscribeRequest::~UnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:seshat.UnsubscribeRequest)
  SharedDtor(*this);
}
inline void UnsubscribeRequest::SharedDtor(MessageLite& self) {
  UnsubscribeRequest& this_ = static_cast<UnsubscribeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscription_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UnsubscribeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UnsubscribeRequest(arena);
}
constexpr auto UnsubscribeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnsubscribeRequest),
                                            alignof(UnsubscribeRequest));
}
constexpr auto UnsubscribeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UnsubscribeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UnsubscribeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UnsubscribeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UnsubscribeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UnsubscribeRequest>(), &UnsubscribeRequest::ByteSizeLong,
              &UnsubscribeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_._cached_size_),
          false,
      },
      &UnsubscribeRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UnsubscribeRequest_class_data_ =
        UnsubscribeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UnsubscribeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UnsubscribeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UnsubscribeRequest_class_data_.tc_table);
  return UnsubscribeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 49, 2>
UnsubscribeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UnsubscribeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UnsubscribeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string subscription_id = 1 [json_name = "subscriptionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.subscription_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscription_id = 1 [json_name = "subscriptionId"];
    {PROTOBUF_FIELD_OFFSET(UnsubscribeRequest, _impl_.subscription_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\17\0\0\0\0\0\0"
    "seshat.UnsubscribeRequest"
    "subscription_id"
  }},
};
PROTOBUF_NOINLINE void UnsubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UnsubscribeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.subscription_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UnsubscribeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UnsubscribeRequest& this_ = static_cast<const UnsubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UnsubscribeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UnsubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UnsubscribeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string subscription_id = 1 [json_name = "subscriptionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_subscription_id().empty()) {
      const ::std::string& _s = this_._internal_subscription_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.UnsubscribeRequest.subscription_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UnsubscribeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UnsubscribeRequest::ByteSizeLong(const MessageLite& base) {
  const UnsubscribeRequest& this_ = static_cast<const UnsubscribeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UnsubscribeRequest::ByteSizeLong() const {
  const UnsubscribeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UnsubscribeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string subscription_id = 1 [json_name = "subscriptionId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_subscription_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_subscription_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UnsubscribeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnsubscribeRequest*>(&to_msg);
  auto& from = static_cast<const UnsubscribeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UnsubscribeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_subscription_id().empty()) {
      _this->_internal_set_subscription_id(from._internal_subscription_id());
    } else {
      if (_this->_impl_.subscription_id_.IsDefault()) {
        _this->_internal_set_subscription_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnsubscribeRequest::CopyFrom(const UnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnsubscribeRequest::InternalSwap(UnsubscribeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscription_id_, &other->_impl_.subscription_id_, arena);
}

::google::protobuf::Metadata UnsubscribeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnsubscribeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UnsubscribeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnsubscribeResponse, _impl_._has_bits_);
};

void UnsubscribeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UnsubscribeResponse::UnsubscribeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UnsubscribeResponse)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UnsubscribeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UnsubscribeResponse::UnsubscribeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UnsubscribeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnsubscribeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.UnsubscribeResponse)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UnsubscribeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
UnsubscribeResponse::~UnsubscribeResponse() {
  // @@protoc_insertion_point(destructor:seshat.UnsubscribeResponse)
  SharedDtor(*this);
}
inline void UnsubscribeResponse::SharedDtor(MessageLite& self) {
  UnsubscribeResponse& this_ = static_cast<UnsubscribeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UnsubscribeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UnsubscribeResponse(arena);
}
constexpr auto UnsubscribeResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UnsubscribeResponse),
                                            alignof(UnsubscribeResponse));
}
constexpr auto UnsubscribeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UnsubscribeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UnsubscribeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UnsubscribeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UnsubscribeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UnsubscribeResponse>(), &UnsubscribeResponse::ByteSizeLong,
              &UnsubscribeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UnsubscribeResponse, _impl_._cached_size_),
          false,
      },
      &UnsubscribeResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UnsubscribeResponse_class_data_ =
        UnsubscribeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UnsubscribeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UnsubscribeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UnsubscribeResponse_class_data_.tc_table);
  return UnsubscribeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
UnsubscribeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnsubscribeResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UnsubscribeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UnsubscribeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Result status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(UnsubscribeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UnsubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UnsubscribeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UnsubscribeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UnsubscribeResponse& this_ = static_cast<const UnsubscribeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UnsubscribeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UnsubscribeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UnsubscribeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 1 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UnsubscribeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UnsubscribeResponse::ByteSizeLong(const MessageLite& base) {
  const UnsubscribeResponse& this_ = static_cast<const UnsubscribeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UnsubscribeResponse::ByteSizeLong() const {
  const UnsubscribeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UnsubscribeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .seshat.Result status = 1 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UnsubscribeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnsubscribeResponse*>(&to_msg);
  auto& from = static_cast<const UnsubscribeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UnsubscribeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnsubscribeResponse::CopyFrom(const UnsubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UnsubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnsubscribeResponse::InternalSwap(UnsubscribeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata UnsubscribeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GameEvent_DataEntry_DoNotUse::GameEvent_DataEntry_DoNotUse()
    : SuperType(GameEvent_DataEntry_DoNotUse_class_data_.base()) {}
GameEvent_DataEntry_DoNotUse::GameEvent_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GameEvent_DataEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GameEvent_DataEntry_DoNotUse::GameEvent_DataEntry_DoNotUse() : SuperType() {}
GameEvent_DataEntry_DoNotUse::GameEvent_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GameEvent_DataEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GameEvent_DataEntry_DoNotUse(arena);
}
constexpr auto GameEvent_DataEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GameEvent_DataEntry_DoNotUse),
                                            alignof(GameEvent_DataEntry_DoNotUse));
}
constexpr auto GameEvent_DataEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GameEvent_DataEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GameEvent_DataEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GameEvent_DataEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GameEvent_DataEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GameEvent_DataEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GameEvent_DataEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GameEvent_DataEntry_DoNotUse_class_data_ =
        GameEvent_DataEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GameEvent_DataEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GameEvent_DataEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GameEvent_DataEntry_DoNotUse_class_data_.tc_table);
  return GameEvent_DataEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2>
GameEvent_DataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GameEvent_DataEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GameEvent_DataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GameEvent_DataEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\32\3\5\0\0\0\0\0"
    "seshat.GameEvent.DataEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class GameEvent::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GameEvent>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GameEvent, _impl_._has_bits_);
};

void GameEvent::clear_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ != nullptr) _impl_.context_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
GameEvent::GameEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GameEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GameEvent)
}
PROTOBUF_NDEBUG_INLINE GameEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GameEvent& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_{visibility, arena, from.data_},
        id_(arena, from.id_),
        type_(arena, from.type_),
        source_(arena, from.source_) {}

GameEvent::GameEvent(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GameEvent& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GameEvent_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GameEvent* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, timestamp_),
           offsetof(Impl_, priority_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::priority_));

  // @@protoc_insertion_point(copy_constructor:seshat.GameEvent)
}
PROTOBUF_NDEBUG_INLINE GameEvent::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_{visibility, arena},
        id_(arena),
        type_(arena),
        source_(arena) {}

inline void GameEvent::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, context_),
           0,
           offsetof(Impl_, priority_) -
               offsetof(Impl_, context_) +
               sizeof(Impl_::priority_));
}
GameEvent::~GameEvent() {
  // @@protoc_insertion_point(destructor:seshat.GameEvent)
  SharedDtor(*this);
}
inline void GameEvent::SharedDtor(MessageLite& self) {
  GameEvent& this_ = static_cast<GameEvent&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.source_.Destroy();
  delete this_._impl_.context_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GameEvent::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GameEvent(arena);
}
constexpr auto GameEvent::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.data_) +
          decltype(GameEvent::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.data_) +
          decltype(GameEvent::_impl_.data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GameEvent), alignof(GameEvent), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GameEvent::PlacementNew_,
                                 sizeof(GameEvent),
                                 alignof(GameEvent));
  }
}
constexpr auto GameEvent::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GameEvent_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GameEvent::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GameEvent>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GameEvent::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GameEvent>(), &GameEvent::ByteSizeLong,
              &GameEvent::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GameEvent, _impl_._cached_size_),
          false,
      },
      &GameEvent::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GameEvent_class_data_ =
        GameEvent::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GameEvent::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GameEvent_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GameEvent_class_data_.tc_table);
  return GameEvent_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 2, 41, 2>
GameEvent::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GameEvent, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GameEvent_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GameEvent>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.id_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.type_)}},
    // .seshat.EventContext context = 3 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.context_)}},
    // int64 timestamp = 4 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GameEvent, _impl_.timestamp_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.timestamp_)}},
    // int32 priority = 5 [json_name = "priority"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GameEvent, _impl_.priority_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.priority_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string source = 7 [json_name = "source"];
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.source_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.EventContext context = 3 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.context_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 timestamp = 4 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 priority = 5 [json_name = "priority"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.priority_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> data = 6 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string source = 7 [json_name = "source"];
    {PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.source_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::EventContext>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\20\2\4\0\0\0\4\6"
    "seshat.GameEvent"
    "id"
    "type"
    "data"
    "source"
  }},
};
PROTOBUF_NOINLINE void GameEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GameEvent)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.source_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000030u) != 0) {
    ::memset(&_impl_.timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.priority_) -
        reinterpret_cast<char*>(&_impl_.timestamp_)) + sizeof(_impl_.priority_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GameEvent::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GameEvent& this_ = static_cast<const GameEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GameEvent::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GameEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GameEvent)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.EventContext context = 3 [json_name = "context"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  // int64 timestamp = 4 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // int32 priority = 5 [json_name = "priority"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_priority() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_priority(), target);
    }
  }

  // map<string, string> data = 6 [json_name = "data"];
  if (!this_._internal_data().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_data();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.data");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.data");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.data");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.data");
      }
    }
  }

  // string source = 7 [json_name = "source"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_source().empty()) {
      const ::std::string& _s = this_._internal_source();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GameEvent.source");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GameEvent)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GameEvent::ByteSizeLong(const MessageLite& base) {
  const GameEvent& this_ = static_cast<const GameEvent&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GameEvent::ByteSizeLong() const {
  const GameEvent& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GameEvent)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> data = 6 [json_name = "data"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_data_size());
      for (const auto& entry : this_._internal_data()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string source = 7 [json_name = "source"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_source().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source());
      }
    }
    // .seshat.EventContext context = 3 [json_name = "context"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
    // int64 timestamp = 4 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
    // int32 priority = 5 [json_name = "priority"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_priority() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_priority());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GameEvent::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GameEvent*>(&to_msg);
  auto& from = static_cast<const GameEvent&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GameEvent)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_source().empty()) {
        _this->_internal_set_source(from._internal_source());
      } else {
        if (_this->_impl_.source_.IsDefault()) {
          _this->_internal_set_source("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_priority() != 0) {
        _this->_impl_.priority_ = from._impl_.priority_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GameEvent::CopyFrom(const GameEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GameEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GameEvent::InternalSwap(GameEvent* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_, &other->_impl_.source_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.priority_)
      + sizeof(GameEvent::_impl_.priority_)
      - PROTOBUF_FIELD_OFFSET(GameEvent, _impl_.context_)>(
          reinterpret_cast<char*>(&_impl_.context_),
          reinterpret_cast<char*>(&other->_impl_.context_));
}

::google::protobuf::Metadata GameEvent::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventHistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EventHistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_._has_bits_);
};

EventHistoryRequest::EventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.EventHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE EventHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::EventHistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_types_{visibility, arena, from.event_types_},
        entity_id_(arena, from.entity_id_) {}

EventHistoryRequest::EventHistoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EventHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, since_timestamp_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, since_timestamp_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:seshat.EventHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE EventHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_types_{visibility, arena},
        entity_id_(arena) {}

inline void EventHistoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_timestamp_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, since_timestamp_) +
               sizeof(Impl_::limit_));
}
EventHistoryRequest::~EventHistoryRequest() {
  // @@protoc_insertion_point(destructor:seshat.EventHistoryRequest)
  SharedDtor(*this);
}
inline void EventHistoryRequest::SharedDtor(MessageLite& self) {
  EventHistoryRequest& this_ = static_cast<EventHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EventHistoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EventHistoryRequest(arena);
}
constexpr auto EventHistoryRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.event_types_) +
          decltype(EventHistoryRequest::_impl_.event_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EventHistoryRequest), alignof(EventHistoryRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventHistoryRequest::PlacementNew_,
                                 sizeof(EventHistoryRequest),
                                 alignof(EventHistoryRequest));
  }
}
constexpr auto EventHistoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EventHistoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EventHistoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EventHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EventHistoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EventHistoryRequest>(), &EventHistoryRequest::ByteSizeLong,
              &EventHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_._cached_size_),
          false,
      },
      &EventHistoryRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EventHistoryRequest_class_data_ =
        EventHistoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EventHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EventHistoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EventHistoryRequest_class_data_.tc_table);
  return EventHistoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 55, 2>
EventHistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EventHistoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::EventHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.event_types_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.entity_id_)}},
    // int32 limit = 3 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventHistoryRequest, _impl_.limit_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.limit_)}},
    // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventHistoryRequest, _impl_.since_timestamp_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.since_timestamp_)}},
    // int64 until_timestamp = 5 [json_name = "untilTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EventHistoryRequest, _impl_.until_timestamp_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.until_timestamp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.event_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 limit = 3 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.limit_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.since_timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 until_timestamp = 5 [json_name = "untilTimestamp"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.until_timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\32\13\11\0\0\0\0\0"
    "seshat.EventHistoryRequest"
    "event_types"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void EventHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.EventHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.since_timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.limit_) -
        reinterpret_cast<char*>(&_impl_.since_timestamp_)) + sizeof(_impl_.limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EventHistoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EventHistoryRequest& this_ = static_cast<const EventHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EventHistoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EventHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.EventHistoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string event_types = 1 [json_name = "eventTypes"];
  for (int i = 0, n = this_._internal_event_types_size(); i < n; ++i) {
    const auto& s = this_._internal_event_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.EventHistoryRequest.event_types");
    target = stream->WriteString(1, s, target);
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.EventHistoryRequest.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 limit = 3 [json_name = "limit"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_limit(), target);
    }
  }

  // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_since_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<4>(
              stream, this_._internal_since_timestamp(), target);
    }
  }

  // int64 until_timestamp = 5 [json_name = "untilTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_until_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_until_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.EventHistoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EventHistoryRequest::ByteSizeLong(const MessageLite& base) {
  const EventHistoryRequest& this_ = static_cast<const EventHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EventHistoryRequest::ByteSizeLong() const {
  const EventHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.EventHistoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_event_types().size());
      for (int i = 0, n = this_._internal_event_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_event_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_since_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_since_timestamp());
      }
    }
    // int64 until_timestamp = 5 [json_name = "untilTimestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_until_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_until_timestamp());
      }
    }
    // int32 limit = 3 [json_name = "limit"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_limit());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EventHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventHistoryRequest*>(&to_msg);
  auto& from = static_cast<const EventHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.EventHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_types()->MergeFrom(from._internal_event_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_since_timestamp() != 0) {
        _this->_impl_.since_timestamp_ = from._impl_.since_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_until_timestamp() != 0) {
        _this->_impl_.until_timestamp_ = from._impl_.until_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventHistoryRequest::CopyFrom(const EventHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.EventHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventHistoryRequest::InternalSwap(EventHistoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.event_types_.InternalSwap(&other->_impl_.event_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.limit_)
      + sizeof(EventHistoryRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(EventHistoryRequest, _impl_.since_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.since_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.since_timestamp_));
}

::google::protobuf::Metadata EventHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EventHistoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EventHistoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_._has_bits_);
};

void EventHistoryResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
EventHistoryResponse::EventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.EventHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE EventHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::EventHistoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        events_{visibility, arena, from.events_} {}

EventHistoryResponse::EventHistoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EventHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EventHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EventHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.EventHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE EventHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        events_{visibility, arena} {}

inline void EventHistoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_count_));
}
EventHistoryResponse::~EventHistoryResponse() {
  // @@protoc_insertion_point(destructor:seshat.EventHistoryResponse)
  SharedDtor(*this);
}
inline void EventHistoryResponse::SharedDtor(MessageLite& self) {
  EventHistoryResponse& this_ = static_cast<EventHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EventHistoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EventHistoryResponse(arena);
}
constexpr auto EventHistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.events_) +
          decltype(EventHistoryResponse::_impl_.events_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(EventHistoryResponse), alignof(EventHistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EventHistoryResponse::PlacementNew_,
                                 sizeof(EventHistoryResponse),
                                 alignof(EventHistoryResponse));
  }
}
constexpr auto EventHistoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EventHistoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EventHistoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EventHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EventHistoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EventHistoryResponse>(), &EventHistoryResponse::ByteSizeLong,
              &EventHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_._cached_size_),
          false,
      },
      &EventHistoryResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EventHistoryResponse_class_data_ =
        EventHistoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EventHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EventHistoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EventHistoryResponse_class_data_.tc_table);
  return EventHistoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
EventHistoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EventHistoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::EventHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.GameEvent events = 1 [json_name = "events"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.events_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EventHistoryResponse, _impl_.total_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.total_count_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.GameEvent events = 1 [json_name = "events"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.events_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::GameEvent>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void EventHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.EventHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.events_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EventHistoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EventHistoryResponse& this_ = static_cast<const EventHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EventHistoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EventHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.EventHistoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.GameEvent events = 1 [json_name = "events"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_events_size());
       i < n; i++) {
    const auto& repfield = this_._internal_events().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.EventHistoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EventHistoryResponse::ByteSizeLong(const MessageLite& base) {
  const EventHistoryResponse& this_ = static_cast<const EventHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EventHistoryResponse::ByteSizeLong() const {
  const EventHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.EventHistoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.GameEvent events = 1 [json_name = "events"];
    {
      total_size += 1UL * this_._internal_events_size();
      for (const auto& msg : this_._internal_events()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_count = 2 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EventHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EventHistoryResponse*>(&to_msg);
  auto& from = static_cast<const EventHistoryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.EventHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_events()->MergeFrom(
      from._internal_events());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EventHistoryResponse::CopyFrom(const EventHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.EventHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EventHistoryResponse::InternalSwap(EventHistoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.events_.InternalSwap(&other->_impl_.events_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.total_count_)
      + sizeof(EventHistoryResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(EventHistoryResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata EventHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClearEventHistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClearEventHistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_._has_bits_);
};

ClearEventHistoryRequest::ClearEventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearEventHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ClearEventHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE ClearEventHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ClearEventHistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_types_{visibility, arena, from.event_types_},
        entity_id_(arena, from.entity_id_) {}

ClearEventHistoryRequest::ClearEventHistoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClearEventHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearEventHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClearEventHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.ClearEventHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE ClearEventHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_types_{visibility, arena},
        entity_id_(arena) {}

inline void ClearEventHistoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ClearEventHistoryRequest::~ClearEventHistoryRequest() {
  // @@protoc_insertion_point(destructor:seshat.ClearEventHistoryRequest)
  SharedDtor(*this);
}
inline void ClearEventHistoryRequest::SharedDtor(MessageLite& self) {
  ClearEventHistoryRequest& this_ = static_cast<ClearEventHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClearEventHistoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClearEventHistoryRequest(arena);
}
constexpr auto ClearEventHistoryRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_.event_types_) +
          decltype(ClearEventHistoryRequest::_impl_.event_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ClearEventHistoryRequest), alignof(ClearEventHistoryRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ClearEventHistoryRequest::PlacementNew_,
                                 sizeof(ClearEventHistoryRequest),
                                 alignof(ClearEventHistoryRequest));
  }
}
constexpr auto ClearEventHistoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClearEventHistoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClearEventHistoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClearEventHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClearEventHistoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClearEventHistoryRequest>(), &ClearEventHistoryRequest::ByteSizeLong,
              &ClearEventHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_._cached_size_),
          false,
      },
      &ClearEventHistoryRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClearEventHistoryRequest_class_data_ =
        ClearEventHistoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClearEventHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClearEventHistoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClearEventHistoryRequest_class_data_.tc_table);
  return ClearEventHistoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
ClearEventHistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ClearEventHistoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ClearEventHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_.entity_id_)}},
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_.event_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_.event_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(ClearEventHistoryRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\13\11\0\0\0\0\0"
    "seshat.ClearEventHistoryRequest"
    "event_types"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void ClearEventHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ClearEventHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClearEventHistoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClearEventHistoryRequest& this_ = static_cast<const ClearEventHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClearEventHistoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClearEventHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ClearEventHistoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string event_types = 1 [json_name = "eventTypes"];
  for (int i = 0, n = this_._internal_event_types_size(); i < n; ++i) {
    const auto& s = this_._internal_event_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ClearEventHistoryRequest.event_types");
    target = stream->WriteString(1, s, target);
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ClearEventHistoryRequest.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ClearEventHistoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClearEventHistoryRequest::ByteSizeLong(const MessageLite& base) {
  const ClearEventHistoryRequest& this_ = static_cast<const ClearEventHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClearEventHistoryRequest::ByteSizeLong() const {
  const ClearEventHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ClearEventHistoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string event_types = 1 [json_name = "eventTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_event_types().size());
      for (int i = 0, n = this_._internal_event_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_event_types().Get(i));
      }
    }
  }
   {
    // string entity_id = 2 [json_name = "entityId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClearEventHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClearEventHistoryRequest*>(&to_msg);
  auto& from = static_cast<const ClearEventHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ClearEventHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_types()->MergeFrom(from._internal_event_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_entity_id().empty()) {
      _this->_internal_set_entity_id(from._internal_entity_id());
    } else {
      if (_this->_impl_.entity_id_.IsDefault()) {
        _this->_internal_set_entity_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearEventHistoryRequest::CopyFrom(const ClearEventHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ClearEventHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClearEventHistoryRequest::InternalSwap(ClearEventHistoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.event_types_.InternalSwap(&other->_impl_.event_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
}

::google::protobuf::Metadata ClearEventHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ClearEventHistoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ClearEventHistoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_._has_bits_);
};

void ClearEventHistoryResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ClearEventHistoryResponse::ClearEventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearEventHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ClearEventHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE ClearEventHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ClearEventHistoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ClearEventHistoryResponse::ClearEventHistoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ClearEventHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ClearEventHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ClearEventHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.cleared_count_ = from._impl_.cleared_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.ClearEventHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE ClearEventHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ClearEventHistoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, cleared_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::cleared_count_));
}
ClearEventHistoryResponse::~ClearEventHistoryResponse() {
  // @@protoc_insertion_point(destructor:seshat.ClearEventHistoryResponse)
  SharedDtor(*this);
}
inline void ClearEventHistoryResponse::SharedDtor(MessageLite& self) {
  ClearEventHistoryResponse& this_ = static_cast<ClearEventHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ClearEventHistoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ClearEventHistoryResponse(arena);
}
constexpr auto ClearEventHistoryResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ClearEventHistoryResponse),
                                            alignof(ClearEventHistoryResponse));
}
constexpr auto ClearEventHistoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ClearEventHistoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ClearEventHistoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ClearEventHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ClearEventHistoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ClearEventHistoryResponse>(), &ClearEventHistoryResponse::ByteSizeLong,
              &ClearEventHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_._cached_size_),
          false,
      },
      &ClearEventHistoryResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ClearEventHistoryResponse_class_data_ =
        ClearEventHistoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ClearEventHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ClearEventHistoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ClearEventHistoryResponse_class_data_.tc_table);
  return ClearEventHistoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2>
ClearEventHistoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ClearEventHistoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ClearEventHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.status_)}},
    // int32 cleared_count = 1 [json_name = "clearedCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ClearEventHistoryResponse, _impl_.cleared_count_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.cleared_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 cleared_count = 1 [json_name = "clearedCount"];
    {PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.cleared_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ClearEventHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ClearEventHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.cleared_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ClearEventHistoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ClearEventHistoryResponse& this_ = static_cast<const ClearEventHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ClearEventHistoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ClearEventHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ClearEventHistoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 cleared_count = 1 [json_name = "clearedCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_cleared_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_cleared_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ClearEventHistoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ClearEventHistoryResponse::ByteSizeLong(const MessageLite& base) {
  const ClearEventHistoryResponse& this_ = static_cast<const ClearEventHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ClearEventHistoryResponse::ByteSizeLong() const {
  const ClearEventHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ClearEventHistoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 cleared_count = 1 [json_name = "clearedCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_cleared_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_cleared_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ClearEventHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ClearEventHistoryResponse*>(&to_msg);
  auto& from = static_cast<const ClearEventHistoryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ClearEventHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_cleared_count() != 0) {
        _this->_impl_.cleared_count_ = from._impl_.cleared_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ClearEventHistoryResponse::CopyFrom(const ClearEventHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ClearEventHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ClearEventHistoryResponse::InternalSwap(ClearEventHistoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.cleared_count_)
      + sizeof(ClearEventHistoryResponse::_impl_.cleared_count_)
      - PROTOBUF_FIELD_OFFSET(ClearEventHistoryResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ClearEventHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSubscriptionsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSubscriptionsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSubscriptionsRequest, _impl_._has_bits_);
};

GetSubscriptionsRequest::GetSubscriptionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubscriptionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetSubscriptionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetSubscriptionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetSubscriptionsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subscriber_id_(arena, from.subscriber_id_) {}

GetSubscriptionsRequest::GetSubscriptionsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSubscriptionsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubscriptionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSubscriptionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.GetSubscriptionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetSubscriptionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subscriber_id_(arena) {}

inline void GetSubscriptionsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetSubscriptionsRequest::~GetSubscriptionsRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetSubscriptionsRequest)
  SharedDtor(*this);
}
inline void GetSubscriptionsRequest::SharedDtor(MessageLite& self) {
  GetSubscriptionsRequest& this_ = static_cast<GetSubscriptionsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSubscriptionsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSubscriptionsRequest(arena);
}
constexpr auto GetSubscriptionsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetSubscriptionsRequest),
                                            alignof(GetSubscriptionsRequest));
}
constexpr auto GetSubscriptionsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSubscriptionsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSubscriptionsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSubscriptionsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSubscriptionsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSubscriptionsRequest>(), &GetSubscriptionsRequest::ByteSizeLong,
              &GetSubscriptionsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSubscriptionsRequest, _impl_._cached_size_),
          false,
      },
      &GetSubscriptionsRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSubscriptionsRequest_class_data_ =
        GetSubscriptionsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSubscriptionsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSubscriptionsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSubscriptionsRequest_class_data_.tc_table);
  return GetSubscriptionsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2>
GetSubscriptionsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSubscriptionsRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetSubscriptionsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetSubscriptionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string subscriber_id = 1 [json_name = "subscriberId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetSubscriptionsRequest, _impl_.subscriber_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string subscriber_id = 1 [json_name = "subscriberId"];
    {PROTOBUF_FIELD_OFFSET(GetSubscriptionsRequest, _impl_.subscriber_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\15\0\0\0\0\0\0"
    "seshat.GetSubscriptionsRequest"
    "subscriber_id"
  }},
};
PROTOBUF_NOINLINE void GetSubscriptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetSubscriptionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.subscriber_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSubscriptionsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSubscriptionsRequest& this_ = static_cast<const GetSubscriptionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSubscriptionsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSubscriptionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetSubscriptionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string subscriber_id = 1 [json_name = "subscriberId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_subscriber_id().empty()) {
      const ::std::string& _s = this_._internal_subscriber_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetSubscriptionsRequest.subscriber_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetSubscriptionsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSubscriptionsRequest::ByteSizeLong(const MessageLite& base) {
  const GetSubscriptionsRequest& this_ = static_cast<const GetSubscriptionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSubscriptionsRequest::ByteSizeLong() const {
  const GetSubscriptionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetSubscriptionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string subscriber_id = 1 [json_name = "subscriberId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_subscriber_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_subscriber_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSubscriptionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSubscriptionsRequest*>(&to_msg);
  auto& from = static_cast<const GetSubscriptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetSubscriptionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_subscriber_id().empty()) {
      _this->_internal_set_subscriber_id(from._internal_subscriber_id());
    } else {
      if (_this->_impl_.subscriber_id_.IsDefault()) {
        _this->_internal_set_subscriber_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubscriptionsRequest::CopyFrom(const GetSubscriptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetSubscriptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSubscriptionsRequest::InternalSwap(GetSubscriptionsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
}

::google::protobuf::Metadata GetSubscriptionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetSubscriptionsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetSubscriptionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_._has_bits_);
};

void GetSubscriptionsResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetSubscriptionsResponse::GetSubscriptionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubscriptionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetSubscriptionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetSubscriptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetSubscriptionsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subscriptions_{visibility, arena, from.subscriptions_} {}

GetSubscriptionsResponse::GetSubscriptionsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetSubscriptionsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetSubscriptionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetSubscriptionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetSubscriptionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetSubscriptionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        subscriptions_{visibility, arena} {}

inline void GetSubscriptionsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
GetSubscriptionsResponse::~GetSubscriptionsResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetSubscriptionsResponse)
  SharedDtor(*this);
}
inline void GetSubscriptionsResponse::SharedDtor(MessageLite& self) {
  GetSubscriptionsResponse& this_ = static_cast<GetSubscriptionsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetSubscriptionsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetSubscriptionsResponse(arena);
}
constexpr auto GetSubscriptionsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_.subscriptions_) +
          decltype(GetSubscriptionsResponse::_impl_.subscriptions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetSubscriptionsResponse), alignof(GetSubscriptionsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetSubscriptionsResponse::PlacementNew_,
                                 sizeof(GetSubscriptionsResponse),
                                 alignof(GetSubscriptionsResponse));
  }
}
constexpr auto GetSubscriptionsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetSubscriptionsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetSubscriptionsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetSubscriptionsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetSubscriptionsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetSubscriptionsResponse>(), &GetSubscriptionsResponse::ByteSizeLong,
              &GetSubscriptionsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_._cached_size_),
          false,
      },
      &GetSubscriptionsResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetSubscriptionsResponse_class_data_ =
        GetSubscriptionsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetSubscriptionsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetSubscriptionsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetSubscriptionsResponse_class_data_.tc_table);
  return GetSubscriptionsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
GetSubscriptionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetSubscriptionsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetSubscriptionsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_.status_)}},
    // repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_.subscriptions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
    {PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_.subscriptions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetSubscriptionsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Subscription>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetSubscriptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetSubscriptionsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subscriptions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetSubscriptionsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetSubscriptionsResponse& this_ = static_cast<const GetSubscriptionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetSubscriptionsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetSubscriptionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetSubscriptionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_subscriptions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_subscriptions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetSubscriptionsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetSubscriptionsResponse::ByteSizeLong(const MessageLite& base) {
  const GetSubscriptionsResponse& this_ = static_cast<const GetSubscriptionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetSubscriptionsResponse::ByteSizeLong() const {
  const GetSubscriptionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetSubscriptionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
    {
      total_size += 1UL * this_._internal_subscriptions_size();
      for (const auto& msg : this_._internal_subscriptions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .seshat.Result status = 2 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetSubscriptionsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetSubscriptionsResponse*>(&to_msg);
  auto& from = static_cast<const GetSubscriptionsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetSubscriptionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_subscriptions()->MergeFrom(
      from._internal_subscriptions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSubscriptionsResponse::CopyFrom(const GetSubscriptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetSubscriptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetSubscriptionsResponse::InternalSwap(GetSubscriptionsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.subscriptions_.InternalSwap(&other->_impl_.subscriptions_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata GetSubscriptionsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Subscription::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Subscription>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Subscription, _impl_._has_bits_);
};

Subscription::Subscription(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subscription_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.Subscription)
}
PROTOBUF_NDEBUG_INLINE Subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::Subscription& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        event_types_{visibility, arena, from.event_types_},
        id_(arena, from.id_),
        subscriber_id_(arena, from.subscriber_id_) {}

Subscription::Subscription(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Subscription& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Subscription_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Subscription* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_timestamp_),
           offsetof(Impl_, events_received_) -
               offsetof(Impl_, created_timestamp_) +
               sizeof(Impl_::events_received_));

  // @@protoc_insertion_point(copy_constructor:seshat.Subscription)
}
PROTOBUF_NDEBUG_INLINE Subscription::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        event_types_{visibility, arena},
        id_(arena),
        subscriber_id_(arena) {}

inline void Subscription::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_timestamp_),
           0,
           offsetof(Impl_, events_received_) -
               offsetof(Impl_, created_timestamp_) +
               sizeof(Impl_::events_received_));
}
Subscription::~Subscription() {
  // @@protoc_insertion_point(destructor:seshat.Subscription)
  SharedDtor(*this);
}
inline void Subscription::SharedDtor(MessageLite& self) {
  Subscription& this_ = static_cast<Subscription&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.subscriber_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Subscription::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Subscription(arena);
}
constexpr auto Subscription::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Subscription, _impl_.event_types_) +
          decltype(Subscription::_impl_.event_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Subscription), alignof(Subscription), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Subscription::PlacementNew_,
                                 sizeof(Subscription),
                                 alignof(Subscription));
  }
}
constexpr auto Subscription::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Subscription_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Subscription::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Subscription>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Subscription::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Subscription>(), &Subscription::ByteSizeLong,
              &Subscription::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Subscription, _impl_._cached_size_),
          false,
      },
      &Subscription::kDescriptorMethods,
      &descriptor_table_seshat_2fevents_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Subscription_class_data_ =
        Subscription::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Subscription::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Subscription_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Subscription_class_data_.tc_table);
  return Subscription_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 54, 2>
Subscription::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Subscription, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Subscription_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::Subscription>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.id_)}},
    // string subscriber_id = 2 [json_name = "subscriberId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.subscriber_id_)}},
    // repeated string event_types = 3 [json_name = "eventTypes"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.event_types_)}},
    // int32 priority = 4 [json_name = "priority"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Subscription, _impl_.priority_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.priority_)}},
    // int64 created_timestamp = 5 [json_name = "createdTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Subscription, _impl_.created_timestamp_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.created_timestamp_)}},
    // int32 events_received = 6 [json_name = "eventsReceived"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Subscription, _impl_.events_received_), 4>(),
     {48, 4, 0, PROTOBUF_FIELD_OFFSET(Subscription, _impl_.events_received_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string subscriber_id = 2 [json_name = "subscriberId"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.subscriber_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string event_types = 3 [json_name = "eventTypes"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.event_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int32 priority = 4 [json_name = "priority"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.priority_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 created_timestamp = 5 [json_name = "createdTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.created_timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int32 events_received = 6 [json_name = "eventsReceived"];
    {PROTOBUF_FIELD_OFFSET(Subscription, _impl_.events_received_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\23\2\15\13\0\0\0\0"
    "seshat.Subscription"
    "id"
    "subscriber_id"
    "event_types"
  }},
};
PROTOBUF_NOINLINE void Subscription::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.Subscription)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.event_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.subscriber_id_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cu) != 0) {
    ::memset(&_impl_.created_timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.events_received_) -
        reinterpret_cast<char*>(&_impl_.created_timestamp_)) + sizeof(_impl_.events_received_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Subscription::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Subscription& this_ = static_cast<const Subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Subscription::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.Subscription)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Subscription.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string subscriber_id = 2 [json_name = "subscriberId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_subscriber_id().empty()) {
      const ::std::string& _s = this_._internal_subscriber_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Subscription.subscriber_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated string event_types = 3 [json_name = "eventTypes"];
  for (int i = 0, n = this_._internal_event_types_size(); i < n; ++i) {
    const auto& s = this_._internal_event_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Subscription.event_types");
    target = stream->WriteString(3, s, target);
  }

  // int32 priority = 4 [json_name = "priority"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_priority() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_priority(), target);
    }
  }

  // int64 created_timestamp = 5 [json_name = "createdTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_created_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_created_timestamp(), target);
    }
  }

  // int32 events_received = 6 [json_name = "eventsReceived"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_events_received() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_events_received(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.Subscription)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Subscription::ByteSizeLong(const MessageLite& base) {
  const Subscription& this_ = static_cast<const Subscription&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Subscription::ByteSizeLong() const {
  const Subscription& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.Subscription)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string event_types = 3 [json_name = "eventTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_event_types().size());
      for (int i = 0, n = this_._internal_event_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_event_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string subscriber_id = 2 [json_name = "subscriberId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_subscriber_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_subscriber_id());
      }
    }
    // int64 created_timestamp = 5 [json_name = "createdTimestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_created_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_timestamp());
      }
    }
    // int32 priority = 4 [json_name = "priority"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_priority() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_priority());
      }
    }
    // int32 events_received = 6 [json_name = "eventsReceived"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_events_received() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_events_received());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Subscription::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Subscription*>(&to_msg);
  auto& from = static_cast<const Subscription&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.Subscription)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_event_types()->MergeFrom(from._internal_event_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_subscriber_id().empty()) {
        _this->_internal_set_subscriber_id(from._internal_subscriber_id());
      } else {
        if (_this->_impl_.subscriber_id_.IsDefault()) {
          _this->_internal_set_subscriber_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_created_timestamp() != 0) {
        _this->_impl_.created_timestamp_ = from._impl_.created_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_priority() != 0) {
        _this->_impl_.priority_ = from._impl_.priority_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_events_received() != 0) {
        _this->_impl_.events_received_ = from._impl_.events_received_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Subscription::CopyFrom(const Subscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.Subscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Subscription::InternalSwap(Subscription* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.event_types_.InternalSwap(&other->_impl_.event_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subscriber_id_, &other->_impl_.subscriber_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Subscription, _impl_.events_received_)
      + sizeof(Subscription::_impl_.events_received_)
      - PROTOBUF_FIELD_OFFSET(Subscription, _impl_.created_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.created_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.created_timestamp_));
}

::google::protobuf::Metadata Subscription::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_seshat_2fevents_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
