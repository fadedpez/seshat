// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: seshat/spatial.proto
#ifndef GRPC_seshat_2fspatial_2eproto__INCLUDED
#define GRPC_seshat_2fspatial_2eproto__INCLUDED

#include "seshat/spatial.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace seshat {

// Spatial positioning service - exposes all spatial toolkit functionality
class SpatialService final {
 public:
  static constexpr char const* service_full_name() {
    return "seshat.SpatialService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Room management
    virtual ::grpc::Status CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::seshat::CreateRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>> AsyncCreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>>(AsyncCreateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>> PrepareAsyncCreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>>(PrepareAsyncCreateRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::seshat::GetRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>> AsyncGetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>>(AsyncGetRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>> PrepareAsyncGetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>>(PrepareAsyncGetRoomRaw(context, request, cq));
    }
    virtual ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::seshat::ListRoomsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::seshat::DeleteRoomResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    // Entity placement and movement
    virtual ::grpc::Status PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::seshat::PlaceEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>> AsyncPlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>>(AsyncPlaceEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>> PrepareAsyncPlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>>(PrepareAsyncPlaceEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::seshat::MoveEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>> AsyncMoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>>(AsyncMoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>> PrepareAsyncMoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>>(PrepareAsyncMoveEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::seshat::RemoveEntityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>> AsyncRemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>>(AsyncRemoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>> PrepareAsyncRemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>>(PrepareAsyncRemoveEntityRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::seshat::GetEntityPositionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>> AsyncGetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>>(AsyncGetEntityPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>> PrepareAsyncGetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>>(PrepareAsyncGetEntityPositionRaw(context, request, cq));
    }
    // Spatial queries
    virtual ::grpc::Status GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::seshat::GetEntitiesAtResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>> AsyncGetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>>(AsyncGetEntitiesAtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>> PrepareAsyncGetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>>(PrepareAsyncGetEntitiesAtRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::seshat::GetEntitiesInRangeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>> AsyncGetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>>(AsyncGetEntitiesInRangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>> PrepareAsyncGetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>>(PrepareAsyncGetEntitiesInRangeRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::seshat::GetEntitiesInAreaResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>> AsyncGetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>>(AsyncGetEntitiesInAreaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>> PrepareAsyncGetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>>(PrepareAsyncGetEntitiesInAreaRaw(context, request, cq));
    }
    virtual ::grpc::Status GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::seshat::GetEntitiesInLineResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>> AsyncGetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>>(AsyncGetEntitiesInLineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>> PrepareAsyncGetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>>(PrepareAsyncGetEntitiesInLineRaw(context, request, cq));
    }
    // Pathfinding and movement
    virtual ::grpc::Status FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::seshat::FindPathResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>> AsyncFindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>>(AsyncFindPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>> PrepareAsyncFindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>>(PrepareAsyncFindPathRaw(context, request, cq));
    }
    virtual ::grpc::Status GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::seshat::GetDistanceResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>> AsyncGetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>>(AsyncGetDistanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>> PrepareAsyncGetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>>(PrepareAsyncGetDistanceRaw(context, request, cq));
    }
    virtual ::grpc::Status CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::seshat::LineOfSightResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>> AsyncCheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>>(AsyncCheckLineOfSightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>> PrepareAsyncCheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>>(PrepareAsyncCheckLineOfSightRaw(context, request, cq));
    }
    // Multi-room orchestration
    virtual ::grpc::Status CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::seshat::CreateConnectionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>> AsyncCreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>>(AsyncCreateConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>> PrepareAsyncCreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>>(PrepareAsyncCreateConnectionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::seshat::GetConnectionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>> AsyncGetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>>(AsyncGetConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>> PrepareAsyncGetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>>(PrepareAsyncGetConnectionsRaw(context, request, cq));
    }
    virtual ::grpc::Status MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::seshat::MoveEntityBetweenRoomsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>> AsyncMoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>>(AsyncMoveEntityBetweenRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>> PrepareAsyncMoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>>(PrepareAsyncMoveEntityBetweenRoomsRaw(context, request, cq));
    }
    // Grid system queries
    virtual ::grpc::Status GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::seshat::GetValidPositionsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>> AsyncGetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>>(AsyncGetValidPositionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>> PrepareAsyncGetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>>(PrepareAsyncGetValidPositionsRaw(context, request, cq));
    }
    virtual ::grpc::Status IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::seshat::IsValidPositionResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>> AsyncIsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>>(AsyncIsValidPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>> PrepareAsyncIsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>>(PrepareAsyncIsValidPositionRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Room management
      virtual void CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Entity placement and movement
      virtual void PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Spatial queries
      virtual void GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Pathfinding and movement
      virtual void FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Multi-room orchestration
      virtual void CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Grid system queries
      virtual void GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>* AsyncCreateRoomRaw(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateRoomResponse>* PrepareAsyncCreateRoomRaw(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>* AsyncGetRoomRaw(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetRoomResponse>* PrepareAsyncGetRoomRaw(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>* AsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::PlaceEntityResponse>* PrepareAsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>* AsyncMoveEntityRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityResponse>* PrepareAsyncMoveEntityRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>* AsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::RemoveEntityResponse>* PrepareAsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>* AsyncGetEntityPositionRaw(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntityPositionResponse>* PrepareAsyncGetEntityPositionRaw(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>* AsyncGetEntitiesAtRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesAtResponse>* PrepareAsyncGetEntitiesAtRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>* AsyncGetEntitiesInRangeRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInRangeResponse>* PrepareAsyncGetEntitiesInRangeRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>* AsyncGetEntitiesInAreaRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInAreaResponse>* PrepareAsyncGetEntitiesInAreaRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>* AsyncGetEntitiesInLineRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetEntitiesInLineResponse>* PrepareAsyncGetEntitiesInLineRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>* AsyncFindPathRaw(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::FindPathResponse>* PrepareAsyncFindPathRaw(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>* AsyncGetDistanceRaw(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetDistanceResponse>* PrepareAsyncGetDistanceRaw(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>* AsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::LineOfSightResponse>* PrepareAsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>* AsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::CreateConnectionResponse>* PrepareAsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>* AsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetConnectionsResponse>* PrepareAsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>* AsyncMoveEntityBetweenRoomsRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::MoveEntityBetweenRoomsResponse>* PrepareAsyncMoveEntityBetweenRoomsRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>* AsyncGetValidPositionsRaw(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::GetValidPositionsResponse>* PrepareAsyncGetValidPositionsRaw(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>* AsyncIsValidPositionRaw(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::seshat::IsValidPositionResponse>* PrepareAsyncIsValidPositionRaw(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::seshat::CreateRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>> AsyncCreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>>(AsyncCreateRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>> PrepareAsyncCreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>>(PrepareAsyncCreateRoomRaw(context, request, cq));
    }
    ::grpc::Status GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::seshat::GetRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>> AsyncGetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>>(AsyncGetRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>> PrepareAsyncGetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>>(PrepareAsyncGetRoomRaw(context, request, cq));
    }
    ::grpc::Status ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::seshat::ListRoomsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>> AsyncListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>>(AsyncListRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>> PrepareAsyncListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>>(PrepareAsyncListRoomsRaw(context, request, cq));
    }
    ::grpc::Status DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::seshat::DeleteRoomResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>> AsyncDeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>>(AsyncDeleteRoomRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>> PrepareAsyncDeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>>(PrepareAsyncDeleteRoomRaw(context, request, cq));
    }
    ::grpc::Status PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::seshat::PlaceEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>> AsyncPlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>>(AsyncPlaceEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>> PrepareAsyncPlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>>(PrepareAsyncPlaceEntityRaw(context, request, cq));
    }
    ::grpc::Status MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::seshat::MoveEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>> AsyncMoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>>(AsyncMoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>> PrepareAsyncMoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>>(PrepareAsyncMoveEntityRaw(context, request, cq));
    }
    ::grpc::Status RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::seshat::RemoveEntityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>> AsyncRemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>>(AsyncRemoveEntityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>> PrepareAsyncRemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>>(PrepareAsyncRemoveEntityRaw(context, request, cq));
    }
    ::grpc::Status GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::seshat::GetEntityPositionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>> AsyncGetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>>(AsyncGetEntityPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>> PrepareAsyncGetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>>(PrepareAsyncGetEntityPositionRaw(context, request, cq));
    }
    ::grpc::Status GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::seshat::GetEntitiesAtResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>> AsyncGetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>>(AsyncGetEntitiesAtRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>> PrepareAsyncGetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>>(PrepareAsyncGetEntitiesAtRaw(context, request, cq));
    }
    ::grpc::Status GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::seshat::GetEntitiesInRangeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>> AsyncGetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>>(AsyncGetEntitiesInRangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>> PrepareAsyncGetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>>(PrepareAsyncGetEntitiesInRangeRaw(context, request, cq));
    }
    ::grpc::Status GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::seshat::GetEntitiesInAreaResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>> AsyncGetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>>(AsyncGetEntitiesInAreaRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>> PrepareAsyncGetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>>(PrepareAsyncGetEntitiesInAreaRaw(context, request, cq));
    }
    ::grpc::Status GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::seshat::GetEntitiesInLineResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>> AsyncGetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>>(AsyncGetEntitiesInLineRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>> PrepareAsyncGetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>>(PrepareAsyncGetEntitiesInLineRaw(context, request, cq));
    }
    ::grpc::Status FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::seshat::FindPathResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>> AsyncFindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>>(AsyncFindPathRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>> PrepareAsyncFindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>>(PrepareAsyncFindPathRaw(context, request, cq));
    }
    ::grpc::Status GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::seshat::GetDistanceResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>> AsyncGetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>>(AsyncGetDistanceRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>> PrepareAsyncGetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>>(PrepareAsyncGetDistanceRaw(context, request, cq));
    }
    ::grpc::Status CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::seshat::LineOfSightResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>> AsyncCheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>>(AsyncCheckLineOfSightRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>> PrepareAsyncCheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>>(PrepareAsyncCheckLineOfSightRaw(context, request, cq));
    }
    ::grpc::Status CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::seshat::CreateConnectionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>> AsyncCreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>>(AsyncCreateConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>> PrepareAsyncCreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>>(PrepareAsyncCreateConnectionRaw(context, request, cq));
    }
    ::grpc::Status GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::seshat::GetConnectionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>> AsyncGetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>>(AsyncGetConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>> PrepareAsyncGetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>>(PrepareAsyncGetConnectionsRaw(context, request, cq));
    }
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::seshat::MoveEntityBetweenRoomsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>> AsyncMoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>>(AsyncMoveEntityBetweenRoomsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>> PrepareAsyncMoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>>(PrepareAsyncMoveEntityBetweenRoomsRaw(context, request, cq));
    }
    ::grpc::Status GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::seshat::GetValidPositionsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>> AsyncGetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>>(AsyncGetValidPositionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>> PrepareAsyncGetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>>(PrepareAsyncGetValidPositionsRaw(context, request, cq));
    }
    ::grpc::Status IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::seshat::IsValidPositionResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>> AsyncIsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>>(AsyncIsValidPositionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>> PrepareAsyncIsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>>(PrepareAsyncIsValidPositionRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateRoom(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRoom(::grpc::ClientContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response, std::function<void(::grpc::Status)>) override;
      void ListRooms(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteRoom(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void PlaceEntity(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void MoveEntity(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveEntity(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntityPosition(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitiesAt(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitiesInRange(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitiesInArea(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEntitiesInLine(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response, std::function<void(::grpc::Status)>) override;
      void FindPath(::grpc::ClientContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDistance(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckLineOfSight(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateConnection(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetConnections(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response, std::function<void(::grpc::Status)>) override;
      void MoveEntityBetweenRooms(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetValidPositions(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response, std::function<void(::grpc::Status)>) override;
      void IsValidPosition(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>* AsyncCreateRoomRaw(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::CreateRoomResponse>* PrepareAsyncCreateRoomRaw(::grpc::ClientContext* context, const ::seshat::CreateRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>* AsyncGetRoomRaw(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetRoomResponse>* PrepareAsyncGetRoomRaw(::grpc::ClientContext* context, const ::seshat::GetRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>* AsyncListRoomsRaw(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::ListRoomsResponse>* PrepareAsyncListRoomsRaw(::grpc::ClientContext* context, const ::seshat::ListRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>* AsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::DeleteRoomResponse>* PrepareAsyncDeleteRoomRaw(::grpc::ClientContext* context, const ::seshat::DeleteRoomRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>* AsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::PlaceEntityResponse>* PrepareAsyncPlaceEntityRaw(::grpc::ClientContext* context, const ::seshat::PlaceEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>* AsyncMoveEntityRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityResponse>* PrepareAsyncMoveEntityRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>* AsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::RemoveEntityResponse>* PrepareAsyncRemoveEntityRaw(::grpc::ClientContext* context, const ::seshat::RemoveEntityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>* AsyncGetEntityPositionRaw(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntityPositionResponse>* PrepareAsyncGetEntityPositionRaw(::grpc::ClientContext* context, const ::seshat::GetEntityPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>* AsyncGetEntitiesAtRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesAtResponse>* PrepareAsyncGetEntitiesAtRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesAtRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>* AsyncGetEntitiesInRangeRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInRangeResponse>* PrepareAsyncGetEntitiesInRangeRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInRangeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>* AsyncGetEntitiesInAreaRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInAreaResponse>* PrepareAsyncGetEntitiesInAreaRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInAreaRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>* AsyncGetEntitiesInLineRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetEntitiesInLineResponse>* PrepareAsyncGetEntitiesInLineRaw(::grpc::ClientContext* context, const ::seshat::GetEntitiesInLineRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>* AsyncFindPathRaw(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::FindPathResponse>* PrepareAsyncFindPathRaw(::grpc::ClientContext* context, const ::seshat::FindPathRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>* AsyncGetDistanceRaw(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetDistanceResponse>* PrepareAsyncGetDistanceRaw(::grpc::ClientContext* context, const ::seshat::GetDistanceRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>* AsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::LineOfSightResponse>* PrepareAsyncCheckLineOfSightRaw(::grpc::ClientContext* context, const ::seshat::LineOfSightRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>* AsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::CreateConnectionResponse>* PrepareAsyncCreateConnectionRaw(::grpc::ClientContext* context, const ::seshat::CreateConnectionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>* AsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetConnectionsResponse>* PrepareAsyncGetConnectionsRaw(::grpc::ClientContext* context, const ::seshat::GetConnectionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>* AsyncMoveEntityBetweenRoomsRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::MoveEntityBetweenRoomsResponse>* PrepareAsyncMoveEntityBetweenRoomsRaw(::grpc::ClientContext* context, const ::seshat::MoveEntityBetweenRoomsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>* AsyncGetValidPositionsRaw(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::GetValidPositionsResponse>* PrepareAsyncGetValidPositionsRaw(::grpc::ClientContext* context, const ::seshat::GetValidPositionsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>* AsyncIsValidPositionRaw(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::seshat::IsValidPositionResponse>* PrepareAsyncIsValidPositionRaw(::grpc::ClientContext* context, const ::seshat::IsValidPositionRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_ListRooms_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteRoom_;
    const ::grpc::internal::RpcMethod rpcmethod_PlaceEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveEntity_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntityPosition_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitiesAt_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitiesInRange_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitiesInArea_;
    const ::grpc::internal::RpcMethod rpcmethod_GetEntitiesInLine_;
    const ::grpc::internal::RpcMethod rpcmethod_FindPath_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDistance_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckLineOfSight_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateConnection_;
    const ::grpc::internal::RpcMethod rpcmethod_GetConnections_;
    const ::grpc::internal::RpcMethod rpcmethod_MoveEntityBetweenRooms_;
    const ::grpc::internal::RpcMethod rpcmethod_GetValidPositions_;
    const ::grpc::internal::RpcMethod rpcmethod_IsValidPosition_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Room management
    virtual ::grpc::Status CreateRoom(::grpc::ServerContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response);
    virtual ::grpc::Status GetRoom(::grpc::ServerContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response);
    virtual ::grpc::Status ListRooms(::grpc::ServerContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response);
    virtual ::grpc::Status DeleteRoom(::grpc::ServerContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response);
    // Entity placement and movement
    virtual ::grpc::Status PlaceEntity(::grpc::ServerContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response);
    virtual ::grpc::Status MoveEntity(::grpc::ServerContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response);
    virtual ::grpc::Status RemoveEntity(::grpc::ServerContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response);
    virtual ::grpc::Status GetEntityPosition(::grpc::ServerContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response);
    // Spatial queries
    virtual ::grpc::Status GetEntitiesAt(::grpc::ServerContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response);
    virtual ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response);
    virtual ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response);
    virtual ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response);
    // Pathfinding and movement
    virtual ::grpc::Status FindPath(::grpc::ServerContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response);
    virtual ::grpc::Status GetDistance(::grpc::ServerContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response);
    virtual ::grpc::Status CheckLineOfSight(::grpc::ServerContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response);
    // Multi-room orchestration
    virtual ::grpc::Status CreateConnection(::grpc::ServerContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response);
    virtual ::grpc::Status GetConnections(::grpc::ServerContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response);
    virtual ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response);
    // Grid system queries
    virtual ::grpc::Status GetValidPositions(::grpc::ServerContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response);
    virtual ::grpc::Status IsValidPosition(::grpc::ServerContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateRoom() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoom(::grpc::ServerContext* context, ::seshat::CreateRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::CreateRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoom() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoom(::grpc::ServerContext* context, ::seshat::GetRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListRooms() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::seshat::ListRoomsRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::ListRoomsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::seshat::DeleteRoomRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::DeleteRoomResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaceEntity(::grpc::ServerContext* context, ::seshat::PlaceEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::PlaceEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveEntity() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntity(::grpc::ServerContext* context, ::seshat::MoveEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::MoveEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveEntity(::grpc::ServerContext* context, ::seshat::RemoveEntityRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::RemoveEntityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityPosition(::grpc::ServerContext* context, ::seshat::GetEntityPositionRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetEntityPositionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesAt(::grpc::ServerContext* context, ::seshat::GetEntitiesAtRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetEntitiesAtResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInRange(::grpc::ServerContext* context, ::seshat::GetEntitiesInRangeRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetEntitiesInRangeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInArea(::grpc::ServerContext* context, ::seshat::GetEntitiesInAreaRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetEntitiesInAreaResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInLine(::grpc::ServerContext* context, ::seshat::GetEntitiesInLineRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetEntitiesInLineResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FindPath() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPath(::grpc::ServerContext* context, ::seshat::FindPathRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::FindPathResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDistance() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDistance(::grpc::ServerContext* context, ::seshat::GetDistanceRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetDistanceResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckLineOfSight(::grpc::ServerContext* context, ::seshat::LineOfSightRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::LineOfSightResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateConnection() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConnection(::grpc::ServerContext* context, ::seshat::CreateConnectionRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::CreateConnectionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetConnections() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConnections(::grpc::ServerContext* context, ::seshat::GetConnectionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetConnectionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntityBetweenRooms(::grpc::ServerContext* context, ::seshat::MoveEntityBetweenRoomsRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::MoveEntityBetweenRoomsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetValidPositions(::grpc::ServerContext* context, ::seshat::GetValidPositionsRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::GetValidPositionsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsValidPosition(::grpc::ServerContext* context, ::seshat::IsValidPositionRequest* request, ::grpc::ServerAsyncResponseWriter< ::seshat::IsValidPositionResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateRoom<WithAsyncMethod_GetRoom<WithAsyncMethod_ListRooms<WithAsyncMethod_DeleteRoom<WithAsyncMethod_PlaceEntity<WithAsyncMethod_MoveEntity<WithAsyncMethod_RemoveEntity<WithAsyncMethod_GetEntityPosition<WithAsyncMethod_GetEntitiesAt<WithAsyncMethod_GetEntitiesInRange<WithAsyncMethod_GetEntitiesInArea<WithAsyncMethod_GetEntitiesInLine<WithAsyncMethod_FindPath<WithAsyncMethod_GetDistance<WithAsyncMethod_CheckLineOfSight<WithAsyncMethod_CreateConnection<WithAsyncMethod_GetConnections<WithAsyncMethod_MoveEntityBetweenRooms<WithAsyncMethod_GetValidPositions<WithAsyncMethod_IsValidPosition<Service > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateRoom() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::CreateRoomRequest, ::seshat::CreateRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::CreateRoomRequest* request, ::seshat::CreateRoomResponse* response) { return this->CreateRoom(context, request, response); }));}
    void SetMessageAllocatorFor_CreateRoom(
        ::grpc::MessageAllocator< ::seshat::CreateRoomRequest, ::seshat::CreateRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::CreateRoomRequest, ::seshat::CreateRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoom() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetRoomRequest, ::seshat::GetRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetRoomRequest* request, ::seshat::GetRoomResponse* response) { return this->GetRoom(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoom(
        ::grpc::MessageAllocator< ::seshat::GetRoomRequest, ::seshat::GetRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetRoomRequest, ::seshat::GetRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::ListRoomsRequest, ::seshat::ListRoomsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::ListRoomsRequest* request, ::seshat::ListRoomsResponse* response) { return this->ListRooms(context, request, response); }));}
    void SetMessageAllocatorFor_ListRooms(
        ::grpc::MessageAllocator< ::seshat::ListRoomsRequest, ::seshat::ListRoomsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::ListRoomsRequest, ::seshat::ListRoomsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::DeleteRoomRequest, ::seshat::DeleteRoomResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::DeleteRoomRequest* request, ::seshat::DeleteRoomResponse* response) { return this->DeleteRoom(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteRoom(
        ::grpc::MessageAllocator< ::seshat::DeleteRoomRequest, ::seshat::DeleteRoomResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::DeleteRoomRequest, ::seshat::DeleteRoomResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::PlaceEntityRequest, ::seshat::PlaceEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::PlaceEntityRequest* request, ::seshat::PlaceEntityResponse* response) { return this->PlaceEntity(context, request, response); }));}
    void SetMessageAllocatorFor_PlaceEntity(
        ::grpc::MessageAllocator< ::seshat::PlaceEntityRequest, ::seshat::PlaceEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::PlaceEntityRequest, ::seshat::PlaceEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlaceEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveEntity() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::MoveEntityRequest, ::seshat::MoveEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::MoveEntityRequest* request, ::seshat::MoveEntityResponse* response) { return this->MoveEntity(context, request, response); }));}
    void SetMessageAllocatorFor_MoveEntity(
        ::grpc::MessageAllocator< ::seshat::MoveEntityRequest, ::seshat::MoveEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::MoveEntityRequest, ::seshat::MoveEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::RemoveEntityRequest, ::seshat::RemoveEntityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::RemoveEntityRequest* request, ::seshat::RemoveEntityResponse* response) { return this->RemoveEntity(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveEntity(
        ::grpc::MessageAllocator< ::seshat::RemoveEntityRequest, ::seshat::RemoveEntityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::RemoveEntityRequest, ::seshat::RemoveEntityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntityPositionRequest, ::seshat::GetEntityPositionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetEntityPositionRequest* request, ::seshat::GetEntityPositionResponse* response) { return this->GetEntityPosition(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntityPosition(
        ::grpc::MessageAllocator< ::seshat::GetEntityPositionRequest, ::seshat::GetEntityPositionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntityPositionRequest, ::seshat::GetEntityPositionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesAtRequest, ::seshat::GetEntitiesAtResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetEntitiesAtRequest* request, ::seshat::GetEntitiesAtResponse* response) { return this->GetEntitiesAt(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitiesAt(
        ::grpc::MessageAllocator< ::seshat::GetEntitiesAtRequest, ::seshat::GetEntitiesAtResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesAtRequest, ::seshat::GetEntitiesAtResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesAt(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInRangeRequest, ::seshat::GetEntitiesInRangeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetEntitiesInRangeRequest* request, ::seshat::GetEntitiesInRangeResponse* response) { return this->GetEntitiesInRange(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitiesInRange(
        ::grpc::MessageAllocator< ::seshat::GetEntitiesInRangeRequest, ::seshat::GetEntitiesInRangeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInRangeRequest, ::seshat::GetEntitiesInRangeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInRange(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInAreaRequest, ::seshat::GetEntitiesInAreaResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetEntitiesInAreaRequest* request, ::seshat::GetEntitiesInAreaResponse* response) { return this->GetEntitiesInArea(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitiesInArea(
        ::grpc::MessageAllocator< ::seshat::GetEntitiesInAreaRequest, ::seshat::GetEntitiesInAreaResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInAreaRequest, ::seshat::GetEntitiesInAreaResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInArea(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInLineRequest, ::seshat::GetEntitiesInLineResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetEntitiesInLineRequest* request, ::seshat::GetEntitiesInLineResponse* response) { return this->GetEntitiesInLine(context, request, response); }));}
    void SetMessageAllocatorFor_GetEntitiesInLine(
        ::grpc::MessageAllocator< ::seshat::GetEntitiesInLineRequest, ::seshat::GetEntitiesInLineResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetEntitiesInLineRequest, ::seshat::GetEntitiesInLineResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInLine(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FindPath() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::FindPathRequest, ::seshat::FindPathResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::FindPathRequest* request, ::seshat::FindPathResponse* response) { return this->FindPath(context, request, response); }));}
    void SetMessageAllocatorFor_FindPath(
        ::grpc::MessageAllocator< ::seshat::FindPathRequest, ::seshat::FindPathResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::FindPathRequest, ::seshat::FindPathResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPath(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDistance() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetDistanceRequest, ::seshat::GetDistanceResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetDistanceRequest* request, ::seshat::GetDistanceResponse* response) { return this->GetDistance(context, request, response); }));}
    void SetMessageAllocatorFor_GetDistance(
        ::grpc::MessageAllocator< ::seshat::GetDistanceRequest, ::seshat::GetDistanceResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetDistanceRequest, ::seshat::GetDistanceResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDistance(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::LineOfSightRequest, ::seshat::LineOfSightResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::LineOfSightRequest* request, ::seshat::LineOfSightResponse* response) { return this->CheckLineOfSight(context, request, response); }));}
    void SetMessageAllocatorFor_CheckLineOfSight(
        ::grpc::MessageAllocator< ::seshat::LineOfSightRequest, ::seshat::LineOfSightResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::LineOfSightRequest, ::seshat::LineOfSightResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckLineOfSight(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateConnection() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::CreateConnectionRequest, ::seshat::CreateConnectionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::CreateConnectionRequest* request, ::seshat::CreateConnectionResponse* response) { return this->CreateConnection(context, request, response); }));}
    void SetMessageAllocatorFor_CreateConnection(
        ::grpc::MessageAllocator< ::seshat::CreateConnectionRequest, ::seshat::CreateConnectionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::CreateConnectionRequest, ::seshat::CreateConnectionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetConnections() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetConnectionsRequest, ::seshat::GetConnectionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetConnectionsRequest* request, ::seshat::GetConnectionsResponse* response) { return this->GetConnections(context, request, response); }));}
    void SetMessageAllocatorFor_GetConnections(
        ::grpc::MessageAllocator< ::seshat::GetConnectionsRequest, ::seshat::GetConnectionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetConnectionsRequest, ::seshat::GetConnectionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::MoveEntityBetweenRoomsRequest, ::seshat::MoveEntityBetweenRoomsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::MoveEntityBetweenRoomsRequest* request, ::seshat::MoveEntityBetweenRoomsResponse* response) { return this->MoveEntityBetweenRooms(context, request, response); }));}
    void SetMessageAllocatorFor_MoveEntityBetweenRooms(
        ::grpc::MessageAllocator< ::seshat::MoveEntityBetweenRoomsRequest, ::seshat::MoveEntityBetweenRoomsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::MoveEntityBetweenRoomsRequest, ::seshat::MoveEntityBetweenRoomsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntityBetweenRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::GetValidPositionsRequest, ::seshat::GetValidPositionsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::GetValidPositionsRequest* request, ::seshat::GetValidPositionsResponse* response) { return this->GetValidPositions(context, request, response); }));}
    void SetMessageAllocatorFor_GetValidPositions(
        ::grpc::MessageAllocator< ::seshat::GetValidPositionsRequest, ::seshat::GetValidPositionsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::GetValidPositionsRequest, ::seshat::GetValidPositionsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetValidPositions(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::seshat::IsValidPositionRequest, ::seshat::IsValidPositionResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::seshat::IsValidPositionRequest* request, ::seshat::IsValidPositionResponse* response) { return this->IsValidPosition(context, request, response); }));}
    void SetMessageAllocatorFor_IsValidPosition(
        ::grpc::MessageAllocator< ::seshat::IsValidPositionRequest, ::seshat::IsValidPositionResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::seshat::IsValidPositionRequest, ::seshat::IsValidPositionResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsValidPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateRoom<WithCallbackMethod_GetRoom<WithCallbackMethod_ListRooms<WithCallbackMethod_DeleteRoom<WithCallbackMethod_PlaceEntity<WithCallbackMethod_MoveEntity<WithCallbackMethod_RemoveEntity<WithCallbackMethod_GetEntityPosition<WithCallbackMethod_GetEntitiesAt<WithCallbackMethod_GetEntitiesInRange<WithCallbackMethod_GetEntitiesInArea<WithCallbackMethod_GetEntitiesInLine<WithCallbackMethod_FindPath<WithCallbackMethod_GetDistance<WithCallbackMethod_CheckLineOfSight<WithCallbackMethod_CreateConnection<WithCallbackMethod_GetConnections<WithCallbackMethod_MoveEntityBetweenRooms<WithCallbackMethod_GetValidPositions<WithCallbackMethod_IsValidPosition<Service > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateRoom() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoom() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListRooms() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveEntity() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FindPath() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDistance() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateConnection() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetConnections() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateRoom() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoom() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListRooms() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListRooms(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteRoom(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPlaceEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveEntity() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveEntity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntityPosition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesAt(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInRange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInArea(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEntitiesInLine(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FindPath() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFindPath(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDistance() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDistance(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckLineOfSight(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateConnection() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConnection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetConnections() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetConnections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMoveEntityBetweenRooms(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetValidPositions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsValidPosition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateRoom() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoom() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListRooms() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListRooms(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteRoom(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteRoom(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->PlaceEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* PlaceEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveEntity() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveEntity(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveEntity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntityPosition(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntityPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitiesAt(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesAt(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitiesInRange(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInRange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitiesInArea(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInArea(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEntitiesInLine(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEntitiesInLine(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FindPath() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FindPath(context, request, response); }));
    }
    ~WithRawCallbackMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FindPath(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDistance() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDistance(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDistance(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckLineOfSight(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckLineOfSight(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateConnection() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateConnection(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetConnections() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetConnections(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MoveEntityBetweenRooms(context, request, response); }));
    }
    ~WithRawCallbackMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MoveEntityBetweenRooms(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetValidPositions(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetValidPositions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->IsValidPosition(context, request, response); }));
    }
    ~WithRawCallbackMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* IsValidPosition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateRoom() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::CreateRoomRequest, ::seshat::CreateRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::CreateRoomRequest, ::seshat::CreateRoomResponse>* streamer) {
                       return this->StreamedCreateRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateRoom(::grpc::ServerContext* /*context*/, const ::seshat::CreateRoomRequest* /*request*/, ::seshat::CreateRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::CreateRoomRequest,::seshat::CreateRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoom() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetRoomRequest, ::seshat::GetRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetRoomRequest, ::seshat::GetRoomResponse>* streamer) {
                       return this->StreamedGetRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoom(::grpc::ServerContext* /*context*/, const ::seshat::GetRoomRequest* /*request*/, ::seshat::GetRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetRoomRequest,::seshat::GetRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListRooms() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::ListRoomsRequest, ::seshat::ListRoomsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::ListRoomsRequest, ::seshat::ListRoomsResponse>* streamer) {
                       return this->StreamedListRooms(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListRooms(::grpc::ServerContext* /*context*/, const ::seshat::ListRoomsRequest* /*request*/, ::seshat::ListRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListRooms(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::ListRoomsRequest,::seshat::ListRoomsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteRoom : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteRoom() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::DeleteRoomRequest, ::seshat::DeleteRoomResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::DeleteRoomRequest, ::seshat::DeleteRoomResponse>* streamer) {
                       return this->StreamedDeleteRoom(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteRoom() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteRoom(::grpc::ServerContext* /*context*/, const ::seshat::DeleteRoomRequest* /*request*/, ::seshat::DeleteRoomResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteRoom(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::DeleteRoomRequest,::seshat::DeleteRoomResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_PlaceEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_PlaceEntity() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::PlaceEntityRequest, ::seshat::PlaceEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::PlaceEntityRequest, ::seshat::PlaceEntityResponse>* streamer) {
                       return this->StreamedPlaceEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_PlaceEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status PlaceEntity(::grpc::ServerContext* /*context*/, const ::seshat::PlaceEntityRequest* /*request*/, ::seshat::PlaceEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPlaceEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::PlaceEntityRequest,::seshat::PlaceEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveEntity() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::MoveEntityRequest, ::seshat::MoveEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::MoveEntityRequest, ::seshat::MoveEntityResponse>* streamer) {
                       return this->StreamedMoveEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityRequest* /*request*/, ::seshat::MoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::MoveEntityRequest,::seshat::MoveEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveEntity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveEntity() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::RemoveEntityRequest, ::seshat::RemoveEntityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::RemoveEntityRequest, ::seshat::RemoveEntityResponse>* streamer) {
                       return this->StreamedRemoveEntity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveEntity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveEntity(::grpc::ServerContext* /*context*/, const ::seshat::RemoveEntityRequest* /*request*/, ::seshat::RemoveEntityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveEntity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::RemoveEntityRequest,::seshat::RemoveEntityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntityPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntityPosition() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetEntityPositionRequest, ::seshat::GetEntityPositionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetEntityPositionRequest, ::seshat::GetEntityPositionResponse>* streamer) {
                       return this->StreamedGetEntityPosition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntityPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntityPosition(::grpc::ServerContext* /*context*/, const ::seshat::GetEntityPositionRequest* /*request*/, ::seshat::GetEntityPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntityPosition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetEntityPositionRequest,::seshat::GetEntityPositionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitiesAt : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitiesAt() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetEntitiesAtRequest, ::seshat::GetEntitiesAtResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetEntitiesAtRequest, ::seshat::GetEntitiesAtResponse>* streamer) {
                       return this->StreamedGetEntitiesAt(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitiesAt() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitiesAt(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesAtRequest* /*request*/, ::seshat::GetEntitiesAtResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitiesAt(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetEntitiesAtRequest,::seshat::GetEntitiesAtResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitiesInRange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitiesInRange() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetEntitiesInRangeRequest, ::seshat::GetEntitiesInRangeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetEntitiesInRangeRequest, ::seshat::GetEntitiesInRangeResponse>* streamer) {
                       return this->StreamedGetEntitiesInRange(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitiesInRange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitiesInRange(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInRangeRequest* /*request*/, ::seshat::GetEntitiesInRangeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitiesInRange(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetEntitiesInRangeRequest,::seshat::GetEntitiesInRangeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitiesInArea : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitiesInArea() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetEntitiesInAreaRequest, ::seshat::GetEntitiesInAreaResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetEntitiesInAreaRequest, ::seshat::GetEntitiesInAreaResponse>* streamer) {
                       return this->StreamedGetEntitiesInArea(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitiesInArea() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitiesInArea(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInAreaRequest* /*request*/, ::seshat::GetEntitiesInAreaResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitiesInArea(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetEntitiesInAreaRequest,::seshat::GetEntitiesInAreaResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEntitiesInLine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEntitiesInLine() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetEntitiesInLineRequest, ::seshat::GetEntitiesInLineResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetEntitiesInLineRequest, ::seshat::GetEntitiesInLineResponse>* streamer) {
                       return this->StreamedGetEntitiesInLine(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEntitiesInLine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEntitiesInLine(::grpc::ServerContext* /*context*/, const ::seshat::GetEntitiesInLineRequest* /*request*/, ::seshat::GetEntitiesInLineResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEntitiesInLine(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetEntitiesInLineRequest,::seshat::GetEntitiesInLineResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FindPath : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FindPath() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::FindPathRequest, ::seshat::FindPathResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::FindPathRequest, ::seshat::FindPathResponse>* streamer) {
                       return this->StreamedFindPath(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FindPath() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FindPath(::grpc::ServerContext* /*context*/, const ::seshat::FindPathRequest* /*request*/, ::seshat::FindPathResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFindPath(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::FindPathRequest,::seshat::FindPathResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDistance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDistance() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetDistanceRequest, ::seshat::GetDistanceResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetDistanceRequest, ::seshat::GetDistanceResponse>* streamer) {
                       return this->StreamedGetDistance(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDistance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDistance(::grpc::ServerContext* /*context*/, const ::seshat::GetDistanceRequest* /*request*/, ::seshat::GetDistanceResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDistance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetDistanceRequest,::seshat::GetDistanceResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckLineOfSight : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckLineOfSight() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::LineOfSightRequest, ::seshat::LineOfSightResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::LineOfSightRequest, ::seshat::LineOfSightResponse>* streamer) {
                       return this->StreamedCheckLineOfSight(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckLineOfSight() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckLineOfSight(::grpc::ServerContext* /*context*/, const ::seshat::LineOfSightRequest* /*request*/, ::seshat::LineOfSightResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckLineOfSight(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::LineOfSightRequest,::seshat::LineOfSightResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateConnection() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::CreateConnectionRequest, ::seshat::CreateConnectionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::CreateConnectionRequest, ::seshat::CreateConnectionResponse>* streamer) {
                       return this->StreamedCreateConnection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateConnection(::grpc::ServerContext* /*context*/, const ::seshat::CreateConnectionRequest* /*request*/, ::seshat::CreateConnectionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateConnection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::CreateConnectionRequest,::seshat::CreateConnectionResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetConnections() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetConnectionsRequest, ::seshat::GetConnectionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetConnectionsRequest, ::seshat::GetConnectionsResponse>* streamer) {
                       return this->StreamedGetConnections(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetConnections(::grpc::ServerContext* /*context*/, const ::seshat::GetConnectionsRequest* /*request*/, ::seshat::GetConnectionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetConnections(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetConnectionsRequest,::seshat::GetConnectionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MoveEntityBetweenRooms : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MoveEntityBetweenRooms() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::MoveEntityBetweenRoomsRequest, ::seshat::MoveEntityBetweenRoomsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::MoveEntityBetweenRoomsRequest, ::seshat::MoveEntityBetweenRoomsResponse>* streamer) {
                       return this->StreamedMoveEntityBetweenRooms(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MoveEntityBetweenRooms() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MoveEntityBetweenRooms(::grpc::ServerContext* /*context*/, const ::seshat::MoveEntityBetweenRoomsRequest* /*request*/, ::seshat::MoveEntityBetweenRoomsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMoveEntityBetweenRooms(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::MoveEntityBetweenRoomsRequest,::seshat::MoveEntityBetweenRoomsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetValidPositions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetValidPositions() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::GetValidPositionsRequest, ::seshat::GetValidPositionsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::GetValidPositionsRequest, ::seshat::GetValidPositionsResponse>* streamer) {
                       return this->StreamedGetValidPositions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetValidPositions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetValidPositions(::grpc::ServerContext* /*context*/, const ::seshat::GetValidPositionsRequest* /*request*/, ::seshat::GetValidPositionsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetValidPositions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::GetValidPositionsRequest,::seshat::GetValidPositionsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsValidPosition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_IsValidPosition() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::seshat::IsValidPositionRequest, ::seshat::IsValidPositionResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::seshat::IsValidPositionRequest, ::seshat::IsValidPositionResponse>* streamer) {
                       return this->StreamedIsValidPosition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_IsValidPosition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsValidPosition(::grpc::ServerContext* /*context*/, const ::seshat::IsValidPositionRequest* /*request*/, ::seshat::IsValidPositionResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsValidPosition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::seshat::IsValidPositionRequest,::seshat::IsValidPositionResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateRoom<WithStreamedUnaryMethod_GetRoom<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_PlaceEntity<WithStreamedUnaryMethod_MoveEntity<WithStreamedUnaryMethod_RemoveEntity<WithStreamedUnaryMethod_GetEntityPosition<WithStreamedUnaryMethod_GetEntitiesAt<WithStreamedUnaryMethod_GetEntitiesInRange<WithStreamedUnaryMethod_GetEntitiesInArea<WithStreamedUnaryMethod_GetEntitiesInLine<WithStreamedUnaryMethod_FindPath<WithStreamedUnaryMethod_GetDistance<WithStreamedUnaryMethod_CheckLineOfSight<WithStreamedUnaryMethod_CreateConnection<WithStreamedUnaryMethod_GetConnections<WithStreamedUnaryMethod_MoveEntityBetweenRooms<WithStreamedUnaryMethod_GetValidPositions<WithStreamedUnaryMethod_IsValidPosition<Service > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateRoom<WithStreamedUnaryMethod_GetRoom<WithStreamedUnaryMethod_ListRooms<WithStreamedUnaryMethod_DeleteRoom<WithStreamedUnaryMethod_PlaceEntity<WithStreamedUnaryMethod_MoveEntity<WithStreamedUnaryMethod_RemoveEntity<WithStreamedUnaryMethod_GetEntityPosition<WithStreamedUnaryMethod_GetEntitiesAt<WithStreamedUnaryMethod_GetEntitiesInRange<WithStreamedUnaryMethod_GetEntitiesInArea<WithStreamedUnaryMethod_GetEntitiesInLine<WithStreamedUnaryMethod_FindPath<WithStreamedUnaryMethod_GetDistance<WithStreamedUnaryMethod_CheckLineOfSight<WithStreamedUnaryMethod_CreateConnection<WithStreamedUnaryMethod_GetConnections<WithStreamedUnaryMethod_MoveEntityBetweenRooms<WithStreamedUnaryMethod_GetValidPositions<WithStreamedUnaryMethod_IsValidPosition<Service > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace seshat


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_seshat_2fspatial_2eproto__INCLUDED
