// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/selectables.proto
// Protobuf C++ Version: 6.31.1

#include "seshat/selectables.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seshat {

inline constexpr UpdateWeightRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWeightRequest::UpdateWeightRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateWeightRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateWeightRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWeightRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWeightRequestDefaultTypeInternal() {}
  union {
    UpdateWeightRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWeightRequestDefaultTypeInternal _UpdateWeightRequest_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR TableConfig_PropertiesEntry_DoNotUse::TableConfig_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TableConfig_PropertiesEntry_DoNotUse::MapEntry(TableConfig_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TableConfig_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TableConfig_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableConfig_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableConfig_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TableConfig_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableConfig_PropertiesEntry_DoNotUseDefaultTypeInternal _TableConfig_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr SelectionResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selection_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_weight_{0},
        roll_value_{0},
        items_evaluated_{0},
        items_filtered_{0},
        selection_timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionResult::SelectionResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionResult_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionResultDefaultTypeInternal() {}
  union {
    SelectionResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionResultDefaultTypeInternal _SelectionResult_default_instance_;

inline constexpr SelectionOptions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        required_tags_{},
        excluded_tags_{},
        min_count_{0},
        max_count_{0},
        allow_empty_{false},
        weight_modifier_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionOptions::SelectionOptions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionOptions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionOptionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionOptionsDefaultTypeInternal() {}
  union {
    SelectionOptions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionOptionsDefaultTypeInternal _SelectionOptions_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SelectionContext_DataEntry_DoNotUse::SelectionContext_DataEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SelectionContext_DataEntry_DoNotUse::MapEntry(SelectionContext_DataEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SelectionContext_DataEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SelectionContext_DataEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionContext_DataEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionContext_DataEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SelectionContext_DataEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionContext_DataEntry_DoNotUseDefaultTypeInternal _SelectionContext_DataEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR SelectableItem_PropertiesEntry_DoNotUse::SelectableItem_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : SelectableItem_PropertiesEntry_DoNotUse::MapEntry(SelectableItem_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : SelectableItem_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct SelectableItem_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectableItem_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectableItem_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    SelectableItem_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectableItem_PropertiesEntry_DoNotUseDefaultTypeInternal _SelectableItem_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr RemoveItemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RemoveItemRequest::RemoveItemRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveItemRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveItemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveItemRequestDefaultTypeInternal() {}
  union {
    RemoveItemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveItemRequestDefaultTypeInternal _RemoveItemRequest_default_instance_;

inline constexpr MergeTablesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_table_ids_{},
        target_table_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        strategy_{static_cast< ::seshat::MergeStrategy >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MergeTablesRequest::MergeTablesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MergeTablesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MergeTablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MergeTablesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MergeTablesRequestDefaultTypeInternal() {}
  union {
    MergeTablesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MergeTablesRequestDefaultTypeInternal _MergeTablesRequest_default_instance_;

inline constexpr ListTablesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tags_{},
        cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_filter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListTablesRequest::ListTablesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListTablesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListTablesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTablesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTablesRequestDefaultTypeInternal() {}
  union {
    ListTablesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTablesRequestDefaultTypeInternal _ListTablesRequest_default_instance_;

inline constexpr GetTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        include_items_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetTableRequest::GetTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableRequestDefaultTypeInternal() {}
  union {
    GetTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableRequestDefaultTypeInternal _GetTableRequest_default_instance_;

inline constexpr DeleteTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR DeleteTableRequest::DeleteTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTableRequestDefaultTypeInternal() {}
  union {
    DeleteTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTableRequestDefaultTypeInternal _DeleteTableRequest_default_instance_;

inline constexpr ContextCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operator__(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ContextCondition::ContextCondition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ContextCondition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ContextConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ContextConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ContextConditionDefaultTypeInternal() {}
  union {
    ContextCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ContextConditionDefaultTypeInternal _ContextCondition_default_instance_;

inline constexpr CloneTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        copy_items_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CloneTableRequest::CloneTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CloneTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CloneTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloneTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloneTableRequestDefaultTypeInternal() {}
  union {
    CloneTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloneTableRequestDefaultTypeInternal _CloneTableRequest_default_instance_;

inline constexpr TableConfig::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        mode_{static_cast< ::seshat::SelectionMode >(0)},
        allow_duplicates_{false},
        default_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TableConfig::TableConfig(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TableConfig_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TableConfigDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TableConfigDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TableConfigDefaultTypeInternal() {}
  union {
    TableConfig _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TableConfigDefaultTypeInternal _TableConfig_default_instance_;

inline constexpr SelectionContext::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        data_{},
        tags_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        location_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        player_level_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionContext::SelectionContext(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionContext_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionContextDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionContextDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionContextDefaultTypeInternal() {}
  union {
    SelectionContext _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionContextDefaultTypeInternal _SelectionContext_default_instance_;

inline constexpr SelectableItem::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        properties_{},
        conditions_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        content_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectableItem::SelectableItem(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectableItem_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectableItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectableItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectableItemDefaultTypeInternal() {}
  union {
    SelectableItem _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectableItemDefaultTypeInternal _SelectableItem_default_instance_;

inline constexpr TestDistributionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr},
        sample_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TestDistributionRequest::TestDistributionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestDistributionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestDistributionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDistributionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDistributionRequestDefaultTypeInternal() {}
  union {
    TestDistributionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDistributionRequestDefaultTypeInternal _TestDistributionRequest_default_instance_;

inline constexpr SelectionTable::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        items_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{nullptr},
        created_timestamp_{::int64_t{0}},
        modified_timestamp_{::int64_t{0}},
        total_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectionTable::SelectionTable(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectionTable_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectionTableDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectionTableDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectionTableDefaultTypeInternal() {}
  union {
    SelectionTable _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectionTableDefaultTypeInternal _SelectionTable_default_instance_;

inline constexpr SelectWithContextRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr},
        options_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SelectWithContextRequest::SelectWithContextRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectWithContextRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectWithContextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectWithContextRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectWithContextRequestDefaultTypeInternal() {}
  union {
    SelectWithContextRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectWithContextRequestDefaultTypeInternal _SelectWithContextRequest_default_instance_;

inline constexpr SelectRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SelectRequest::SelectRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectRequestDefaultTypeInternal() {}
  union {
    SelectRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectRequestDefaultTypeInternal _SelectRequest_default_instance_;

inline constexpr SelectMultipleRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr},
        count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SelectMultipleRequest::SelectMultipleRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectMultipleRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectMultipleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectMultipleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectMultipleRequestDefaultTypeInternal() {}
  union {
    SelectMultipleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectMultipleRequestDefaultTypeInternal _SelectMultipleRequest_default_instance_;

inline constexpr ItemProbability::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{nullptr},
        probability_{0},
        percentage_{0},
        effective_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ItemProbability::ItemProbability(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ItemProbability_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemProbabilityDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemProbabilityDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemProbabilityDefaultTypeInternal() {}
  union {
    ItemProbability _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemProbabilityDefaultTypeInternal _ItemProbability_default_instance_;

inline constexpr ItemDistribution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        item_{nullptr},
        selected_count_{0},
        expected_count_{0},
        actual_percentage_{0},
        expected_percentage_{0},
        deviation_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ItemDistribution::ItemDistribution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ItemDistribution_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ItemDistributionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ItemDistributionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ItemDistributionDefaultTypeInternal() {}
  union {
    ItemDistribution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ItemDistributionDefaultTypeInternal _ItemDistribution_default_instance_;

inline constexpr GetProbabilitiesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        context_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetProbabilitiesRequest::GetProbabilitiesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetProbabilitiesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProbabilitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProbabilitiesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProbabilitiesRequestDefaultTypeInternal() {}
  union {
    GetProbabilitiesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProbabilitiesRequestDefaultTypeInternal _GetProbabilitiesRequest_default_instance_;

inline constexpr CreateTableRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        config_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTableRequest::CreateTableRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateTableRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTableRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTableRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTableRequestDefaultTypeInternal() {}
  union {
    CreateTableRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTableRequestDefaultTypeInternal _CreateTableRequest_default_instance_;

inline constexpr AddItemRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        item_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR AddItemRequest::AddItemRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AddItemRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddItemRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddItemRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddItemRequestDefaultTypeInternal() {}
  union {
    AddItemRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddItemRequestDefaultTypeInternal _AddItemRequest_default_instance_;

inline constexpr UpdateWeightResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        updated_item_{nullptr},
        status_{nullptr},
        new_total_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateWeightResponse::UpdateWeightResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateWeightResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateWeightResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateWeightResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateWeightResponseDefaultTypeInternal() {}
  union {
    UpdateWeightResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateWeightResponseDefaultTypeInternal _UpdateWeightResponse_default_instance_;

inline constexpr TestDistributionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        distributions_{},
        status_{nullptr},
        total_selections_{0},
        chi_squared_{0},
        is_fair_{false} {}

template <typename>
PROTOBUF_CONSTEXPR TestDistributionResponse::TestDistributionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TestDistributionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TestDistributionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TestDistributionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TestDistributionResponseDefaultTypeInternal() {}
  union {
    TestDistributionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TestDistributionResponseDefaultTypeInternal _TestDistributionResponse_default_instance_;

inline constexpr SelectWithContextResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selected_items_{},
        result_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SelectWithContextResponse::SelectWithContextResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectWithContextResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectWithContextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectWithContextResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectWithContextResponseDefaultTypeInternal() {}
  union {
    SelectWithContextResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectWithContextResponseDefaultTypeInternal _SelectWithContextResponse_default_instance_;

inline constexpr SelectResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selected_item_{nullptr},
        result_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SelectResponse::SelectResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectResponseDefaultTypeInternal() {}
  union {
    SelectResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectResponseDefaultTypeInternal _SelectResponse_default_instance_;

inline constexpr SelectMultipleResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        selected_items_{},
        result_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SelectMultipleResponse::SelectMultipleResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SelectMultipleResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SelectMultipleResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SelectMultipleResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SelectMultipleResponseDefaultTypeInternal() {}
  union {
    SelectMultipleResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SelectMultipleResponseDefaultTypeInternal _SelectMultipleResponse_default_instance_;

inline constexpr RemoveItemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        removed_item_{nullptr},
        status_{nullptr},
        new_total_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveItemResponse::RemoveItemResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveItemResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveItemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveItemResponseDefaultTypeInternal() {}
  union {
    RemoveItemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveItemResponseDefaultTypeInternal _RemoveItemResponse_default_instance_;

inline constexpr MergeTablesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        merged_table_{nullptr},
        status_{nullptr},
        total_items_{0},
        duplicate_items_merged_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MergeTablesResponse::MergeTablesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(MergeTablesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MergeTablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MergeTablesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MergeTablesResponseDefaultTypeInternal() {}
  union {
    MergeTablesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MergeTablesResponseDefaultTypeInternal _MergeTablesResponse_default_instance_;

inline constexpr ListTablesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tables_{},
        next_cursor_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ListTablesResponse::ListTablesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ListTablesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ListTablesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ListTablesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ListTablesResponseDefaultTypeInternal() {}
  union {
    ListTablesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ListTablesResponseDefaultTypeInternal _ListTablesResponse_default_instance_;

inline constexpr GetTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetTableResponse::GetTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetTableResponseDefaultTypeInternal() {}
  union {
    GetTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetTableResponseDefaultTypeInternal _GetTableResponse_default_instance_;

inline constexpr GetProbabilitiesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        probabilities_{},
        status_{nullptr},
        total_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetProbabilitiesResponse::GetProbabilitiesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetProbabilitiesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetProbabilitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProbabilitiesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProbabilitiesResponseDefaultTypeInternal() {}
  union {
    GetProbabilitiesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProbabilitiesResponseDefaultTypeInternal _GetProbabilitiesResponse_default_instance_;

inline constexpr DeleteTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeleteTableResponse::DeleteTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(DeleteTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct DeleteTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteTableResponseDefaultTypeInternal() {}
  union {
    DeleteTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteTableResponseDefaultTypeInternal _DeleteTableResponse_default_instance_;

inline constexpr CreateTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateTableResponse::CreateTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateTableResponseDefaultTypeInternal() {}
  union {
    CreateTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateTableResponseDefaultTypeInternal _CreateTableResponse_default_instance_;

inline constexpr CloneTableResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cloned_table_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CloneTableResponse::CloneTableResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CloneTableResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CloneTableResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloneTableResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloneTableResponseDefaultTypeInternal() {}
  union {
    CloneTableResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloneTableResponseDefaultTypeInternal _CloneTableResponse_default_instance_;

inline constexpr AddItemResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        added_item_{nullptr},
        status_{nullptr},
        new_total_weight_{0} {}

template <typename>
PROTOBUF_CONSTEXPR AddItemResponse::AddItemResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AddItemResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AddItemResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddItemResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddItemResponseDefaultTypeInternal() {}
  union {
    AddItemResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddItemResponseDefaultTypeInternal _AddItemResponse_default_instance_;
}  // namespace seshat
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_seshat_2fselectables_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_seshat_2fselectables_2eproto = nullptr;
const ::uint32_t
    TableStruct_seshat_2fselectables_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableRequest, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableRequest, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableRequest, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableRequest, _impl_.config_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableResponse, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::seshat::CreateTableResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig, _impl_.mode_),
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig, _impl_.allow_duplicates_),
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig, _impl_.default_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::TableConfig, _impl_.properties_),
        0,
        1,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.config_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.items_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.created_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionTable, _impl_.modified_timestamp_),
        0,
        1,
        2,
        3,
        ~0u,
        6,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.content_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.content_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectableItem, _impl_.conditions_),
        0,
        1,
        2,
        3,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ContextCondition, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ContextCondition, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::ContextCondition, _impl_.operator__),
        PROTOBUF_FIELD_OFFSET(::seshat::ContextCondition, _impl_.value_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemRequest, _impl_.item_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemResponse, _impl_.added_item_),
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemResponse, _impl_.new_total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::AddItemResponse, _impl_.status_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemRequest, _impl_.item_id_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemResponse, _impl_.removed_item_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemResponse, _impl_.new_total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveItemResponse, _impl_.status_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightRequest, _impl_.item_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightRequest, _impl_.new_weight_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightResponse, _impl_.updated_item_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightResponse, _impl_.new_total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateWeightResponse, _impl_.status_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectRequest, _impl_.context_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectResponse, _impl_.selected_item_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectResponse, _impl_.status_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleRequest, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleRequest, _impl_.context_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleResponse, _impl_.selected_items_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectMultipleResponse, _impl_.status_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextRequest, _impl_.context_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextRequest, _impl_.options_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextResponse, _impl_.selected_items_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextResponse, _impl_.result_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectWithContextResponse, _impl_.status_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext_DataEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext_DataEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext_DataEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_.data_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_.player_level_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_.location_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionContext, _impl_.tags_),
        ~0u,
        0,
        2,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.min_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.max_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.allow_empty_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.required_tags_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.excluded_tags_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionOptions, _impl_.weight_modifier_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.roll_value_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.items_evaluated_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.items_filtered_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.selection_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::SelectionResult, _impl_.selection_id_),
        1,
        2,
        3,
        4,
        5,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableRequest, _impl_.include_items_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableResponse, _impl_.table_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetTableResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesRequest, _impl_.cursor_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesRequest, _impl_.name_filter_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesRequest, _impl_.tags_),
        2,
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesResponse, _impl_.tables_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesResponse, _impl_.next_cursor_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::ListTablesResponse, _impl_.status_),
        ~0u,
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::DeleteTableRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::DeleteTableRequest, _impl_.table_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::DeleteTableResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::DeleteTableResponse, _impl_.status_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableRequest, _impl_.source_table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableRequest, _impl_.new_name_),
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableRequest, _impl_.copy_items_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableResponse, _impl_.cloned_table_),
        PROTOBUF_FIELD_OFFSET(::seshat::CloneTableResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesRequest, _impl_.context_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesResponse, _impl_.probabilities_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesResponse, _impl_.total_weight_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetProbabilitiesResponse, _impl_.status_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ItemProbability, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ItemProbability, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemProbability, _impl_.probability_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemProbability, _impl_.percentage_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemProbability, _impl_.effective_weight_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionRequest, _impl_.table_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionRequest, _impl_.sample_size_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionRequest, _impl_.context_),
        0,
        2,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_.distributions_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_.total_selections_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_.chi_squared_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_.is_fair_),
        PROTOBUF_FIELD_OFFSET(::seshat::TestDistributionResponse, _impl_.status_),
        ~0u,
        1,
        2,
        3,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.item_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.selected_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.expected_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.actual_percentage_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.expected_percentage_),
        PROTOBUF_FIELD_OFFSET(::seshat::ItemDistribution, _impl_.deviation_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesRequest, _impl_.source_table_ids_),
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesRequest, _impl_.target_table_name_),
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesRequest, _impl_.strategy_),
        ~0u,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesResponse, _impl_.merged_table_),
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesResponse, _impl_.total_items_),
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesResponse, _impl_.duplicate_items_merged_),
        PROTOBUF_FIELD_OFFSET(::seshat::MergeTablesResponse, _impl_.status_),
        0,
        2,
        3,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::seshat::CreateTableRequest)},
        {11, sizeof(::seshat::CreateTableResponse)},
        {18, sizeof(::seshat::TableConfig_PropertiesEntry_DoNotUse)},
        {25, sizeof(::seshat::TableConfig)},
        {36, sizeof(::seshat::SelectionTable)},
        {55, sizeof(::seshat::SelectableItem_PropertiesEntry_DoNotUse)},
        {62, sizeof(::seshat::SelectableItem)},
        {77, sizeof(::seshat::ContextCondition)},
        {86, sizeof(::seshat::AddItemRequest)},
        {93, sizeof(::seshat::AddItemResponse)},
        {102, sizeof(::seshat::RemoveItemRequest)},
        {109, sizeof(::seshat::RemoveItemResponse)},
        {118, sizeof(::seshat::UpdateWeightRequest)},
        {127, sizeof(::seshat::UpdateWeightResponse)},
        {136, sizeof(::seshat::SelectRequest)},
        {143, sizeof(::seshat::SelectResponse)},
        {152, sizeof(::seshat::SelectMultipleRequest)},
        {161, sizeof(::seshat::SelectMultipleResponse)},
        {170, sizeof(::seshat::SelectWithContextRequest)},
        {179, sizeof(::seshat::SelectWithContextResponse)},
        {188, sizeof(::seshat::SelectionContext_DataEntry_DoNotUse)},
        {195, sizeof(::seshat::SelectionContext)},
        {208, sizeof(::seshat::SelectionOptions)},
        {223, sizeof(::seshat::SelectionResult)},
        {238, sizeof(::seshat::GetTableRequest)},
        {245, sizeof(::seshat::GetTableResponse)},
        {252, sizeof(::seshat::ListTablesRequest)},
        {263, sizeof(::seshat::ListTablesResponse)},
        {274, sizeof(::seshat::DeleteTableRequest)},
        {279, sizeof(::seshat::DeleteTableResponse)},
        {284, sizeof(::seshat::CloneTableRequest)},
        {293, sizeof(::seshat::CloneTableResponse)},
        {300, sizeof(::seshat::GetProbabilitiesRequest)},
        {307, sizeof(::seshat::GetProbabilitiesResponse)},
        {316, sizeof(::seshat::ItemProbability)},
        {327, sizeof(::seshat::TestDistributionRequest)},
        {336, sizeof(::seshat::TestDistributionResponse)},
        {349, sizeof(::seshat::ItemDistribution)},
        {364, sizeof(::seshat::MergeTablesRequest)},
        {373, sizeof(::seshat::MergeTablesResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::seshat::_CreateTableRequest_default_instance_._instance,
    &::seshat::_CreateTableResponse_default_instance_._instance,
    &::seshat::_TableConfig_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::seshat::_TableConfig_default_instance_._instance,
    &::seshat::_SelectionTable_default_instance_._instance,
    &::seshat::_SelectableItem_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::seshat::_SelectableItem_default_instance_._instance,
    &::seshat::_ContextCondition_default_instance_._instance,
    &::seshat::_AddItemRequest_default_instance_._instance,
    &::seshat::_AddItemResponse_default_instance_._instance,
    &::seshat::_RemoveItemRequest_default_instance_._instance,
    &::seshat::_RemoveItemResponse_default_instance_._instance,
    &::seshat::_UpdateWeightRequest_default_instance_._instance,
    &::seshat::_UpdateWeightResponse_default_instance_._instance,
    &::seshat::_SelectRequest_default_instance_._instance,
    &::seshat::_SelectResponse_default_instance_._instance,
    &::seshat::_SelectMultipleRequest_default_instance_._instance,
    &::seshat::_SelectMultipleResponse_default_instance_._instance,
    &::seshat::_SelectWithContextRequest_default_instance_._instance,
    &::seshat::_SelectWithContextResponse_default_instance_._instance,
    &::seshat::_SelectionContext_DataEntry_DoNotUse_default_instance_._instance,
    &::seshat::_SelectionContext_default_instance_._instance,
    &::seshat::_SelectionOptions_default_instance_._instance,
    &::seshat::_SelectionResult_default_instance_._instance,
    &::seshat::_GetTableRequest_default_instance_._instance,
    &::seshat::_GetTableResponse_default_instance_._instance,
    &::seshat::_ListTablesRequest_default_instance_._instance,
    &::seshat::_ListTablesResponse_default_instance_._instance,
    &::seshat::_DeleteTableRequest_default_instance_._instance,
    &::seshat::_DeleteTableResponse_default_instance_._instance,
    &::seshat::_CloneTableRequest_default_instance_._instance,
    &::seshat::_CloneTableResponse_default_instance_._instance,
    &::seshat::_GetProbabilitiesRequest_default_instance_._instance,
    &::seshat::_GetProbabilitiesResponse_default_instance_._instance,
    &::seshat::_ItemProbability_default_instance_._instance,
    &::seshat::_TestDistributionRequest_default_instance_._instance,
    &::seshat::_TestDistributionResponse_default_instance_._instance,
    &::seshat::_ItemDistribution_default_instance_._instance,
    &::seshat::_MergeTablesRequest_default_instance_._instance,
    &::seshat::_MergeTablesResponse_default_instance_._instance,
};
const char descriptor_table_protodef_seshat_2fselectables_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\030seshat/selectables.proto\022\006seshat\032\023sesh"
    "at/common.proto\"\207\001\n\022CreateTableRequest\022\016"
    "\n\002id\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013de"
    "scription\030\003 \001(\tR\013description\022+\n\006config\030\004"
    " \001(\0132\023.seshat.TableConfigR\006config\"k\n\023Cre"
    "ateTableResponse\022,\n\005table\030\001 \001(\0132\026.seshat"
    ".SelectionTableR\005table\022&\n\006status\030\002 \001(\0132\016"
    ".seshat.ResultR\006status\"\216\002\n\013TableConfig\022)"
    "\n\004mode\030\001 \001(\0162\025.seshat.SelectionModeR\004mod"
    "e\022)\n\020allow_duplicates\030\002 \001(\010R\017allowDuplic"
    "ates\022%\n\016default_weight\030\003 \001(\005R\rdefaultWei"
    "ght\022C\n\nproperties\030\004 \003(\0132#.seshat.TableCo"
    "nfig.PropertiesEntryR\nproperties\032=\n\017Prop"
    "ertiesEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002"
    " \001(\tR\005value:\0028\001\"\260\002\n\016SelectionTable\022\016\n\002id"
    "\030\001 \001(\tR\002id\022\022\n\004name\030\002 \001(\tR\004name\022 \n\013descri"
    "ption\030\003 \001(\tR\013description\022+\n\006config\030\004 \001(\013"
    "2\023.seshat.TableConfigR\006config\022,\n\005items\030\005"
    " \003(\0132\026.seshat.SelectableItemR\005items\022!\n\014t"
    "otal_weight\030\006 \001(\005R\013totalWeight\022+\n\021create"
    "d_timestamp\030\007 \001(\003R\020createdTimestamp\022-\n\022m"
    "odified_timestamp\030\010 \001(\003R\021modifiedTimesta"
    "mp\"\266\002\n\016SelectableItem\022\016\n\002id\030\001 \001(\tR\002id\022\030\n"
    "\007content\030\002 \001(\tR\007content\022!\n\014content_type\030"
    "\003 \001(\tR\013contentType\022\026\n\006weight\030\004 \001(\005R\006weig"
    "ht\022F\n\nproperties\030\005 \003(\0132&.seshat.Selectab"
    "leItem.PropertiesEntryR\nproperties\0228\n\nco"
    "nditions\030\006 \003(\0132\030.seshat.ContextCondition"
    "R\nconditions\032=\n\017PropertiesEntry\022\020\n\003key\030\001"
    " \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"V\n\020C"
    "ontextCondition\022\020\n\003key\030\001 \001(\tR\003key\022\032\n\010ope"
    "rator\030\002 \001(\tR\010operator\022\024\n\005value\030\003 \001(\tR\005va"
    "lue\"W\n\016AddItemRequest\022\031\n\010table_id\030\001 \001(\tR"
    "\007tableId\022*\n\004item\030\002 \001(\0132\026.seshat.Selectab"
    "leItemR\004item\"\232\001\n\017AddItemResponse\0225\n\nadde"
    "d_item\030\001 \001(\0132\026.seshat.SelectableItemR\tad"
    "dedItem\022(\n\020new_total_weight\030\002 \001(\005R\016newTo"
    "talWeight\022&\n\006status\030\003 \001(\0132\016.seshat.Resul"
    "tR\006status\"G\n\021RemoveItemRequest\022\031\n\010table_"
    "id\030\001 \001(\tR\007tableId\022\027\n\007item_id\030\002 \001(\tR\006item"
    "Id\"\241\001\n\022RemoveItemResponse\0229\n\014removed_ite"
    "m\030\001 \001(\0132\026.seshat.SelectableItemR\013removed"
    "Item\022(\n\020new_total_weight\030\002 \001(\005R\016newTotal"
    "Weight\022&\n\006status\030\003 \001(\0132\016.seshat.ResultR\006"
    "status\"h\n\023UpdateWeightRequest\022\031\n\010table_i"
    "d\030\001 \001(\tR\007tableId\022\027\n\007item_id\030\002 \001(\tR\006itemI"
    "d\022\035\n\nnew_weight\030\003 \001(\005R\tnewWeight\"\243\001\n\024Upd"
    "ateWeightResponse\0229\n\014updated_item\030\001 \001(\0132"
    "\026.seshat.SelectableItemR\013updatedItem\022(\n\020"
    "new_total_weight\030\002 \001(\005R\016newTotalWeight\022&"
    "\n\006status\030\003 \001(\0132\016.seshat.ResultR\006status\"^"
    "\n\rSelectRequest\022\031\n\010table_id\030\001 \001(\tR\007table"
    "Id\0222\n\007context\030\002 \001(\0132\030.seshat.SelectionCo"
    "ntextR\007context\"\246\001\n\016SelectResponse\022;\n\rsel"
    "ected_item\030\001 \001(\0132\026.seshat.SelectableItem"
    "R\014selectedItem\022/\n\006result\030\002 \001(\0132\027.seshat."
    "SelectionResultR\006result\022&\n\006status\030\003 \001(\0132"
    "\016.seshat.ResultR\006status\"|\n\025SelectMultipl"
    "eRequest\022\031\n\010table_id\030\001 \001(\tR\007tableId\022\024\n\005c"
    "ount\030\002 \001(\005R\005count\0222\n\007context\030\003 \001(\0132\030.ses"
    "hat.SelectionContextR\007context\"\260\001\n\026Select"
    "MultipleResponse\022=\n\016selected_items\030\001 \003(\013"
    "2\026.seshat.SelectableItemR\rselectedItems\022"
    "/\n\006result\030\002 \001(\0132\027.seshat.SelectionResult"
    "R\006result\022&\n\006status\030\003 \001(\0132\016.seshat.Result"
    "R\006status\"\235\001\n\030SelectWithContextRequest\022\031\n"
    "\010table_id\030\001 \001(\tR\007tableId\0222\n\007context\030\002 \001("
    "\0132\030.seshat.SelectionContextR\007context\0222\n\007"
    "options\030\003 \001(\0132\030.seshat.SelectionOptionsR"
    "\007options\"\263\001\n\031SelectWithContextResponse\022="
    "\n\016selected_items\030\001 \003(\0132\026.seshat.Selectab"
    "leItemR\rselectedItems\022/\n\006result\030\002 \001(\0132\027."
    "seshat.SelectionResultR\006result\022&\n\006status"
    "\030\003 \001(\0132\016.seshat.ResultR\006status\"\363\001\n\020Selec"
    "tionContext\0226\n\004data\030\001 \003(\0132\".seshat.Selec"
    "tionContext.DataEntryR\004data\022\033\n\tentity_id"
    "\030\002 \001(\tR\010entityId\022!\n\014player_level\030\003 \001(\005R\013"
    "playerLevel\022\032\n\010location\030\004 \001(\tR\010location\022"
    "\022\n\004tags\030\005 \003(\tR\004tags\0327\n\tDataEntry\022\020\n\003key\030"
    "\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\340\001\n"
    "\020SelectionOptions\022\033\n\tmin_count\030\001 \001(\005R\010mi"
    "nCount\022\033\n\tmax_count\030\002 \001(\005R\010maxCount\022\037\n\013a"
    "llow_empty\030\003 \001(\010R\nallowEmpty\022#\n\rrequired"
    "_tags\030\004 \003(\tR\014requiredTags\022#\n\rexcluded_ta"
    "gs\030\005 \003(\tR\014excludedTags\022\'\n\017weight_modifie"
    "r\030\006 \001(\002R\016weightModifier\"\367\001\n\017SelectionRes"
    "ult\022!\n\014total_weight\030\001 \001(\005R\013totalWeight\022\035"
    "\n\nroll_value\030\002 \001(\005R\trollValue\022\'\n\017items_e"
    "valuated\030\003 \001(\005R\016itemsEvaluated\022%\n\016items_"
    "filtered\030\004 \001(\005R\ritemsFiltered\022/\n\023selecti"
    "on_timestamp\030\005 \001(\003R\022selectionTimestamp\022!"
    "\n\014selection_id\030\006 \001(\tR\013selectionId\"Q\n\017Get"
    "TableRequest\022\031\n\010table_id\030\001 \001(\tR\007tableId\022"
    "#\n\rinclude_items\030\002 \001(\010R\014includeItems\"h\n\020"
    "GetTableResponse\022,\n\005table\030\001 \001(\0132\026.seshat"
    ".SelectionTableR\005table\022&\n\006status\030\002 \001(\0132\016"
    ".seshat.ResultR\006status\"v\n\021ListTablesRequ"
    "est\022\024\n\005limit\030\001 \001(\005R\005limit\022\026\n\006cursor\030\002 \001("
    "\tR\006cursor\022\037\n\013name_filter\030\003 \001(\tR\nnameFilt"
    "er\022\022\n\004tags\030\004 \003(\tR\004tags\"\256\001\n\022ListTablesRes"
    "ponse\022.\n\006tables\030\001 \003(\0132\026.seshat.Selection"
    "TableR\006tables\022\037\n\013next_cursor\030\002 \001(\tR\nnext"
    "Cursor\022\037\n\013total_count\030\003 \001(\005R\ntotalCount\022"
    "&\n\006status\030\004 \001(\0132\016.seshat.ResultR\006status\""
    "/\n\022DeleteTableRequest\022\031\n\010table_id\030\001 \001(\tR"
    "\007tableId\"=\n\023DeleteTableResponse\022&\n\006statu"
    "s\030\001 \001(\0132\016.seshat.ResultR\006status\"u\n\021Clone"
    "TableRequest\022&\n\017source_table_id\030\001 \001(\tR\rs"
    "ourceTableId\022\031\n\010new_name\030\002 \001(\tR\007newName\022"
    "\035\n\ncopy_items\030\003 \001(\010R\tcopyItems\"w\n\022CloneT"
    "ableResponse\0229\n\014cloned_table\030\001 \001(\0132\026.ses"
    "hat.SelectionTableR\013clonedTable\022&\n\006statu"
    "s\030\002 \001(\0132\016.seshat.ResultR\006status\"h\n\027GetPr"
    "obabilitiesRequest\022\031\n\010table_id\030\001 \001(\tR\007ta"
    "bleId\0222\n\007context\030\002 \001(\0132\030.seshat.Selectio"
    "nContextR\007context\"\244\001\n\030GetProbabilitiesRe"
    "sponse\022=\n\rprobabilities\030\001 \003(\0132\027.seshat.I"
    "temProbabilityR\rprobabilities\022!\n\014total_w"
    "eight\030\002 \001(\005R\013totalWeight\022&\n\006status\030\003 \001(\013"
    "2\016.seshat.ResultR\006status\"\252\001\n\017ItemProbabi"
    "lity\022*\n\004item\030\001 \001(\0132\026.seshat.SelectableIt"
    "emR\004item\022 \n\013probability\030\002 \001(\002R\013probabili"
    "ty\022\036\n\npercentage\030\003 \001(\002R\npercentage\022)\n\020ef"
    "fective_weight\030\004 \001(\005R\017effectiveWeight\"\211\001"
    "\n\027TestDistributionRequest\022\031\n\010table_id\030\001 "
    "\001(\tR\007tableId\022\037\n\013sample_size\030\002 \001(\005R\nsampl"
    "eSize\0222\n\007context\030\003 \001(\0132\030.seshat.Selectio"
    "nContextR\007context\"\347\001\n\030TestDistributionRe"
    "sponse\022>\n\rdistributions\030\001 \003(\0132\030.seshat.I"
    "temDistributionR\rdistributions\022)\n\020total_"
    "selections\030\002 \001(\005R\017totalSelections\022\037\n\013chi"
    "_squared\030\003 \001(\002R\nchiSquared\022\027\n\007is_fair\030\004 "
    "\001(\010R\006isFair\022&\n\006status\030\005 \001(\0132\016.seshat.Res"
    "ultR\006status\"\210\002\n\020ItemDistribution\022*\n\004item"
    "\030\001 \001(\0132\026.seshat.SelectableItemR\004item\022%\n\016"
    "selected_count\030\002 \001(\005R\rselectedCount\022%\n\016e"
    "xpected_count\030\003 \001(\002R\rexpectedCount\022+\n\021ac"
    "tual_percentage\030\004 \001(\002R\020actualPercentage\022"
    "/\n\023expected_percentage\030\005 \001(\002R\022expectedPe"
    "rcentage\022\034\n\tdeviation\030\006 \001(\002R\tdeviation\"\235"
    "\001\n\022MergeTablesRequest\022(\n\020source_table_id"
    "s\030\001 \003(\tR\016sourceTableIds\022*\n\021target_table_"
    "name\030\002 \001(\tR\017targetTableName\0221\n\010strategy\030"
    "\003 \001(\0162\025.seshat.MergeStrategyR\010strategy\"\317"
    "\001\n\023MergeTablesResponse\0229\n\014merged_table\030\001"
    " \001(\0132\026.seshat.SelectionTableR\013mergedTabl"
    "e\022\037\n\013total_items\030\002 \001(\005R\ntotalItems\0224\n\026du"
    "plicate_items_merged\030\003 \001(\005R\024duplicateIte"
    "msMerged\022&\n\006status\030\004 \001(\0132\016.seshat.Result"
    "R\006status*\237\001\n\rSelectionMode\022\036\n\032SELECTION_"
    "MODE_UNSPECIFIED\020\000\022\031\n\025SELECTION_MODE_SIN"
    "GLE\020\001\022\033\n\027SELECTION_MODE_MULTIPLE\020\002\022\031\n\025SE"
    "LECTION_MODE_UNIQUE\020\003\022\033\n\027SELECTION_MODE_"
    "VARIABLE\020\004*\237\001\n\rMergeStrategy\022\036\n\032MERGE_ST"
    "RATEGY_UNSPECIFIED\020\000\022\032\n\026MERGE_STRATEGY_C"
    "OMBINE\020\001\022\032\n\026MERGE_STRATEGY_AVERAGE\020\002\022\032\n\026"
    "MERGE_STRATEGY_HIGHEST\020\003\022\032\n\026MERGE_STRATE"
    "GY_REPLACE\020\0042\223\010\n\022SelectablesService\022F\n\013C"
    "reateTable\022\032.seshat.CreateTableRequest\032\033"
    ".seshat.CreateTableResponse\022:\n\007AddItem\022\026"
    ".seshat.AddItemRequest\032\027.seshat.AddItemR"
    "esponse\022C\n\nRemoveItem\022\031.seshat.RemoveIte"
    "mRequest\032\032.seshat.RemoveItemResponse\022I\n\014"
    "UpdateWeight\022\033.seshat.UpdateWeightReques"
    "t\032\034.seshat.UpdateWeightResponse\0227\n\006Selec"
    "t\022\025.seshat.SelectRequest\032\026.seshat.Select"
    "Response\022O\n\016SelectMultiple\022\035.seshat.Sele"
    "ctMultipleRequest\032\036.seshat.SelectMultipl"
    "eResponse\022X\n\021SelectWithContext\022 .seshat."
    "SelectWithContextRequest\032!.seshat.Select"
    "WithContextResponse\022=\n\010GetTable\022\027.seshat"
    ".GetTableRequest\032\030.seshat.GetTableRespon"
    "se\022C\n\nListTables\022\031.seshat.ListTablesRequ"
    "est\032\032.seshat.ListTablesResponse\022F\n\013Delet"
    "eTable\022\032.seshat.DeleteTableRequest\032\033.ses"
    "hat.DeleteTableResponse\022C\n\nCloneTable\022\031."
    "seshat.CloneTableRequest\032\032.seshat.CloneT"
    "ableResponse\022U\n\020GetProbabilities\022\037.sesha"
    "t.GetProbabilitiesRequest\032 .seshat.GetPr"
    "obabilitiesResponse\022U\n\020TestDistribution\022"
    "\037.seshat.TestDistributionRequest\032 .sesha"
    "t.TestDistributionResponse\022F\n\013MergeTable"
    "s\022\032.seshat.MergeTablesRequest\032\033.seshat.M"
    "ergeTablesResponseB!Z\037github.com/seshat/"
    "protos/seshatb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_seshat_2fselectables_2eproto_deps[1] = {
        &::descriptor_table_seshat_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_seshat_2fselectables_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_seshat_2fselectables_2eproto = {
    false,
    false,
    7381,
    descriptor_table_protodef_seshat_2fselectables_2eproto,
    "seshat/selectables.proto",
    &descriptor_table_seshat_2fselectables_2eproto_once,
    descriptor_table_seshat_2fselectables_2eproto_deps,
    1,
    40,
    schemas,
    file_default_instances,
    TableStruct_seshat_2fselectables_2eproto::offsets,
    file_level_enum_descriptors_seshat_2fselectables_2eproto,
    file_level_service_descriptors_seshat_2fselectables_2eproto,
};
namespace seshat {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SelectionMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fselectables_2eproto);
  return file_level_enum_descriptors_seshat_2fselectables_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SelectionMode_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL MergeStrategy_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fselectables_2eproto);
  return file_level_enum_descriptors_seshat_2fselectables_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MergeStrategy_internal_data_[] = {
    327680u, 0u, };
// ===================================================================

class CreateTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_._has_bits_);
};

CreateTableRequest::CreateTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CreateTableRequest)
}
PROTOBUF_NDEBUG_INLINE CreateTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CreateTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_) {}

CreateTableRequest::CreateTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.CreateTableRequest)
}
PROTOBUF_NDEBUG_INLINE CreateTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        id_(arena),
        name_(arena),
        description_(arena) {}

inline void CreateTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.config_ = {};
}
CreateTableRequest::~CreateTableRequest() {
  // @@protoc_insertion_point(destructor:seshat.CreateTableRequest)
  SharedDtor(*this);
}
inline void CreateTableRequest::SharedDtor(MessageLite& self) {
  CreateTableRequest& this_ = static_cast<CreateTableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateTableRequest(arena);
}
constexpr auto CreateTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CreateTableRequest),
                                            alignof(CreateTableRequest));
}
constexpr auto CreateTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateTableRequest>(), &CreateTableRequest::ByteSizeLong,
              &CreateTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_._cached_size_),
          false,
      },
      &CreateTableRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateTableRequest_class_data_ =
        CreateTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateTableRequest_class_data_.tc_table);
  return CreateTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 51, 2>
CreateTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CreateTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.TableConfig config = 4 [json_name = "config"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.config_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.description_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.description_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.TableConfig config = 4 [json_name = "config"];
    {PROTOBUF_FIELD_OFFSET(CreateTableRequest, _impl_.config_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::TableConfig>()},
  }},
  {{
    "\31\2\4\13\0\0\0\0"
    "seshat.CreateTableRequest"
    "id"
    "name"
    "description"
  }},
};
PROTOBUF_NOINLINE void CreateTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CreateTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateTableRequest& this_ = static_cast<const CreateTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CreateTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CreateTableRequest.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CreateTableRequest.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CreateTableRequest.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.TableConfig config = 4 [json_name = "config"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CreateTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateTableRequest::ByteSizeLong(const MessageLite& base) {
  const CreateTableRequest& this_ = static_cast<const CreateTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateTableRequest::ByteSizeLong() const {
  const CreateTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CreateTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .seshat.TableConfig config = 4 [json_name = "config"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTableRequest*>(&to_msg);
  auto& from = static_cast<const CreateTableRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CreateTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTableRequest::CopyFrom(const CreateTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CreateTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTableRequest::InternalSwap(CreateTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  swap(_impl_.config_, other->_impl_.config_);
}

::google::protobuf::Metadata CreateTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_._has_bits_);
};

void CreateTableResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateTableResponse::CreateTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CreateTableResponse)
}
PROTOBUF_NDEBUG_INLINE CreateTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CreateTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateTableResponse::CreateTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.CreateTableResponse)
}
PROTOBUF_NDEBUG_INLINE CreateTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreateTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::status_));
}
CreateTableResponse::~CreateTableResponse() {
  // @@protoc_insertion_point(destructor:seshat.CreateTableResponse)
  SharedDtor(*this);
}
inline void CreateTableResponse::SharedDtor(MessageLite& self) {
  CreateTableResponse& this_ = static_cast<CreateTableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.table_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateTableResponse(arena);
}
constexpr auto CreateTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateTableResponse),
                                            alignof(CreateTableResponse));
}
constexpr auto CreateTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateTableResponse>(), &CreateTableResponse::ByteSizeLong,
              &CreateTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_._cached_size_),
          false,
      },
      &CreateTableResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateTableResponse_class_data_ =
        CreateTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateTableResponse_class_data_.tc_table);
  return CreateTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CreateTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CreateTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.status_)}},
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.table_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CreateTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CreateTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateTableResponse& this_ = static_cast<const CreateTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CreateTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CreateTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateTableResponse::ByteSizeLong(const MessageLite& base) {
  const CreateTableResponse& this_ = static_cast<const CreateTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateTableResponse::ByteSizeLong() const {
  const CreateTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CreateTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateTableResponse*>(&to_msg);
  auto& from = static_cast<const CreateTableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CreateTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateTableResponse::CopyFrom(const CreateTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CreateTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateTableResponse::InternalSwap(CreateTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.status_)
      + sizeof(CreateTableResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateTableResponse, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata CreateTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
TableConfig_PropertiesEntry_DoNotUse::TableConfig_PropertiesEntry_DoNotUse()
    : SuperType(TableConfig_PropertiesEntry_DoNotUse_class_data_.base()) {}
TableConfig_PropertiesEntry_DoNotUse::TableConfig_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, TableConfig_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
TableConfig_PropertiesEntry_DoNotUse::TableConfig_PropertiesEntry_DoNotUse() : SuperType() {}
TableConfig_PropertiesEntry_DoNotUse::TableConfig_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL TableConfig_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableConfig_PropertiesEntry_DoNotUse(arena);
}
constexpr auto TableConfig_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TableConfig_PropertiesEntry_DoNotUse),
                                            alignof(TableConfig_PropertiesEntry_DoNotUse));
}
constexpr auto TableConfig_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableConfig_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableConfig_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableConfig_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableConfig_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&TableConfig_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &TableConfig_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableConfig_PropertiesEntry_DoNotUse_class_data_ =
        TableConfig_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableConfig_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableConfig_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableConfig_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return TableConfig_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2>
TableConfig_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TableConfig_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::TableConfig_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(TableConfig_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\3\5\0\0\0\0\0"
    "seshat.TableConfig.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class TableConfig::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TableConfig>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TableConfig, _impl_._has_bits_);
};

TableConfig::TableConfig(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.TableConfig)
}
PROTOBUF_NDEBUG_INLINE TableConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::TableConfig& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_} {}

TableConfig::TableConfig(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TableConfig& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TableConfig_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TableConfig* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, mode_),
           offsetof(Impl_, default_weight_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::default_weight_));

  // @@protoc_insertion_point(copy_constructor:seshat.TableConfig)
}
PROTOBUF_NDEBUG_INLINE TableConfig::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena} {}

inline void TableConfig::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, mode_),
           0,
           offsetof(Impl_, default_weight_) -
               offsetof(Impl_, mode_) +
               sizeof(Impl_::default_weight_));
}
TableConfig::~TableConfig() {
  // @@protoc_insertion_point(destructor:seshat.TableConfig)
  SharedDtor(*this);
}
inline void TableConfig::SharedDtor(MessageLite& self) {
  TableConfig& this_ = static_cast<TableConfig&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TableConfig::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TableConfig(arena);
}
constexpr auto TableConfig::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.properties_) +
          decltype(TableConfig::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.properties_) +
          decltype(TableConfig::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(TableConfig), alignof(TableConfig), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TableConfig::PlacementNew_,
                                 sizeof(TableConfig),
                                 alignof(TableConfig));
  }
}
constexpr auto TableConfig::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TableConfig_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TableConfig::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TableConfig>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TableConfig::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TableConfig>(), &TableConfig::ByteSizeLong,
              &TableConfig::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TableConfig, _impl_._cached_size_),
          false,
      },
      &TableConfig::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TableConfig_class_data_ =
        TableConfig::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TableConfig::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TableConfig_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TableConfig_class_data_.tc_table);
  return TableConfig_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 37, 2>
TableConfig::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TableConfig, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TableConfig_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::TableConfig>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectionMode mode = 1 [json_name = "mode"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableConfig, _impl_.mode_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.mode_)}},
    // bool allow_duplicates = 2 [json_name = "allowDuplicates"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TableConfig, _impl_.allow_duplicates_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.allow_duplicates_)}},
    // int32 default_weight = 3 [json_name = "defaultWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TableConfig, _impl_.default_weight_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.default_weight_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectionMode mode = 1 [json_name = "mode"];
    {PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.mode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // bool allow_duplicates = 2 [json_name = "allowDuplicates"];
    {PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.allow_duplicates_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 default_weight = 3 [json_name = "defaultWeight"];
    {PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.default_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> properties = 4 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.properties_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\22\0\0\0\12\0\0\0"
    "seshat.TableConfig"
    "properties"
  }},
};
PROTOBUF_NOINLINE void TableConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.TableConfig)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.default_weight_) -
        reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.default_weight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TableConfig::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TableConfig& this_ = static_cast<const TableConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TableConfig::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TableConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.TableConfig)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .seshat.SelectionMode mode = 1 [json_name = "mode"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_mode() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_mode(), target);
    }
  }

  // bool allow_duplicates = 2 [json_name = "allowDuplicates"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_allow_duplicates() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_allow_duplicates(), target);
    }
  }

  // int32 default_weight = 3 [json_name = "defaultWeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_default_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_default_weight(), target);
    }
  }

  // map<string, string> properties = 4 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.TableConfig.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.TableConfig.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.TableConfig.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.TableConfig.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.TableConfig)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TableConfig::ByteSizeLong(const MessageLite& base) {
  const TableConfig& this_ = static_cast<const TableConfig&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TableConfig::ByteSizeLong() const {
  const TableConfig& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.TableConfig)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 4 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.SelectionMode mode = 1 [json_name = "mode"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_mode() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_mode());
      }
    }
    // bool allow_duplicates = 2 [json_name = "allowDuplicates"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_allow_duplicates() != 0) {
        total_size += 2;
      }
    }
    // int32 default_weight = 3 [json_name = "defaultWeight"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_default_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_default_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TableConfig::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TableConfig*>(&to_msg);
  auto& from = static_cast<const TableConfig&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.TableConfig)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_mode() != 0) {
        _this->_impl_.mode_ = from._impl_.mode_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_allow_duplicates() != 0) {
        _this->_impl_.allow_duplicates_ = from._impl_.allow_duplicates_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_default_weight() != 0) {
        _this->_impl_.default_weight_ = from._impl_.default_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TableConfig::CopyFrom(const TableConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.TableConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TableConfig::InternalSwap(TableConfig* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.default_weight_)
      + sizeof(TableConfig::_impl_.default_weight_)
      - PROTOBUF_FIELD_OFFSET(TableConfig, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::google::protobuf::Metadata TableConfig::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionTable::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionTable>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._has_bits_);
};

SelectionTable::SelectionTable(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectionTable)
}
PROTOBUF_NDEBUG_INLINE SelectionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectionTable& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        items_{visibility, arena, from.items_},
        id_(arena, from.id_),
        name_(arena, from.name_),
        description_(arena, from.description_) {}

SelectionTable::SelectionTable(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionTable& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionTable_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionTable* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.config_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, created_timestamp_),
           offsetof(Impl_, total_weight_) -
               offsetof(Impl_, created_timestamp_) +
               sizeof(Impl_::total_weight_));

  // @@protoc_insertion_point(copy_constructor:seshat.SelectionTable)
}
PROTOBUF_NDEBUG_INLINE SelectionTable::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        items_{visibility, arena},
        id_(arena),
        name_(arena),
        description_(arena) {}

inline void SelectionTable::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, config_),
           0,
           offsetof(Impl_, total_weight_) -
               offsetof(Impl_, config_) +
               sizeof(Impl_::total_weight_));
}
SelectionTable::~SelectionTable() {
  // @@protoc_insertion_point(destructor:seshat.SelectionTable)
  SharedDtor(*this);
}
inline void SelectionTable::SharedDtor(MessageLite& self) {
  SelectionTable& this_ = static_cast<SelectionTable&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  delete this_._impl_.config_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionTable::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionTable(arena);
}
constexpr auto SelectionTable::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.items_) +
          decltype(SelectionTable::_impl_.items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionTable), alignof(SelectionTable), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionTable::PlacementNew_,
                                 sizeof(SelectionTable),
                                 alignof(SelectionTable));
  }
}
constexpr auto SelectionTable::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionTable_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionTable::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionTable>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionTable::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionTable>(), &SelectionTable::ByteSizeLong,
              &SelectionTable::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._cached_size_),
          false,
      },
      &SelectionTable::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionTable_class_data_ =
        SelectionTable::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionTable::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionTable_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionTable_class_data_.tc_table);
  return SelectionTable_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 2, 55, 2>
SelectionTable::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectionTable_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectionTable>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 modified_timestamp = 8 [json_name = "modifiedTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SelectionTable, _impl_.modified_timestamp_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.modified_timestamp_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.id_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.description_)}},
    // .seshat.TableConfig config = 4 [json_name = "config"];
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.config_)}},
    // repeated .seshat.SelectableItem items = 5 [json_name = "items"];
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 1, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.items_)}},
    // int32 total_weight = 6 [json_name = "totalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionTable, _impl_.total_weight_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.total_weight_)}},
    // int64 created_timestamp = 7 [json_name = "createdTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SelectionTable, _impl_.created_timestamp_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.created_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.description_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.TableConfig config = 4 [json_name = "config"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.config_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.SelectableItem items = 5 [json_name = "items"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.items_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_weight = 6 [json_name = "totalWeight"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.total_weight_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 created_timestamp = 7 [json_name = "createdTimestamp"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.created_timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 modified_timestamp = 8 [json_name = "modifiedTimestamp"];
    {PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.modified_timestamp_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::TableConfig>()},
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
  }},
  {{
    "\25\2\4\13\0\0\0\0\0\0\0\0\0\0\0\0"
    "seshat.SelectionTable"
    "id"
    "name"
    "description"
  }},
};
PROTOBUF_NOINLINE void SelectionTable::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectionTable)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.config_ != nullptr);
      _impl_.config_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000070u) != 0) {
    ::memset(&_impl_.created_timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.total_weight_) -
        reinterpret_cast<char*>(&_impl_.created_timestamp_)) + sizeof(_impl_.total_weight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionTable::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionTable& this_ = static_cast<const SelectionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionTable::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectionTable)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionTable.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionTable.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionTable.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.TableConfig config = 4 [json_name = "config"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.config_, this_._impl_.config_->GetCachedSize(), target,
        stream);
  }

  // repeated .seshat.SelectableItem items = 5 [json_name = "items"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            5, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_weight = 6 [json_name = "totalWeight"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<6>(
              stream, this_._internal_total_weight(), target);
    }
  }

  // int64 created_timestamp = 7 [json_name = "createdTimestamp"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_created_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<7>(
              stream, this_._internal_created_timestamp(), target);
    }
  }

  // int64 modified_timestamp = 8 [json_name = "modifiedTimestamp"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (this_._internal_modified_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<8>(
              stream, this_._internal_modified_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectionTable)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionTable::ByteSizeLong(const MessageLite& base) {
  const SelectionTable& this_ = static_cast<const SelectionTable&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionTable::ByteSizeLong() const {
  const SelectionTable& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectionTable)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.SelectableItem items = 5 [json_name = "items"];
    {
      total_size += 1UL * this_._internal_items_size();
      for (const auto& msg : this_._internal_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .seshat.TableConfig config = 4 [json_name = "config"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.config_);
    }
    // int64 created_timestamp = 7 [json_name = "createdTimestamp"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_created_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_created_timestamp());
      }
    }
    // int64 modified_timestamp = 8 [json_name = "modifiedTimestamp"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_modified_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_modified_timestamp());
      }
    }
    // int32 total_weight = 6 [json_name = "totalWeight"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionTable::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionTable*>(&to_msg);
  auto& from = static_cast<const SelectionTable&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectionTable)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.config_ != nullptr);
      if (_this->_impl_.config_ == nullptr) {
        _this->_impl_.config_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.config_);
      } else {
        _this->_impl_.config_->MergeFrom(*from._impl_.config_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_created_timestamp() != 0) {
        _this->_impl_.created_timestamp_ = from._impl_.created_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_modified_timestamp() != 0) {
        _this->_impl_.modified_timestamp_ = from._impl_.modified_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_total_weight() != 0) {
        _this->_impl_.total_weight_ = from._impl_.total_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionTable::CopyFrom(const SelectionTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectionTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionTable::InternalSwap(SelectionTable* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.total_weight_)
      + sizeof(SelectionTable::_impl_.total_weight_)
      - PROTOBUF_FIELD_OFFSET(SelectionTable, _impl_.config_)>(
          reinterpret_cast<char*>(&_impl_.config_),
          reinterpret_cast<char*>(&other->_impl_.config_));
}

::google::protobuf::Metadata SelectionTable::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SelectableItem_PropertiesEntry_DoNotUse::SelectableItem_PropertiesEntry_DoNotUse()
    : SuperType(SelectableItem_PropertiesEntry_DoNotUse_class_data_.base()) {}
SelectableItem_PropertiesEntry_DoNotUse::SelectableItem_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SelectableItem_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SelectableItem_PropertiesEntry_DoNotUse::SelectableItem_PropertiesEntry_DoNotUse() : SuperType() {}
SelectableItem_PropertiesEntry_DoNotUse::SelectableItem_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SelectableItem_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectableItem_PropertiesEntry_DoNotUse(arena);
}
constexpr auto SelectableItem_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectableItem_PropertiesEntry_DoNotUse),
                                            alignof(SelectableItem_PropertiesEntry_DoNotUse));
}
constexpr auto SelectableItem_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectableItem_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectableItem_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectableItem_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectableItem_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SelectableItem_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SelectableItem_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectableItem_PropertiesEntry_DoNotUse_class_data_ =
        SelectableItem_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectableItem_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectableItem_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectableItem_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return SelectableItem_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2>
SelectableItem_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectableItem_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectableItem_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\3\5\0\0\0\0\0"
    "seshat.SelectableItem.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class SelectableItem::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectableItem>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_._has_bits_);
};

SelectableItem::SelectableItem(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectableItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectableItem)
}
PROTOBUF_NDEBUG_INLINE SelectableItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectableItem& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        properties_{visibility, arena, from.properties_},
        conditions_{visibility, arena, from.conditions_},
        id_(arena, from.id_),
        content_(arena, from.content_),
        content_type_(arena, from.content_type_) {}

SelectableItem::SelectableItem(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectableItem& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectableItem_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectableItem* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.weight_ = from._impl_.weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectableItem)
}
PROTOBUF_NDEBUG_INLINE SelectableItem::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        properties_{visibility, arena},
        conditions_{visibility, arena},
        id_(arena),
        content_(arena),
        content_type_(arena) {}

inline void SelectableItem::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.weight_ = {};
}
SelectableItem::~SelectableItem() {
  // @@protoc_insertion_point(destructor:seshat.SelectableItem)
  SharedDtor(*this);
}
inline void SelectableItem::SharedDtor(MessageLite& self) {
  SelectableItem& this_ = static_cast<SelectableItem&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.content_.Destroy();
  this_._impl_.content_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectableItem::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectableItem(arena);
}
constexpr auto SelectableItem::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.properties_) +
          decltype(SelectableItem::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.properties_) +
          decltype(SelectableItem::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.conditions_) +
          decltype(SelectableItem::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectableItem), alignof(SelectableItem), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectableItem::PlacementNew_,
                                 sizeof(SelectableItem),
                                 alignof(SelectableItem));
  }
}
constexpr auto SelectableItem::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectableItem_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectableItem::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectableItem>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectableItem::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectableItem>(), &SelectableItem::ByteSizeLong,
              &SelectableItem::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_._cached_size_),
          false,
      },
      &SelectableItem::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectableItem_class_data_ =
        SelectableItem::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectableItem::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectableItem_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectableItem_class_data_.tc_table);
  return SelectableItem_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 61, 2>
SelectableItem::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectableItem_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectableItem>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.id_)}},
    // string content = 2 [json_name = "content"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.content_)}},
    // string content_type = 3 [json_name = "contentType"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.content_type_)}},
    // int32 weight = 4 [json_name = "weight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectableItem, _impl_.weight_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.weight_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.ContextCondition conditions = 6 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.conditions_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content = 2 [json_name = "content"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.content_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string content_type = 3 [json_name = "contentType"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.content_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 weight = 4 [json_name = "weight"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.weight_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // map<string, string> properties = 5 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.properties_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated .seshat.ContextCondition conditions = 6 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(SelectableItem, _impl_.conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ContextCondition>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\25\2\7\14\0\12\0\0"
    "seshat.SelectableItem"
    "id"
    "content"
    "content_type"
    "properties"
  }},
};
PROTOBUF_NOINLINE void SelectableItem::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectableItem)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.properties_.Clear();
  _impl_.conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.content_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.content_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectableItem::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectableItem& this_ = static_cast<const SelectableItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectableItem::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectableItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectableItem)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string content = 2 [json_name = "content"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_content().empty()) {
      const ::std::string& _s = this_._internal_content();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.content");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string content_type = 3 [json_name = "contentType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_content_type().empty()) {
      const ::std::string& _s = this_._internal_content_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.content_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // int32 weight = 4 [json_name = "weight"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_weight(), target);
    }
  }

  // map<string, string> properties = 5 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            5, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectableItem.properties");
      }
    }
  }

  // repeated .seshat.ContextCondition conditions = 6 [json_name = "conditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectableItem)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectableItem::ByteSizeLong(const MessageLite& base) {
  const SelectableItem& this_ = static_cast<const SelectableItem&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectableItem::ByteSizeLong() const {
  const SelectableItem& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectableItem)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> properties = 5 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated .seshat.ContextCondition conditions = 6 [json_name = "conditions"];
    {
      total_size += 1UL * this_._internal_conditions_size();
      for (const auto& msg : this_._internal_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string content = 2 [json_name = "content"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_content().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_content());
      }
    }
    // string content_type = 3 [json_name = "contentType"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_content_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_content_type());
      }
    }
    // int32 weight = 4 [json_name = "weight"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectableItem::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectableItem*>(&to_msg);
  auto& from = static_cast<const SelectableItem&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectableItem)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_content().empty()) {
        _this->_internal_set_content(from._internal_content());
      } else {
        if (_this->_impl_.content_.IsDefault()) {
          _this->_internal_set_content("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_content_type().empty()) {
        _this->_internal_set_content_type(from._internal_content_type());
      } else {
        if (_this->_impl_.content_type_.IsDefault()) {
          _this->_internal_set_content_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_weight() != 0) {
        _this->_impl_.weight_ = from._impl_.weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectableItem::CopyFrom(const SelectableItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectableItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectableItem::InternalSwap(SelectableItem* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_type_, &other->_impl_.content_type_, arena);
  swap(_impl_.weight_, other->_impl_.weight_);
}

::google::protobuf::Metadata SelectableItem::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ContextCondition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ContextCondition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_._has_bits_);
};

ContextCondition::ContextCondition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ContextCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ContextCondition)
}
PROTOBUF_NDEBUG_INLINE ContextCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ContextCondition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        key_(arena, from.key_),
        operator__(arena, from.operator__),
        value_(arena, from.value_) {}

ContextCondition::ContextCondition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ContextCondition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ContextCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ContextCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.ContextCondition)
}
PROTOBUF_NDEBUG_INLINE ContextCondition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        key_(arena),
        operator__(arena),
        value_(arena) {}

inline void ContextCondition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ContextCondition::~ContextCondition() {
  // @@protoc_insertion_point(destructor:seshat.ContextCondition)
  SharedDtor(*this);
}
inline void ContextCondition::SharedDtor(MessageLite& self) {
  ContextCondition& this_ = static_cast<ContextCondition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.key_.Destroy();
  this_._impl_.operator__.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ContextCondition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ContextCondition(arena);
}
constexpr auto ContextCondition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ContextCondition),
                                            alignof(ContextCondition));
}
constexpr auto ContextCondition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ContextCondition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ContextCondition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ContextCondition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ContextCondition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ContextCondition>(), &ContextCondition::ByteSizeLong,
              &ContextCondition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_._cached_size_),
          false,
      },
      &ContextCondition::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ContextCondition_class_data_ =
        ContextCondition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ContextCondition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ContextCondition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ContextCondition_class_data_.tc_table);
  return ContextCondition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 48, 2>
ContextCondition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ContextCondition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ContextCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.key_)}},
    // string operator = 2 [json_name = "operator"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.operator__)}},
    // string value = 3 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string operator = 2 [json_name = "operator"];
    {PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.operator__), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 3 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ContextCondition, _impl_.value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\3\10\5\0\0\0\0"
    "seshat.ContextCondition"
    "key"
    "operator"
    "value"
  }},
};
PROTOBUF_NOINLINE void ContextCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ContextCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.operator__.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ContextCondition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ContextCondition& this_ = static_cast<const ContextCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ContextCondition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ContextCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ContextCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string key = 1 [json_name = "key"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ContextCondition.key");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string operator = 2 [json_name = "operator"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_operator_().empty()) {
      const ::std::string& _s = this_._internal_operator_();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ContextCondition.operator");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string value = 3 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ContextCondition.value");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ContextCondition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ContextCondition::ByteSizeLong(const MessageLite& base) {
  const ContextCondition& this_ = static_cast<const ContextCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ContextCondition::ByteSizeLong() const {
  const ContextCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ContextCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string key = 1 [json_name = "key"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_key());
      }
    }
    // string operator = 2 [json_name = "operator"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_operator_().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_operator_());
      }
    }
    // string value = 3 [json_name = "value"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ContextCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ContextCondition*>(&to_msg);
  auto& from = static_cast<const ContextCondition&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ContextCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_operator_().empty()) {
        _this->_internal_set_operator_(from._internal_operator_());
      } else {
        if (_this->_impl_.operator__.IsDefault()) {
          _this->_internal_set_operator_("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ContextCondition::CopyFrom(const ContextCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ContextCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ContextCondition::InternalSwap(ContextCondition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.operator__, &other->_impl_.operator__, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
}

::google::protobuf::Metadata ContextCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddItemRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AddItemRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_._has_bits_);
};

AddItemRequest::AddItemRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.AddItemRequest)
}
PROTOBUF_NDEBUG_INLINE AddItemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::AddItemRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

AddItemRequest::AddItemRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AddItemRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddItemRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.item_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.AddItemRequest)
}
PROTOBUF_NDEBUG_INLINE AddItemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void AddItemRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.item_ = {};
}
AddItemRequest::~AddItemRequest() {
  // @@protoc_insertion_point(destructor:seshat.AddItemRequest)
  SharedDtor(*this);
}
inline void AddItemRequest::SharedDtor(MessageLite& self) {
  AddItemRequest& this_ = static_cast<AddItemRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.item_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AddItemRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AddItemRequest(arena);
}
constexpr auto AddItemRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AddItemRequest),
                                            alignof(AddItemRequest));
}
constexpr auto AddItemRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AddItemRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AddItemRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AddItemRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AddItemRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AddItemRequest>(), &AddItemRequest::ByteSizeLong,
              &AddItemRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_._cached_size_),
          false,
      },
      &AddItemRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AddItemRequest_class_data_ =
        AddItemRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AddItemRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AddItemRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AddItemRequest_class_data_.tc_table);
  return AddItemRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2>
AddItemRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AddItemRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::AddItemRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.SelectableItem item = 2 [json_name = "item"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_.item_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.SelectableItem item = 2 [json_name = "item"];
    {PROTOBUF_FIELD_OFFSET(AddItemRequest, _impl_.item_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
  }},
  {{
    "\25\10\0\0\0\0\0\0"
    "seshat.AddItemRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void AddItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.AddItemRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.item_ != nullptr);
      _impl_.item_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AddItemRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AddItemRequest& this_ = static_cast<const AddItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AddItemRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AddItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.AddItemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.AddItemRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem item = 2 [json_name = "item"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.item_, this_._impl_.item_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.AddItemRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AddItemRequest::ByteSizeLong(const MessageLite& base) {
  const AddItemRequest& this_ = static_cast<const AddItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AddItemRequest::ByteSizeLong() const {
  const AddItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.AddItemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectableItem item = 2 [json_name = "item"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AddItemRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddItemRequest*>(&to_msg);
  auto& from = static_cast<const AddItemRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.AddItemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.item_ != nullptr);
      if (_this->_impl_.item_ == nullptr) {
        _this->_impl_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_);
      } else {
        _this->_impl_.item_->MergeFrom(*from._impl_.item_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddItemRequest::CopyFrom(const AddItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.AddItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddItemRequest::InternalSwap(AddItemRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.item_, other->_impl_.item_);
}

::google::protobuf::Metadata AddItemRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AddItemResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AddItemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_._has_bits_);
};

void AddItemResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AddItemResponse::AddItemResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.AddItemResponse)
}
PROTOBUF_NDEBUG_INLINE AddItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::AddItemResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

AddItemResponse::AddItemResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AddItemResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AddItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AddItemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.added_item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.added_item_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.new_total_weight_ = from._impl_.new_total_weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.AddItemResponse)
}
PROTOBUF_NDEBUG_INLINE AddItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void AddItemResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, added_item_),
           0,
           offsetof(Impl_, new_total_weight_) -
               offsetof(Impl_, added_item_) +
               sizeof(Impl_::new_total_weight_));
}
AddItemResponse::~AddItemResponse() {
  // @@protoc_insertion_point(destructor:seshat.AddItemResponse)
  SharedDtor(*this);
}
inline void AddItemResponse::SharedDtor(MessageLite& self) {
  AddItemResponse& this_ = static_cast<AddItemResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.added_item_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AddItemResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AddItemResponse(arena);
}
constexpr auto AddItemResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(AddItemResponse),
                                            alignof(AddItemResponse));
}
constexpr auto AddItemResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AddItemResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AddItemResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AddItemResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AddItemResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AddItemResponse>(), &AddItemResponse::ByteSizeLong,
              &AddItemResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_._cached_size_),
          false,
      },
      &AddItemResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AddItemResponse_class_data_ =
        AddItemResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AddItemResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AddItemResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AddItemResponse_class_data_.tc_table);
  return AddItemResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
AddItemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    AddItemResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::AddItemResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectableItem added_item = 1 [json_name = "addedItem"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.added_item_)}},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AddItemResponse, _impl_.new_total_weight_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.new_total_weight_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem added_item = 1 [json_name = "addedItem"];
    {PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.added_item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.new_total_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void AddItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.AddItemResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.added_item_ != nullptr);
      _impl_.added_item_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.new_total_weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AddItemResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AddItemResponse& this_ = static_cast<const AddItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AddItemResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AddItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.AddItemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem added_item = 1 [json_name = "addedItem"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.added_item_, this_._impl_.added_item_->GetCachedSize(), target,
        stream);
  }

  // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_new_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_new_total_weight(), target);
    }
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.AddItemResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AddItemResponse::ByteSizeLong(const MessageLite& base) {
  const AddItemResponse& this_ = static_cast<const AddItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AddItemResponse::ByteSizeLong() const {
  const AddItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.AddItemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.SelectableItem added_item = 1 [json_name = "addedItem"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.added_item_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_new_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_new_total_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AddItemResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AddItemResponse*>(&to_msg);
  auto& from = static_cast<const AddItemResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.AddItemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.added_item_ != nullptr);
      if (_this->_impl_.added_item_ == nullptr) {
        _this->_impl_.added_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.added_item_);
      } else {
        _this->_impl_.added_item_->MergeFrom(*from._impl_.added_item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_new_total_weight() != 0) {
        _this->_impl_.new_total_weight_ = from._impl_.new_total_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AddItemResponse::CopyFrom(const AddItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.AddItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AddItemResponse::InternalSwap(AddItemResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.new_total_weight_)
      + sizeof(AddItemResponse::_impl_.new_total_weight_)
      - PROTOBUF_FIELD_OFFSET(AddItemResponse, _impl_.added_item_)>(
          reinterpret_cast<char*>(&_impl_.added_item_),
          reinterpret_cast<char*>(&other->_impl_.added_item_));
}

::google::protobuf::Metadata AddItemResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveItemRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveItemRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_._has_bits_);
};

RemoveItemRequest::RemoveItemRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.RemoveItemRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveItemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::RemoveItemRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_),
        item_id_(arena, from.item_id_) {}

RemoveItemRequest::RemoveItemRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveItemRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveItemRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveItemRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.RemoveItemRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveItemRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena),
        item_id_(arena) {}

inline void RemoveItemRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RemoveItemRequest::~RemoveItemRequest() {
  // @@protoc_insertion_point(destructor:seshat.RemoveItemRequest)
  SharedDtor(*this);
}
inline void RemoveItemRequest::SharedDtor(MessageLite& self) {
  RemoveItemRequest& this_ = static_cast<RemoveItemRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.item_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoveItemRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveItemRequest(arena);
}
constexpr auto RemoveItemRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoveItemRequest),
                                            alignof(RemoveItemRequest));
}
constexpr auto RemoveItemRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveItemRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveItemRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveItemRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveItemRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveItemRequest>(), &RemoveItemRequest::ByteSizeLong,
              &RemoveItemRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_._cached_size_),
          false,
      },
      &RemoveItemRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveItemRequest_class_data_ =
        RemoveItemRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveItemRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveItemRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveItemRequest_class_data_.tc_table);
  return RemoveItemRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2>
RemoveItemRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RemoveItemRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::RemoveItemRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string item_id = 2 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_.item_id_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_id = 2 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(RemoveItemRequest, _impl_.item_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\10\7\0\0\0\0\0"
    "seshat.RemoveItemRequest"
    "table_id"
    "item_id"
  }},
};
PROTOBUF_NOINLINE void RemoveItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.RemoveItemRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveItemRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveItemRequest& this_ = static_cast<const RemoveItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveItemRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.RemoveItemRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.RemoveItemRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string item_id = 2 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.RemoveItemRequest.item_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.RemoveItemRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveItemRequest::ByteSizeLong(const MessageLite& base) {
  const RemoveItemRequest& this_ = static_cast<const RemoveItemRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveItemRequest::ByteSizeLong() const {
  const RemoveItemRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.RemoveItemRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // string item_id = 2 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveItemRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveItemRequest*>(&to_msg);
  auto& from = static_cast<const RemoveItemRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.RemoveItemRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveItemRequest::CopyFrom(const RemoveItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.RemoveItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveItemRequest::InternalSwap(RemoveItemRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
}

::google::protobuf::Metadata RemoveItemRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveItemResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveItemResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_._has_bits_);
};

void RemoveItemResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RemoveItemResponse::RemoveItemResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.RemoveItemResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::RemoveItemResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveItemResponse::RemoveItemResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveItemResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveItemResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveItemResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.removed_item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.removed_item_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.new_total_weight_ = from._impl_.new_total_weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.RemoveItemResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveItemResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RemoveItemResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, removed_item_),
           0,
           offsetof(Impl_, new_total_weight_) -
               offsetof(Impl_, removed_item_) +
               sizeof(Impl_::new_total_weight_));
}
RemoveItemResponse::~RemoveItemResponse() {
  // @@protoc_insertion_point(destructor:seshat.RemoveItemResponse)
  SharedDtor(*this);
}
inline void RemoveItemResponse::SharedDtor(MessageLite& self) {
  RemoveItemResponse& this_ = static_cast<RemoveItemResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.removed_item_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoveItemResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveItemResponse(arena);
}
constexpr auto RemoveItemResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RemoveItemResponse),
                                            alignof(RemoveItemResponse));
}
constexpr auto RemoveItemResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveItemResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveItemResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveItemResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveItemResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveItemResponse>(), &RemoveItemResponse::ByteSizeLong,
              &RemoveItemResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_._cached_size_),
          false,
      },
      &RemoveItemResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveItemResponse_class_data_ =
        RemoveItemResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveItemResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveItemResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveItemResponse_class_data_.tc_table);
  return RemoveItemResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
RemoveItemResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RemoveItemResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::RemoveItemResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectableItem removed_item = 1 [json_name = "removedItem"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.removed_item_)}},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoveItemResponse, _impl_.new_total_weight_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.new_total_weight_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem removed_item = 1 [json_name = "removedItem"];
    {PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.removed_item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.new_total_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RemoveItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.RemoveItemResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.removed_item_ != nullptr);
      _impl_.removed_item_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.new_total_weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveItemResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveItemResponse& this_ = static_cast<const RemoveItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveItemResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.RemoveItemResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem removed_item = 1 [json_name = "removedItem"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.removed_item_, this_._impl_.removed_item_->GetCachedSize(), target,
        stream);
  }

  // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_new_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_new_total_weight(), target);
    }
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.RemoveItemResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveItemResponse::ByteSizeLong(const MessageLite& base) {
  const RemoveItemResponse& this_ = static_cast<const RemoveItemResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveItemResponse::ByteSizeLong() const {
  const RemoveItemResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.RemoveItemResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.SelectableItem removed_item = 1 [json_name = "removedItem"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.removed_item_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_new_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_new_total_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveItemResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveItemResponse*>(&to_msg);
  auto& from = static_cast<const RemoveItemResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.RemoveItemResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.removed_item_ != nullptr);
      if (_this->_impl_.removed_item_ == nullptr) {
        _this->_impl_.removed_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.removed_item_);
      } else {
        _this->_impl_.removed_item_->MergeFrom(*from._impl_.removed_item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_new_total_weight() != 0) {
        _this->_impl_.new_total_weight_ = from._impl_.new_total_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveItemResponse::CopyFrom(const RemoveItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.RemoveItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveItemResponse::InternalSwap(RemoveItemResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.new_total_weight_)
      + sizeof(RemoveItemResponse::_impl_.new_total_weight_)
      - PROTOBUF_FIELD_OFFSET(RemoveItemResponse, _impl_.removed_item_)>(
          reinterpret_cast<char*>(&_impl_.removed_item_),
          reinterpret_cast<char*>(&other->_impl_.removed_item_));
}

::google::protobuf::Metadata RemoveItemResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateWeightRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateWeightRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_._has_bits_);
};

UpdateWeightRequest::UpdateWeightRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWeightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UpdateWeightRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateWeightRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UpdateWeightRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_),
        item_id_(arena, from.item_id_) {}

UpdateWeightRequest::UpdateWeightRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateWeightRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWeightRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateWeightRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.new_weight_ = from._impl_.new_weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.UpdateWeightRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateWeightRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena),
        item_id_(arena) {}

inline void UpdateWeightRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.new_weight_ = {};
}
UpdateWeightRequest::~UpdateWeightRequest() {
  // @@protoc_insertion_point(destructor:seshat.UpdateWeightRequest)
  SharedDtor(*this);
}
inline void UpdateWeightRequest::SharedDtor(MessageLite& self) {
  UpdateWeightRequest& this_ = static_cast<UpdateWeightRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.item_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateWeightRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateWeightRequest(arena);
}
constexpr auto UpdateWeightRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateWeightRequest),
                                            alignof(UpdateWeightRequest));
}
constexpr auto UpdateWeightRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateWeightRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateWeightRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateWeightRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateWeightRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateWeightRequest>(), &UpdateWeightRequest::ByteSizeLong,
              &UpdateWeightRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_._cached_size_),
          false,
      },
      &UpdateWeightRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateWeightRequest_class_data_ =
        UpdateWeightRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateWeightRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateWeightRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateWeightRequest_class_data_.tc_table);
  return UpdateWeightRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 50, 2>
UpdateWeightRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UpdateWeightRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UpdateWeightRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.table_id_)}},
    // string item_id = 2 [json_name = "itemId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.item_id_)}},
    // int32 new_weight = 3 [json_name = "newWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateWeightRequest, _impl_.new_weight_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.new_weight_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string item_id = 2 [json_name = "itemId"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.item_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 new_weight = 3 [json_name = "newWeight"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightRequest, _impl_.new_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\32\10\7\0\0\0\0\0"
    "seshat.UpdateWeightRequest"
    "table_id"
    "item_id"
  }},
};
PROTOBUF_NOINLINE void UpdateWeightRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UpdateWeightRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.item_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.new_weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateWeightRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateWeightRequest& this_ = static_cast<const UpdateWeightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateWeightRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateWeightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UpdateWeightRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.UpdateWeightRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string item_id = 2 [json_name = "itemId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_item_id().empty()) {
      const ::std::string& _s = this_._internal_item_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.UpdateWeightRequest.item_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 new_weight = 3 [json_name = "newWeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_new_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_new_weight(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UpdateWeightRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateWeightRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateWeightRequest& this_ = static_cast<const UpdateWeightRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateWeightRequest::ByteSizeLong() const {
  const UpdateWeightRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UpdateWeightRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // string item_id = 2 [json_name = "itemId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_item_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_item_id());
      }
    }
    // int32 new_weight = 3 [json_name = "newWeight"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_new_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_new_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateWeightRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateWeightRequest*>(&to_msg);
  auto& from = static_cast<const UpdateWeightRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UpdateWeightRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_item_id().empty()) {
        _this->_internal_set_item_id(from._internal_item_id());
      } else {
        if (_this->_impl_.item_id_.IsDefault()) {
          _this->_internal_set_item_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_new_weight() != 0) {
        _this->_impl_.new_weight_ = from._impl_.new_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWeightRequest::CopyFrom(const UpdateWeightRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UpdateWeightRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateWeightRequest::InternalSwap(UpdateWeightRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.item_id_, &other->_impl_.item_id_, arena);
  swap(_impl_.new_weight_, other->_impl_.new_weight_);
}

::google::protobuf::Metadata UpdateWeightRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateWeightResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateWeightResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_._has_bits_);
};

void UpdateWeightResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UpdateWeightResponse::UpdateWeightResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWeightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UpdateWeightResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateWeightResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UpdateWeightResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateWeightResponse::UpdateWeightResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateWeightResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateWeightResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateWeightResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.updated_item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updated_item_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.new_total_weight_ = from._impl_.new_total_weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.UpdateWeightResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateWeightResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UpdateWeightResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, updated_item_),
           0,
           offsetof(Impl_, new_total_weight_) -
               offsetof(Impl_, updated_item_) +
               sizeof(Impl_::new_total_weight_));
}
UpdateWeightResponse::~UpdateWeightResponse() {
  // @@protoc_insertion_point(destructor:seshat.UpdateWeightResponse)
  SharedDtor(*this);
}
inline void UpdateWeightResponse::SharedDtor(MessageLite& self) {
  UpdateWeightResponse& this_ = static_cast<UpdateWeightResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.updated_item_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateWeightResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateWeightResponse(arena);
}
constexpr auto UpdateWeightResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateWeightResponse),
                                            alignof(UpdateWeightResponse));
}
constexpr auto UpdateWeightResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateWeightResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateWeightResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateWeightResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateWeightResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateWeightResponse>(), &UpdateWeightResponse::ByteSizeLong,
              &UpdateWeightResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_._cached_size_),
          false,
      },
      &UpdateWeightResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateWeightResponse_class_data_ =
        UpdateWeightResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateWeightResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateWeightResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateWeightResponse_class_data_.tc_table);
  return UpdateWeightResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
UpdateWeightResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateWeightResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UpdateWeightResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectableItem updated_item = 1 [json_name = "updatedItem"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.updated_item_)}},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UpdateWeightResponse, _impl_.new_total_weight_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.new_total_weight_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem updated_item = 1 [json_name = "updatedItem"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.updated_item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.new_total_weight_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateWeightResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UpdateWeightResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.updated_item_ != nullptr);
      _impl_.updated_item_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.new_total_weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateWeightResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateWeightResponse& this_ = static_cast<const UpdateWeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateWeightResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateWeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UpdateWeightResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem updated_item = 1 [json_name = "updatedItem"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.updated_item_, this_._impl_.updated_item_->GetCachedSize(), target,
        stream);
  }

  // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_new_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_new_total_weight(), target);
    }
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UpdateWeightResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateWeightResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateWeightResponse& this_ = static_cast<const UpdateWeightResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateWeightResponse::ByteSizeLong() const {
  const UpdateWeightResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UpdateWeightResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.SelectableItem updated_item = 1 [json_name = "updatedItem"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updated_item_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 new_total_weight = 2 [json_name = "newTotalWeight"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_new_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_new_total_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateWeightResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateWeightResponse*>(&to_msg);
  auto& from = static_cast<const UpdateWeightResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UpdateWeightResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.updated_item_ != nullptr);
      if (_this->_impl_.updated_item_ == nullptr) {
        _this->_impl_.updated_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updated_item_);
      } else {
        _this->_impl_.updated_item_->MergeFrom(*from._impl_.updated_item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_new_total_weight() != 0) {
        _this->_impl_.new_total_weight_ = from._impl_.new_total_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateWeightResponse::CopyFrom(const UpdateWeightResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UpdateWeightResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateWeightResponse::InternalSwap(UpdateWeightResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.new_total_weight_)
      + sizeof(UpdateWeightResponse::_impl_.new_total_weight_)
      - PROTOBUF_FIELD_OFFSET(UpdateWeightResponse, _impl_.updated_item_)>(
          reinterpret_cast<char*>(&_impl_.updated_item_),
          reinterpret_cast<char*>(&other->_impl_.updated_item_));
}

::google::protobuf::Metadata UpdateWeightResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_._has_bits_);
};

SelectRequest::SelectRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectRequest)
}
PROTOBUF_NDEBUG_INLINE SelectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

SelectRequest::SelectRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectRequest)
}
PROTOBUF_NDEBUG_INLINE SelectRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void SelectRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.context_ = {};
}
SelectRequest::~SelectRequest() {
  // @@protoc_insertion_point(destructor:seshat.SelectRequest)
  SharedDtor(*this);
}
inline void SelectRequest::SharedDtor(MessageLite& self) {
  SelectRequest& this_ = static_cast<SelectRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.context_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectRequest(arena);
}
constexpr auto SelectRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectRequest),
                                            alignof(SelectRequest));
}
constexpr auto SelectRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectRequest>(), &SelectRequest::ByteSizeLong,
              &SelectRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_._cached_size_),
          false,
      },
      &SelectRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectRequest_class_data_ =
        SelectRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectRequest_class_data_.tc_table);
  return SelectRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 37, 2>
SelectRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_.context_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(SelectRequest, _impl_.context_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionContext>()},
  }},
  {{
    "\24\10\0\0\0\0\0\0"
    "seshat.SelectRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void SelectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectRequest& this_ = static_cast<const SelectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionContext context = 2 [json_name = "context"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectRequest::ByteSizeLong(const MessageLite& base) {
  const SelectRequest& this_ = static_cast<const SelectRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectRequest::ByteSizeLong() const {
  const SelectRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectRequest*>(&to_msg);
  auto& from = static_cast<const SelectRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectRequest::CopyFrom(const SelectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectRequest::InternalSwap(SelectRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.context_, other->_impl_.context_);
}

::google::protobuf::Metadata SelectRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_._has_bits_);
};

void SelectResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
SelectResponse::SelectResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectResponse)
}
PROTOBUF_NDEBUG_INLINE SelectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

SelectResponse::SelectResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.selected_item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_item_)
                : nullptr;
  _impl_.result_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectResponse)
}
PROTOBUF_NDEBUG_INLINE SelectResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void SelectResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selected_item_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, selected_item_) +
               sizeof(Impl_::status_));
}
SelectResponse::~SelectResponse() {
  // @@protoc_insertion_point(destructor:seshat.SelectResponse)
  SharedDtor(*this);
}
inline void SelectResponse::SharedDtor(MessageLite& self) {
  SelectResponse& this_ = static_cast<SelectResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.selected_item_;
  delete this_._impl_.result_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectResponse(arena);
}
constexpr auto SelectResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(SelectResponse),
                                            alignof(SelectResponse));
}
constexpr auto SelectResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectResponse>(), &SelectResponse::ByteSizeLong,
              &SelectResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_._cached_size_),
          false,
      },
      &SelectResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectResponse_class_data_ =
        SelectResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectResponse_class_data_.tc_table);
  return SelectResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SelectResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectableItem selected_item = 1 [json_name = "selectedItem"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.selected_item_)}},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.result_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem selected_item = 1 [json_name = "selectedItem"];
    {PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.selected_item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.result_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.status_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::SelectionResult>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SelectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.selected_item_ != nullptr);
      _impl_.selected_item_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectResponse& this_ = static_cast<const SelectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem selected_item = 1 [json_name = "selectedItem"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.selected_item_, this_._impl_.selected_item_->GetCachedSize(), target,
        stream);
  }

  // .seshat.SelectionResult result = 2 [json_name = "result"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectResponse::ByteSizeLong(const MessageLite& base) {
  const SelectResponse& this_ = static_cast<const SelectResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectResponse::ByteSizeLong() const {
  const SelectResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.SelectableItem selected_item = 1 [json_name = "selectedItem"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.selected_item_);
    }
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectResponse*>(&to_msg);
  auto& from = static_cast<const SelectResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.selected_item_ != nullptr);
      if (_this->_impl_.selected_item_ == nullptr) {
        _this->_impl_.selected_item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.selected_item_);
      } else {
        _this->_impl_.selected_item_->MergeFrom(*from._impl_.selected_item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectResponse::CopyFrom(const SelectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectResponse::InternalSwap(SelectResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.status_)
      + sizeof(SelectResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SelectResponse, _impl_.selected_item_)>(
          reinterpret_cast<char*>(&_impl_.selected_item_),
          reinterpret_cast<char*>(&other->_impl_.selected_item_));
}

::google::protobuf::Metadata SelectResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectMultipleRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectMultipleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_._has_bits_);
};

SelectMultipleRequest::SelectMultipleRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectMultipleRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectMultipleRequest)
}
PROTOBUF_NDEBUG_INLINE SelectMultipleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectMultipleRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

SelectMultipleRequest::SelectMultipleRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectMultipleRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectMultipleRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectMultipleRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectMultipleRequest)
}
PROTOBUF_NDEBUG_INLINE SelectMultipleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void SelectMultipleRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, context_),
           0,
           offsetof(Impl_, count_) -
               offsetof(Impl_, context_) +
               sizeof(Impl_::count_));
}
SelectMultipleRequest::~SelectMultipleRequest() {
  // @@protoc_insertion_point(destructor:seshat.SelectMultipleRequest)
  SharedDtor(*this);
}
inline void SelectMultipleRequest::SharedDtor(MessageLite& self) {
  SelectMultipleRequest& this_ = static_cast<SelectMultipleRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.context_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectMultipleRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectMultipleRequest(arena);
}
constexpr auto SelectMultipleRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectMultipleRequest),
                                            alignof(SelectMultipleRequest));
}
constexpr auto SelectMultipleRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectMultipleRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectMultipleRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectMultipleRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectMultipleRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectMultipleRequest>(), &SelectMultipleRequest::ByteSizeLong,
              &SelectMultipleRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_._cached_size_),
          false,
      },
      &SelectMultipleRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectMultipleRequest_class_data_ =
        SelectMultipleRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectMultipleRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectMultipleRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectMultipleRequest_class_data_.tc_table);
  return SelectMultipleRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 45, 2>
SelectMultipleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectMultipleRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectMultipleRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.table_id_)}},
    // int32 count = 2 [json_name = "count"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectMultipleRequest, _impl_.count_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.count_)}},
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.context_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 count = 2 [json_name = "count"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.context_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionContext>()},
  }},
  {{
    "\34\10\0\0\0\0\0\0"
    "seshat.SelectMultipleRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void SelectMultipleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectMultipleRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
  }
  _impl_.count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectMultipleRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectMultipleRequest& this_ = static_cast<const SelectMultipleRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectMultipleRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectMultipleRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectMultipleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectMultipleRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 count = 2 [json_name = "count"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionContext context = 3 [json_name = "context"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectMultipleRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectMultipleRequest::ByteSizeLong(const MessageLite& base) {
  const SelectMultipleRequest& this_ = static_cast<const SelectMultipleRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectMultipleRequest::ByteSizeLong() const {
  const SelectMultipleRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectMultipleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
    // int32 count = 2 [json_name = "count"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectMultipleRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectMultipleRequest*>(&to_msg);
  auto& from = static_cast<const SelectMultipleRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectMultipleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_count() != 0) {
        _this->_impl_.count_ = from._impl_.count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectMultipleRequest::CopyFrom(const SelectMultipleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectMultipleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectMultipleRequest::InternalSwap(SelectMultipleRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.count_)
      + sizeof(SelectMultipleRequest::_impl_.count_)
      - PROTOBUF_FIELD_OFFSET(SelectMultipleRequest, _impl_.context_)>(
          reinterpret_cast<char*>(&_impl_.context_),
          reinterpret_cast<char*>(&other->_impl_.context_));
}

::google::protobuf::Metadata SelectMultipleRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectMultipleResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectMultipleResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_._has_bits_);
};

void SelectMultipleResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SelectMultipleResponse::SelectMultipleResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectMultipleResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectMultipleResponse)
}
PROTOBUF_NDEBUG_INLINE SelectMultipleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectMultipleResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        selected_items_{visibility, arena, from.selected_items_} {}

SelectMultipleResponse::SelectMultipleResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectMultipleResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectMultipleResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectMultipleResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectMultipleResponse)
}
PROTOBUF_NDEBUG_INLINE SelectMultipleResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        selected_items_{visibility, arena} {}

inline void SelectMultipleResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::status_));
}
SelectMultipleResponse::~SelectMultipleResponse() {
  // @@protoc_insertion_point(destructor:seshat.SelectMultipleResponse)
  SharedDtor(*this);
}
inline void SelectMultipleResponse::SharedDtor(MessageLite& self) {
  SelectMultipleResponse& this_ = static_cast<SelectMultipleResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.result_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectMultipleResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectMultipleResponse(arena);
}
constexpr auto SelectMultipleResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.selected_items_) +
          decltype(SelectMultipleResponse::_impl_.selected_items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SelectMultipleResponse), alignof(SelectMultipleResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectMultipleResponse::PlacementNew_,
                                 sizeof(SelectMultipleResponse),
                                 alignof(SelectMultipleResponse));
  }
}
constexpr auto SelectMultipleResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectMultipleResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectMultipleResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectMultipleResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectMultipleResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectMultipleResponse>(), &SelectMultipleResponse::ByteSizeLong,
              &SelectMultipleResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_._cached_size_),
          false,
      },
      &SelectMultipleResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectMultipleResponse_class_data_ =
        SelectMultipleResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectMultipleResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectMultipleResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectMultipleResponse_class_data_.tc_table);
  return SelectMultipleResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SelectMultipleResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectMultipleResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectMultipleResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.selected_items_)}},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.result_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.selected_items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::SelectionResult>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SelectMultipleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectMultipleResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.selected_items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectMultipleResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectMultipleResponse& this_ = static_cast<const SelectMultipleResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectMultipleResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectMultipleResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectMultipleResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_selected_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_selected_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionResult result = 2 [json_name = "result"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectMultipleResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectMultipleResponse::ByteSizeLong(const MessageLite& base) {
  const SelectMultipleResponse& this_ = static_cast<const SelectMultipleResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectMultipleResponse::ByteSizeLong() const {
  const SelectMultipleResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectMultipleResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {
      total_size += 1UL * this_._internal_selected_items_size();
      for (const auto& msg : this_._internal_selected_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectMultipleResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectMultipleResponse*>(&to_msg);
  auto& from = static_cast<const SelectMultipleResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectMultipleResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_selected_items()->MergeFrom(
      from._internal_selected_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectMultipleResponse::CopyFrom(const SelectMultipleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectMultipleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectMultipleResponse::InternalSwap(SelectMultipleResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.selected_items_.InternalSwap(&other->_impl_.selected_items_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.status_)
      + sizeof(SelectMultipleResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SelectMultipleResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata SelectMultipleResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectWithContextRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectWithContextRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_._has_bits_);
};

SelectWithContextRequest::SelectWithContextRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectWithContextRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectWithContextRequest)
}
PROTOBUF_NDEBUG_INLINE SelectWithContextRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectWithContextRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

SelectWithContextRequest::SelectWithContextRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectWithContextRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectWithContextRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectWithContextRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;
  _impl_.options_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectWithContextRequest)
}
PROTOBUF_NDEBUG_INLINE SelectWithContextRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void SelectWithContextRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, context_),
           0,
           offsetof(Impl_, options_) -
               offsetof(Impl_, context_) +
               sizeof(Impl_::options_));
}
SelectWithContextRequest::~SelectWithContextRequest() {
  // @@protoc_insertion_point(destructor:seshat.SelectWithContextRequest)
  SharedDtor(*this);
}
inline void SelectWithContextRequest::SharedDtor(MessageLite& self) {
  SelectWithContextRequest& this_ = static_cast<SelectWithContextRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.context_;
  delete this_._impl_.options_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectWithContextRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectWithContextRequest(arena);
}
constexpr auto SelectWithContextRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectWithContextRequest),
                                            alignof(SelectWithContextRequest));
}
constexpr auto SelectWithContextRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectWithContextRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectWithContextRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectWithContextRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectWithContextRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectWithContextRequest>(), &SelectWithContextRequest::ByteSizeLong,
              &SelectWithContextRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_._cached_size_),
          false,
      },
      &SelectWithContextRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectWithContextRequest_class_data_ =
        SelectWithContextRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectWithContextRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectWithContextRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectWithContextRequest_class_data_.tc_table);
  return SelectWithContextRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 48, 2>
SelectWithContextRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectWithContextRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectWithContextRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.table_id_)}},
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.context_)}},
    // .seshat.SelectionOptions options = 3 [json_name = "options"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 1, PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.options_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.context_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.SelectionOptions options = 3 [json_name = "options"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.options_), _Internal::kHasBitsOffset + 2, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionContext>()},
      {::_pbi::TcParser::GetTable<::seshat::SelectionOptions>()},
  }},
  {{
    "\37\10\0\0\0\0\0\0"
    "seshat.SelectWithContextRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void SelectWithContextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectWithContextRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.options_ != nullptr);
      _impl_.options_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectWithContextRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectWithContextRequest& this_ = static_cast<const SelectWithContextRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectWithContextRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectWithContextRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectWithContextRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectWithContextRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionContext context = 2 [json_name = "context"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  // .seshat.SelectionOptions options = 3 [json_name = "options"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.options_, this_._impl_.options_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectWithContextRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectWithContextRequest::ByteSizeLong(const MessageLite& base) {
  const SelectWithContextRequest& this_ = static_cast<const SelectWithContextRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectWithContextRequest::ByteSizeLong() const {
  const SelectWithContextRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectWithContextRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
    // .seshat.SelectionOptions options = 3 [json_name = "options"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.options_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectWithContextRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectWithContextRequest*>(&to_msg);
  auto& from = static_cast<const SelectWithContextRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectWithContextRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.options_ != nullptr);
      if (_this->_impl_.options_ == nullptr) {
        _this->_impl_.options_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.options_);
      } else {
        _this->_impl_.options_->MergeFrom(*from._impl_.options_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectWithContextRequest::CopyFrom(const SelectWithContextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectWithContextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectWithContextRequest::InternalSwap(SelectWithContextRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.options_)
      + sizeof(SelectWithContextRequest::_impl_.options_)
      - PROTOBUF_FIELD_OFFSET(SelectWithContextRequest, _impl_.context_)>(
          reinterpret_cast<char*>(&_impl_.context_),
          reinterpret_cast<char*>(&other->_impl_.context_));
}

::google::protobuf::Metadata SelectWithContextRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectWithContextResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectWithContextResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_._has_bits_);
};

void SelectWithContextResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
SelectWithContextResponse::SelectWithContextResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectWithContextResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectWithContextResponse)
}
PROTOBUF_NDEBUG_INLINE SelectWithContextResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectWithContextResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        selected_items_{visibility, arena, from.selected_items_} {}

SelectWithContextResponse::SelectWithContextResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectWithContextResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectWithContextResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectWithContextResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.result_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectWithContextResponse)
}
PROTOBUF_NDEBUG_INLINE SelectWithContextResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        selected_items_{visibility, arena} {}

inline void SelectWithContextResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, result_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, result_) +
               sizeof(Impl_::status_));
}
SelectWithContextResponse::~SelectWithContextResponse() {
  // @@protoc_insertion_point(destructor:seshat.SelectWithContextResponse)
  SharedDtor(*this);
}
inline void SelectWithContextResponse::SharedDtor(MessageLite& self) {
  SelectWithContextResponse& this_ = static_cast<SelectWithContextResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.result_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectWithContextResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectWithContextResponse(arena);
}
constexpr auto SelectWithContextResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.selected_items_) +
          decltype(SelectWithContextResponse::_impl_.selected_items_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SelectWithContextResponse), alignof(SelectWithContextResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectWithContextResponse::PlacementNew_,
                                 sizeof(SelectWithContextResponse),
                                 alignof(SelectWithContextResponse));
  }
}
constexpr auto SelectWithContextResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectWithContextResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectWithContextResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectWithContextResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectWithContextResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectWithContextResponse>(), &SelectWithContextResponse::ByteSizeLong,
              &SelectWithContextResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_._cached_size_),
          false,
      },
      &SelectWithContextResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectWithContextResponse_class_data_ =
        SelectWithContextResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectWithContextResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectWithContextResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectWithContextResponse_class_data_.tc_table);
  return SelectWithContextResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
SelectWithContextResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectWithContextResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectWithContextResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.selected_items_)}},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.result_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.selected_items_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.result_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
      {::_pbi::TcParser::GetTable<::seshat::SelectionResult>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void SelectWithContextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectWithContextResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.selected_items_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.result_ != nullptr);
      _impl_.result_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectWithContextResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectWithContextResponse& this_ = static_cast<const SelectWithContextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectWithContextResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectWithContextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectWithContextResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_selected_items_size());
       i < n; i++) {
    const auto& repfield = this_._internal_selected_items().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionResult result = 2 [json_name = "result"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.result_, this_._impl_.result_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectWithContextResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectWithContextResponse::ByteSizeLong(const MessageLite& base) {
  const SelectWithContextResponse& this_ = static_cast<const SelectWithContextResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectWithContextResponse::ByteSizeLong() const {
  const SelectWithContextResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectWithContextResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.SelectableItem selected_items = 1 [json_name = "selectedItems"];
    {
      total_size += 1UL * this_._internal_selected_items_size();
      for (const auto& msg : this_._internal_selected_items()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.SelectionResult result = 2 [json_name = "result"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.result_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectWithContextResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectWithContextResponse*>(&to_msg);
  auto& from = static_cast<const SelectWithContextResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectWithContextResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_selected_items()->MergeFrom(
      from._internal_selected_items());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.result_ != nullptr);
      if (_this->_impl_.result_ == nullptr) {
        _this->_impl_.result_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.result_);
      } else {
        _this->_impl_.result_->MergeFrom(*from._impl_.result_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectWithContextResponse::CopyFrom(const SelectWithContextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectWithContextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectWithContextResponse::InternalSwap(SelectWithContextResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.selected_items_.InternalSwap(&other->_impl_.selected_items_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.status_)
      + sizeof(SelectWithContextResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(SelectWithContextResponse, _impl_.result_)>(
          reinterpret_cast<char*>(&_impl_.result_),
          reinterpret_cast<char*>(&other->_impl_.result_));
}

::google::protobuf::Metadata SelectWithContextResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
SelectionContext_DataEntry_DoNotUse::SelectionContext_DataEntry_DoNotUse()
    : SuperType(SelectionContext_DataEntry_DoNotUse_class_data_.base()) {}
SelectionContext_DataEntry_DoNotUse::SelectionContext_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, SelectionContext_DataEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
SelectionContext_DataEntry_DoNotUse::SelectionContext_DataEntry_DoNotUse() : SuperType() {}
SelectionContext_DataEntry_DoNotUse::SelectionContext_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL SelectionContext_DataEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionContext_DataEntry_DoNotUse(arena);
}
constexpr auto SelectionContext_DataEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectionContext_DataEntry_DoNotUse),
                                            alignof(SelectionContext_DataEntry_DoNotUse));
}
constexpr auto SelectionContext_DataEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionContext_DataEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionContext_DataEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionContext_DataEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionContext_DataEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&SelectionContext_DataEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &SelectionContext_DataEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionContext_DataEntry_DoNotUse_class_data_ =
        SelectionContext_DataEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionContext_DataEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionContext_DataEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionContext_DataEntry_DoNotUse_class_data_.tc_table);
  return SelectionContext_DataEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2>
SelectionContext_DataEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectionContext_DataEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectionContext_DataEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext_DataEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\41\3\5\0\0\0\0\0"
    "seshat.SelectionContext.DataEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class SelectionContext::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionContext>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_._has_bits_);
};

SelectionContext::SelectionContext(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionContext_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectionContext)
}
PROTOBUF_NDEBUG_INLINE SelectionContext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectionContext& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        data_{visibility, arena, from.data_},
        tags_{visibility, arena, from.tags_},
        entity_id_(arena, from.entity_id_),
        location_(arena, from.location_) {}

SelectionContext::SelectionContext(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionContext& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionContext_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionContext* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.player_level_ = from._impl_.player_level_;

  // @@protoc_insertion_point(copy_constructor:seshat.SelectionContext)
}
PROTOBUF_NDEBUG_INLINE SelectionContext::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        data_{visibility, arena},
        tags_{visibility, arena},
        entity_id_(arena),
        location_(arena) {}

inline void SelectionContext::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.player_level_ = {};
}
SelectionContext::~SelectionContext() {
  // @@protoc_insertion_point(destructor:seshat.SelectionContext)
  SharedDtor(*this);
}
inline void SelectionContext::SharedDtor(MessageLite& self) {
  SelectionContext& this_ = static_cast<SelectionContext&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.location_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionContext::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionContext(arena);
}
constexpr auto SelectionContext::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.data_) +
          decltype(SelectionContext::_impl_.data_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.data_) +
          decltype(SelectionContext::_impl_.data_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.tags_) +
          decltype(SelectionContext::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(SelectionContext), alignof(SelectionContext), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionContext::PlacementNew_,
                                 sizeof(SelectionContext),
                                 alignof(SelectionContext));
  }
}
constexpr auto SelectionContext::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionContext_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionContext::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionContext>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionContext::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionContext>(), &SelectionContext::ByteSizeLong,
              &SelectionContext::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_._cached_size_),
          false,
      },
      &SelectionContext::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionContext_class_data_ =
        SelectionContext::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionContext::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionContext_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionContext_class_data_.tc_table);
  return SelectionContext_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 1, 57, 2>
SelectionContext::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_._has_bits_),
    0, // no _extensions_
    5, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    SelectionContext_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectionContext>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string location = 4 [json_name = "location"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.location_)}},
    // repeated string tags = 5 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.tags_)}},
    // string entity_id = 2 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.entity_id_)}},
    // int32 player_level = 3 [json_name = "playerLevel"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionContext, _impl_.player_level_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.player_level_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, string> data = 1 [json_name = "data"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.data_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string entity_id = 2 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 player_level = 3 [json_name = "playerLevel"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.player_level_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string location = 4 [json_name = "location"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.location_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 5 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(SelectionContext, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\27\4\11\0\10\4\0\0"
    "seshat.SelectionContext"
    "data"
    "entity_id"
    "location"
    "tags"
  }},
};
PROTOBUF_NOINLINE void SelectionContext::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectionContext)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_.Clear();
  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.location_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.player_level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionContext::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionContext& this_ = static_cast<const SelectionContext&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionContext::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionContext& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectionContext)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, string> data = 1 [json_name = "data"];
  if (!this_._internal_data().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_data();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.data");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.data");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.data");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.data");
      }
    }
  }

  // string entity_id = 2 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 player_level = 3 [json_name = "playerLevel"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_player_level() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_player_level(), target);
    }
  }

  // string location = 4 [json_name = "location"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_location().empty()) {
      const ::std::string& _s = this_._internal_location();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.location");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // repeated string tags = 5 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionContext.tags");
    target = stream->WriteString(5, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectionContext)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionContext::ByteSizeLong(const MessageLite& base) {
  const SelectionContext& this_ = static_cast<const SelectionContext&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionContext::ByteSizeLong() const {
  const SelectionContext& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectionContext)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> data = 1 [json_name = "data"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_data_size());
      for (const auto& entry : this_._internal_data()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
    // repeated string tags = 5 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string entity_id = 2 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string location = 4 [json_name = "location"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_location().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_location());
      }
    }
    // int32 player_level = 3 [json_name = "playerLevel"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_player_level() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_player_level());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionContext::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionContext*>(&to_msg);
  auto& from = static_cast<const SelectionContext&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectionContext)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.data_.MergeFrom(from._impl_.data_);
  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_location().empty()) {
        _this->_internal_set_location(from._internal_location());
      } else {
        if (_this->_impl_.location_.IsDefault()) {
          _this->_internal_set_location("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_player_level() != 0) {
        _this->_impl_.player_level_ = from._impl_.player_level_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionContext::CopyFrom(const SelectionContext& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectionContext)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionContext::InternalSwap(SelectionContext* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.location_, &other->_impl_.location_, arena);
  swap(_impl_.player_level_, other->_impl_.player_level_);
}

::google::protobuf::Metadata SelectionContext::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionOptions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionOptions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_._has_bits_);
};

SelectionOptions::SelectionOptions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectionOptions)
}
PROTOBUF_NDEBUG_INLINE SelectionOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectionOptions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        required_tags_{visibility, arena, from.required_tags_},
        excluded_tags_{visibility, arena, from.excluded_tags_} {}

SelectionOptions::SelectionOptions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionOptions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionOptions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionOptions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, min_count_),
           offsetof(Impl_, weight_modifier_) -
               offsetof(Impl_, min_count_) +
               sizeof(Impl_::weight_modifier_));

  // @@protoc_insertion_point(copy_constructor:seshat.SelectionOptions)
}
PROTOBUF_NDEBUG_INLINE SelectionOptions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        required_tags_{visibility, arena},
        excluded_tags_{visibility, arena} {}

inline void SelectionOptions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, min_count_),
           0,
           offsetof(Impl_, weight_modifier_) -
               offsetof(Impl_, min_count_) +
               sizeof(Impl_::weight_modifier_));
}
SelectionOptions::~SelectionOptions() {
  // @@protoc_insertion_point(destructor:seshat.SelectionOptions)
  SharedDtor(*this);
}
inline void SelectionOptions::SharedDtor(MessageLite& self) {
  SelectionOptions& this_ = static_cast<SelectionOptions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionOptions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionOptions(arena);
}
constexpr auto SelectionOptions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.required_tags_) +
          decltype(SelectionOptions::_impl_.required_tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.excluded_tags_) +
          decltype(SelectionOptions::_impl_.excluded_tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(SelectionOptions), alignof(SelectionOptions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&SelectionOptions::PlacementNew_,
                                 sizeof(SelectionOptions),
                                 alignof(SelectionOptions));
  }
}
constexpr auto SelectionOptions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionOptions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionOptions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionOptions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionOptions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionOptions>(), &SelectionOptions::ByteSizeLong,
              &SelectionOptions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_._cached_size_),
          false,
      },
      &SelectionOptions::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionOptions_class_data_ =
        SelectionOptions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionOptions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionOptions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionOptions_class_data_.tc_table);
  return SelectionOptions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 58, 2>
SelectionOptions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectionOptions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectionOptions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 min_count = 1 [json_name = "minCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionOptions, _impl_.min_count_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.min_count_)}},
    // int32 max_count = 2 [json_name = "maxCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionOptions, _impl_.max_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.max_count_)}},
    // bool allow_empty = 3 [json_name = "allowEmpty"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SelectionOptions, _impl_.allow_empty_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.allow_empty_)}},
    // repeated string required_tags = 4 [json_name = "requiredTags"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.required_tags_)}},
    // repeated string excluded_tags = 5 [json_name = "excludedTags"];
    {::_pbi::TcParser::FastUR1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.excluded_tags_)}},
    // float weight_modifier = 6 [json_name = "weightModifier"];
    {::_pbi::TcParser::FastF32S1,
     {53, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.weight_modifier_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 min_count = 1 [json_name = "minCount"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.min_count_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_count = 2 [json_name = "maxCount"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.max_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // bool allow_empty = 3 [json_name = "allowEmpty"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.allow_empty_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string required_tags = 4 [json_name = "requiredTags"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.required_tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string excluded_tags = 5 [json_name = "excludedTags"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.excluded_tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // float weight_modifier = 6 [json_name = "weightModifier"];
    {PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.weight_modifier_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\27\0\0\0\15\15\0\0"
    "seshat.SelectionOptions"
    "required_tags"
    "excluded_tags"
  }},
};
PROTOBUF_NOINLINE void SelectionOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectionOptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.required_tags_.Clear();
  _impl_.excluded_tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    ::memset(&_impl_.min_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.weight_modifier_) -
        reinterpret_cast<char*>(&_impl_.min_count_)) + sizeof(_impl_.weight_modifier_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionOptions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionOptions& this_ = static_cast<const SelectionOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionOptions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectionOptions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 min_count = 1 [json_name = "minCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_min_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_min_count(), target);
    }
  }

  // int32 max_count = 2 [json_name = "maxCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_max_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_max_count(), target);
    }
  }

  // bool allow_empty = 3 [json_name = "allowEmpty"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_allow_empty() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_allow_empty(), target);
    }
  }

  // repeated string required_tags = 4 [json_name = "requiredTags"];
  for (int i = 0, n = this_._internal_required_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_required_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionOptions.required_tags");
    target = stream->WriteString(4, s, target);
  }

  // repeated string excluded_tags = 5 [json_name = "excludedTags"];
  for (int i = 0, n = this_._internal_excluded_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_excluded_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionOptions.excluded_tags");
    target = stream->WriteString(5, s, target);
  }

  // float weight_modifier = 6 [json_name = "weightModifier"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_weight_modifier()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          6, this_._internal_weight_modifier(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectionOptions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionOptions::ByteSizeLong(const MessageLite& base) {
  const SelectionOptions& this_ = static_cast<const SelectionOptions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionOptions::ByteSizeLong() const {
  const SelectionOptions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectionOptions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string required_tags = 4 [json_name = "requiredTags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_required_tags().size());
      for (int i = 0, n = this_._internal_required_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_required_tags().Get(i));
      }
    }
    // repeated string excluded_tags = 5 [json_name = "excludedTags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_excluded_tags().size());
      for (int i = 0, n = this_._internal_excluded_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_excluded_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // int32 min_count = 1 [json_name = "minCount"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_min_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_min_count());
      }
    }
    // int32 max_count = 2 [json_name = "maxCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_max_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_count());
      }
    }
    // bool allow_empty = 3 [json_name = "allowEmpty"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_allow_empty() != 0) {
        total_size += 2;
      }
    }
    // float weight_modifier = 6 [json_name = "weightModifier"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_weight_modifier()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionOptions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionOptions*>(&to_msg);
  auto& from = static_cast<const SelectionOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectionOptions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_required_tags()->MergeFrom(from._internal_required_tags());
  _this->_internal_mutable_excluded_tags()->MergeFrom(from._internal_excluded_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (from._internal_min_count() != 0) {
        _this->_impl_.min_count_ = from._impl_.min_count_;
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_max_count() != 0) {
        _this->_impl_.max_count_ = from._impl_.max_count_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_allow_empty() != 0) {
        _this->_impl_.allow_empty_ = from._impl_.allow_empty_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_weight_modifier()) != 0) {
        _this->_impl_.weight_modifier_ = from._impl_.weight_modifier_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionOptions::CopyFrom(const SelectionOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectionOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionOptions::InternalSwap(SelectionOptions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.required_tags_.InternalSwap(&other->_impl_.required_tags_);
  _impl_.excluded_tags_.InternalSwap(&other->_impl_.excluded_tags_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.weight_modifier_)
      + sizeof(SelectionOptions::_impl_.weight_modifier_)
      - PROTOBUF_FIELD_OFFSET(SelectionOptions, _impl_.min_count_)>(
          reinterpret_cast<char*>(&_impl_.min_count_),
          reinterpret_cast<char*>(&other->_impl_.min_count_));
}

::google::protobuf::Metadata SelectionOptions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SelectionResult::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SelectionResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_._has_bits_);
};

SelectionResult::SelectionResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.SelectionResult)
}
PROTOBUF_NDEBUG_INLINE SelectionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::SelectionResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        selection_id_(arena, from.selection_id_) {}

SelectionResult::SelectionResult(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SelectionResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SelectionResult_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SelectionResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_weight_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_weight_),
           offsetof(Impl_, selection_timestamp_) -
               offsetof(Impl_, total_weight_) +
               sizeof(Impl_::selection_timestamp_));

  // @@protoc_insertion_point(copy_constructor:seshat.SelectionResult)
}
PROTOBUF_NDEBUG_INLINE SelectionResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        selection_id_(arena) {}

inline void SelectionResult::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_weight_),
           0,
           offsetof(Impl_, selection_timestamp_) -
               offsetof(Impl_, total_weight_) +
               sizeof(Impl_::selection_timestamp_));
}
SelectionResult::~SelectionResult() {
  // @@protoc_insertion_point(destructor:seshat.SelectionResult)
  SharedDtor(*this);
}
inline void SelectionResult::SharedDtor(MessageLite& self) {
  SelectionResult& this_ = static_cast<SelectionResult&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.selection_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SelectionResult::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SelectionResult(arena);
}
constexpr auto SelectionResult::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SelectionResult),
                                            alignof(SelectionResult));
}
constexpr auto SelectionResult::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SelectionResult_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SelectionResult::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SelectionResult>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SelectionResult::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SelectionResult>(), &SelectionResult::ByteSizeLong,
              &SelectionResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_._cached_size_),
          false,
      },
      &SelectionResult::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SelectionResult_class_data_ =
        SelectionResult::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SelectionResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SelectionResult_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SelectionResult_class_data_.tc_table);
  return SelectionResult_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 43, 2>
SelectionResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SelectionResult_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::SelectionResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 total_weight = 1 [json_name = "totalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionResult, _impl_.total_weight_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.total_weight_)}},
    // int32 roll_value = 2 [json_name = "rollValue"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionResult, _impl_.roll_value_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.roll_value_)}},
    // int32 items_evaluated = 3 [json_name = "itemsEvaluated"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionResult, _impl_.items_evaluated_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.items_evaluated_)}},
    // int32 items_filtered = 4 [json_name = "itemsFiltered"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SelectionResult, _impl_.items_filtered_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.items_filtered_)}},
    // int64 selection_timestamp = 5 [json_name = "selectionTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(SelectionResult, _impl_.selection_timestamp_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.selection_timestamp_)}},
    // string selection_id = 6 [json_name = "selectionId"];
    {::_pbi::TcParser::FastUS1,
     {50, 0, 0, PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.selection_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total_weight = 1 [json_name = "totalWeight"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.total_weight_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 roll_value = 2 [json_name = "rollValue"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.roll_value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 items_evaluated = 3 [json_name = "itemsEvaluated"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.items_evaluated_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 items_filtered = 4 [json_name = "itemsFiltered"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.items_filtered_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 selection_timestamp = 5 [json_name = "selectionTimestamp"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.selection_timestamp_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string selection_id = 6 [json_name = "selectionId"];
    {PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.selection_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\0\0\0\0\14\0"
    "seshat.SelectionResult"
    "selection_id"
  }},
};
PROTOBUF_NOINLINE void SelectionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.SelectionResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.selection_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000003eu) != 0) {
    ::memset(&_impl_.total_weight_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.selection_timestamp_) -
        reinterpret_cast<char*>(&_impl_.total_weight_)) + sizeof(_impl_.selection_timestamp_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SelectionResult::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SelectionResult& this_ = static_cast<const SelectionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SelectionResult::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SelectionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.SelectionResult)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total_weight = 1 [json_name = "totalWeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_total_weight(), target);
    }
  }

  // int32 roll_value = 2 [json_name = "rollValue"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_roll_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_roll_value(), target);
    }
  }

  // int32 items_evaluated = 3 [json_name = "itemsEvaluated"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_items_evaluated() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_items_evaluated(), target);
    }
  }

  // int32 items_filtered = 4 [json_name = "itemsFiltered"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_items_filtered() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_items_filtered(), target);
    }
  }

  // int64 selection_timestamp = 5 [json_name = "selectionTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_selection_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<5>(
              stream, this_._internal_selection_timestamp(), target);
    }
  }

  // string selection_id = 6 [json_name = "selectionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_selection_id().empty()) {
      const ::std::string& _s = this_._internal_selection_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.SelectionResult.selection_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.SelectionResult)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SelectionResult::ByteSizeLong(const MessageLite& base) {
  const SelectionResult& this_ = static_cast<const SelectionResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SelectionResult::ByteSizeLong() const {
  const SelectionResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.SelectionResult)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // string selection_id = 6 [json_name = "selectionId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_selection_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_selection_id());
      }
    }
    // int32 total_weight = 1 [json_name = "totalWeight"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_weight());
      }
    }
    // int32 roll_value = 2 [json_name = "rollValue"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_roll_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_roll_value());
      }
    }
    // int32 items_evaluated = 3 [json_name = "itemsEvaluated"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_items_evaluated() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_items_evaluated());
      }
    }
    // int32 items_filtered = 4 [json_name = "itemsFiltered"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_items_filtered() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_items_filtered());
      }
    }
    // int64 selection_timestamp = 5 [json_name = "selectionTimestamp"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_selection_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_selection_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SelectionResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SelectionResult*>(&to_msg);
  auto& from = static_cast<const SelectionResult&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.SelectionResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_selection_id().empty()) {
        _this->_internal_set_selection_id(from._internal_selection_id());
      } else {
        if (_this->_impl_.selection_id_.IsDefault()) {
          _this->_internal_set_selection_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_weight() != 0) {
        _this->_impl_.total_weight_ = from._impl_.total_weight_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_roll_value() != 0) {
        _this->_impl_.roll_value_ = from._impl_.roll_value_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_items_evaluated() != 0) {
        _this->_impl_.items_evaluated_ = from._impl_.items_evaluated_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_items_filtered() != 0) {
        _this->_impl_.items_filtered_ = from._impl_.items_filtered_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_selection_timestamp() != 0) {
        _this->_impl_.selection_timestamp_ = from._impl_.selection_timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SelectionResult::CopyFrom(const SelectionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.SelectionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SelectionResult::InternalSwap(SelectionResult* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.selection_id_, &other->_impl_.selection_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.selection_timestamp_)
      + sizeof(SelectionResult::_impl_.selection_timestamp_)
      - PROTOBUF_FIELD_OFFSET(SelectionResult, _impl_.total_weight_)>(
          reinterpret_cast<char*>(&_impl_.total_weight_),
          reinterpret_cast<char*>(&other->_impl_.total_weight_));
}

::google::protobuf::Metadata SelectionResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_._has_bits_);
};

GetTableRequest::GetTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetTableRequest)
}
PROTOBUF_NDEBUG_INLINE GetTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

GetTableRequest::GetTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.include_items_ = from._impl_.include_items_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetTableRequest)
}
PROTOBUF_NDEBUG_INLINE GetTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void GetTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.include_items_ = {};
}
GetTableRequest::~GetTableRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetTableRequest)
  SharedDtor(*this);
}
inline void GetTableRequest::SharedDtor(MessageLite& self) {
  GetTableRequest& this_ = static_cast<GetTableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTableRequest(arena);
}
constexpr auto GetTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetTableRequest),
                                            alignof(GetTableRequest));
}
constexpr auto GetTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTableRequest>(), &GetTableRequest::ByteSizeLong,
              &GetTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_._cached_size_),
          false,
      },
      &GetTableRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTableRequest_class_data_ =
        GetTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTableRequest_class_data_.tc_table);
  return GetTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2>
GetTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool include_items = 2 [json_name = "includeItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetTableRequest, _impl_.include_items_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_.include_items_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool include_items = 2 [json_name = "includeItems"];
    {PROTOBUF_FIELD_OFFSET(GetTableRequest, _impl_.include_items_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\26\10\0\0\0\0\0\0"
    "seshat.GetTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void GetTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  _impl_.include_items_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTableRequest& this_ = static_cast<const GetTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool include_items = 2 [json_name = "includeItems"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_include_items() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_include_items(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTableRequest::ByteSizeLong(const MessageLite& base) {
  const GetTableRequest& this_ = static_cast<const GetTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTableRequest::ByteSizeLong() const {
  const GetTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // bool include_items = 2 [json_name = "includeItems"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_include_items() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTableRequest*>(&to_msg);
  auto& from = static_cast<const GetTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_include_items() != 0) {
        _this->_impl_.include_items_ = from._impl_.include_items_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableRequest::CopyFrom(const GetTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTableRequest::InternalSwap(GetTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.include_items_, other->_impl_.include_items_);
}

::google::protobuf::Metadata GetTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_._has_bits_);
};

void GetTableResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
GetTableResponse::GetTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetTableResponse)
}
PROTOBUF_NDEBUG_INLINE GetTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

GetTableResponse::GetTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.table_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetTableResponse)
}
PROTOBUF_NDEBUG_INLINE GetTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void GetTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, table_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, table_) +
               sizeof(Impl_::status_));
}
GetTableResponse::~GetTableResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetTableResponse)
  SharedDtor(*this);
}
inline void GetTableResponse::SharedDtor(MessageLite& self) {
  GetTableResponse& this_ = static_cast<GetTableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.table_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetTableResponse(arena);
}
constexpr auto GetTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GetTableResponse),
                                            alignof(GetTableResponse));
}
constexpr auto GetTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetTableResponse>(), &GetTableResponse::ByteSizeLong,
              &GetTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_._cached_size_),
          false,
      },
      &GetTableResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetTableResponse_class_data_ =
        GetTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetTableResponse_class_data_.tc_table);
  return GetTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
GetTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.status_)}},
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    {PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.table_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.table_ != nullptr);
      _impl_.table_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetTableResponse& this_ = static_cast<const GetTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionTable table = 1 [json_name = "table"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.table_, this_._impl_.table_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetTableResponse::ByteSizeLong(const MessageLite& base) {
  const GetTableResponse& this_ = static_cast<const GetTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetTableResponse::ByteSizeLong() const {
  const GetTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.SelectionTable table = 1 [json_name = "table"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.table_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetTableResponse*>(&to_msg);
  auto& from = static_cast<const GetTableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.table_ != nullptr);
      if (_this->_impl_.table_ == nullptr) {
        _this->_impl_.table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.table_);
      } else {
        _this->_impl_.table_->MergeFrom(*from._impl_.table_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetTableResponse::CopyFrom(const GetTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetTableResponse::InternalSwap(GetTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.status_)
      + sizeof(GetTableResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(GetTableResponse, _impl_.table_)>(
          reinterpret_cast<char*>(&_impl_.table_),
          reinterpret_cast<char*>(&other->_impl_.table_));
}

::google::protobuf::Metadata GetTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTablesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListTablesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_._has_bits_);
};

ListTablesRequest::ListTablesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ListTablesRequest)
}
PROTOBUF_NDEBUG_INLINE ListTablesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ListTablesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tags_{visibility, arena, from.tags_},
        cursor_(arena, from.cursor_),
        name_filter_(arena, from.name_filter_) {}

ListTablesRequest::ListTablesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListTablesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTablesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.limit_ = from._impl_.limit_;

  // @@protoc_insertion_point(copy_constructor:seshat.ListTablesRequest)
}
PROTOBUF_NDEBUG_INLINE ListTablesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tags_{visibility, arena},
        cursor_(arena),
        name_filter_(arena) {}

inline void ListTablesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_ = {};
}
ListTablesRequest::~ListTablesRequest() {
  // @@protoc_insertion_point(destructor:seshat.ListTablesRequest)
  SharedDtor(*this);
}
inline void ListTablesRequest::SharedDtor(MessageLite& self) {
  ListTablesRequest& this_ = static_cast<ListTablesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.cursor_.Destroy();
  this_._impl_.name_filter_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListTablesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListTablesRequest(arena);
}
constexpr auto ListTablesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.tags_) +
          decltype(ListTablesRequest::_impl_.tags_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListTablesRequest), alignof(ListTablesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListTablesRequest::PlacementNew_,
                                 sizeof(ListTablesRequest),
                                 alignof(ListTablesRequest));
  }
}
constexpr auto ListTablesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListTablesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListTablesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListTablesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListTablesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListTablesRequest>(), &ListTablesRequest::ByteSizeLong,
              &ListTablesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_._cached_size_),
          false,
      },
      &ListTablesRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListTablesRequest_class_data_ =
        ListTablesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListTablesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListTablesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListTablesRequest_class_data_.tc_table);
  return ListTablesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 54, 2>
ListTablesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ListTablesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ListTablesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string tags = 4 [json_name = "tags"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.tags_)}},
    // int32 limit = 1 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListTablesRequest, _impl_.limit_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.limit_)}},
    // string cursor = 2 [json_name = "cursor"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.cursor_)}},
    // string name_filter = 3 [json_name = "nameFilter"];
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.name_filter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 limit = 1 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string cursor = 2 [json_name = "cursor"];
    {PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.cursor_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name_filter = 3 [json_name = "nameFilter"];
    {PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.name_filter_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string tags = 4 [json_name = "tags"];
    {PROTOBUF_FIELD_OFFSET(ListTablesRequest, _impl_.tags_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\30\0\6\13\4\0\0\0"
    "seshat.ListTablesRequest"
    "cursor"
    "name_filter"
    "tags"
  }},
};
PROTOBUF_NOINLINE void ListTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ListTablesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.cursor_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_filter_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.limit_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListTablesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListTablesRequest& this_ = static_cast<const ListTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListTablesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ListTablesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 limit = 1 [json_name = "limit"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_limit(), target);
    }
  }

  // string cursor = 2 [json_name = "cursor"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_cursor().empty()) {
      const ::std::string& _s = this_._internal_cursor();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ListTablesRequest.cursor");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string name_filter = 3 [json_name = "nameFilter"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name_filter().empty()) {
      const ::std::string& _s = this_._internal_name_filter();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ListTablesRequest.name_filter");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // repeated string tags = 4 [json_name = "tags"];
  for (int i = 0, n = this_._internal_tags_size(); i < n; ++i) {
    const auto& s = this_._internal_tags().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ListTablesRequest.tags");
    target = stream->WriteString(4, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ListTablesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListTablesRequest::ByteSizeLong(const MessageLite& base) {
  const ListTablesRequest& this_ = static_cast<const ListTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListTablesRequest::ByteSizeLong() const {
  const ListTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ListTablesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string tags = 4 [json_name = "tags"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_tags().size());
      for (int i = 0, n = this_._internal_tags().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_tags().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string cursor = 2 [json_name = "cursor"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_cursor().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_cursor());
      }
    }
    // string name_filter = 3 [json_name = "nameFilter"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name_filter().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name_filter());
      }
    }
    // int32 limit = 1 [json_name = "limit"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_limit());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListTablesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListTablesRequest*>(&to_msg);
  auto& from = static_cast<const ListTablesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ListTablesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tags()->MergeFrom(from._internal_tags());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_cursor().empty()) {
        _this->_internal_set_cursor(from._internal_cursor());
      } else {
        if (_this->_impl_.cursor_.IsDefault()) {
          _this->_internal_set_cursor("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name_filter().empty()) {
        _this->_internal_set_name_filter(from._internal_name_filter());
      } else {
        if (_this->_impl_.name_filter_.IsDefault()) {
          _this->_internal_set_name_filter("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListTablesRequest::CopyFrom(const ListTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ListTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListTablesRequest::InternalSwap(ListTablesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cursor_, &other->_impl_.cursor_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_filter_, &other->_impl_.name_filter_, arena);
  swap(_impl_.limit_, other->_impl_.limit_);
}

::google::protobuf::Metadata ListTablesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ListTablesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ListTablesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_._has_bits_);
};

void ListTablesResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ListTablesResponse::ListTablesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ListTablesResponse)
}
PROTOBUF_NDEBUG_INLINE ListTablesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ListTablesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tables_{visibility, arena, from.tables_},
        next_cursor_(arena, from.next_cursor_) {}

ListTablesResponse::ListTablesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ListTablesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ListTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ListTablesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.ListTablesResponse)
}
PROTOBUF_NDEBUG_INLINE ListTablesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        tables_{visibility, arena},
        next_cursor_(arena) {}

inline void ListTablesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_count_));
}
ListTablesResponse::~ListTablesResponse() {
  // @@protoc_insertion_point(destructor:seshat.ListTablesResponse)
  SharedDtor(*this);
}
inline void ListTablesResponse::SharedDtor(MessageLite& self) {
  ListTablesResponse& this_ = static_cast<ListTablesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.next_cursor_.Destroy();
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ListTablesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ListTablesResponse(arena);
}
constexpr auto ListTablesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.tables_) +
          decltype(ListTablesResponse::_impl_.tables_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ListTablesResponse), alignof(ListTablesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ListTablesResponse::PlacementNew_,
                                 sizeof(ListTablesResponse),
                                 alignof(ListTablesResponse));
  }
}
constexpr auto ListTablesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ListTablesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ListTablesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ListTablesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ListTablesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ListTablesResponse>(), &ListTablesResponse::ByteSizeLong,
              &ListTablesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_._cached_size_),
          false,
      },
      &ListTablesResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ListTablesResponse_class_data_ =
        ListTablesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ListTablesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ListTablesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ListTablesResponse_class_data_.tc_table);
  return ListTablesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 45, 2>
ListTablesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ListTablesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ListTablesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 4 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.status_)}},
    // repeated .seshat.SelectionTable tables = 1 [json_name = "tables"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.tables_)}},
    // string next_cursor = 2 [json_name = "nextCursor"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.next_cursor_)}},
    // int32 total_count = 3 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ListTablesResponse, _impl_.total_count_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.total_count_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.SelectionTable tables = 1 [json_name = "tables"];
    {PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.tables_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string next_cursor = 2 [json_name = "nextCursor"];
    {PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.next_cursor_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 total_count = 3 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
    "\31\0\13\0\0\0\0\0"
    "seshat.ListTablesResponse"
    "next_cursor"
  }},
};
PROTOBUF_NOINLINE void ListTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ListTablesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tables_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.next_cursor_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ListTablesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ListTablesResponse& this_ = static_cast<const ListTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ListTablesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ListTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ListTablesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.SelectionTable tables = 1 [json_name = "tables"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_tables_size());
       i < n; i++) {
    const auto& repfield = this_._internal_tables().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // string next_cursor = 2 [json_name = "nextCursor"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_next_cursor().empty()) {
      const ::std::string& _s = this_._internal_next_cursor();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ListTablesResponse.next_cursor");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int32 total_count = 3 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 4 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ListTablesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ListTablesResponse::ByteSizeLong(const MessageLite& base) {
  const ListTablesResponse& this_ = static_cast<const ListTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ListTablesResponse::ByteSizeLong() const {
  const ListTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ListTablesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.SelectionTable tables = 1 [json_name = "tables"];
    {
      total_size += 1UL * this_._internal_tables_size();
      for (const auto& msg : this_._internal_tables()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string next_cursor = 2 [json_name = "nextCursor"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_next_cursor().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_next_cursor());
      }
    }
    // .seshat.Result status = 4 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_count = 3 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ListTablesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ListTablesResponse*>(&to_msg);
  auto& from = static_cast<const ListTablesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ListTablesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tables()->MergeFrom(
      from._internal_tables());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_next_cursor().empty()) {
        _this->_internal_set_next_cursor(from._internal_next_cursor());
      } else {
        if (_this->_impl_.next_cursor_.IsDefault()) {
          _this->_internal_set_next_cursor("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ListTablesResponse::CopyFrom(const ListTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ListTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ListTablesResponse::InternalSwap(ListTablesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tables_.InternalSwap(&other->_impl_.tables_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.next_cursor_, &other->_impl_.next_cursor_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.total_count_)
      + sizeof(ListTablesResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(ListTablesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata ListTablesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteTableRequest, _impl_._has_bits_);
};

DeleteTableRequest::DeleteTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.DeleteTableRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::DeleteTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

DeleteTableRequest::DeleteTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.DeleteTableRequest)
}
PROTOBUF_NDEBUG_INLINE DeleteTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void DeleteTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeleteTableRequest::~DeleteTableRequest() {
  // @@protoc_insertion_point(destructor:seshat.DeleteTableRequest)
  SharedDtor(*this);
}
inline void DeleteTableRequest::SharedDtor(MessageLite& self) {
  DeleteTableRequest& this_ = static_cast<DeleteTableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteTableRequest(arena);
}
constexpr auto DeleteTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(DeleteTableRequest),
                                            alignof(DeleteTableRequest));
}
constexpr auto DeleteTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteTableRequest>(), &DeleteTableRequest::ByteSizeLong,
              &DeleteTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteTableRequest, _impl_._cached_size_),
          false,
      },
      &DeleteTableRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteTableRequest_class_data_ =
        DeleteTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteTableRequest_class_data_.tc_table);
  return DeleteTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 42, 2>
DeleteTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DeleteTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::DeleteTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteTableRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(DeleteTableRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\10\0\0\0\0\0\0"
    "seshat.DeleteTableRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void DeleteTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.DeleteTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.table_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteTableRequest& this_ = static_cast<const DeleteTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.DeleteTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.DeleteTableRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.DeleteTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteTableRequest::ByteSizeLong(const MessageLite& base) {
  const DeleteTableRequest& this_ = static_cast<const DeleteTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteTableRequest::ByteSizeLong() const {
  const DeleteTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.DeleteTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string table_id = 1 [json_name = "tableId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteTableRequest*>(&to_msg);
  auto& from = static_cast<const DeleteTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.DeleteTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_table_id().empty()) {
      _this->_internal_set_table_id(from._internal_table_id());
    } else {
      if (_this->_impl_.table_id_.IsDefault()) {
        _this->_internal_set_table_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteTableRequest::CopyFrom(const DeleteTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.DeleteTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteTableRequest::InternalSwap(DeleteTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
}

::google::protobuf::Metadata DeleteTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DeleteTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<DeleteTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(DeleteTableResponse, _impl_._has_bits_);
};

void DeleteTableResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
DeleteTableResponse::DeleteTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.DeleteTableResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::DeleteTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeleteTableResponse::DeleteTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DeleteTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, DeleteTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DeleteTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.DeleteTableResponse)
}
PROTOBUF_NDEBUG_INLINE DeleteTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void DeleteTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
DeleteTableResponse::~DeleteTableResponse() {
  // @@protoc_insertion_point(destructor:seshat.DeleteTableResponse)
  SharedDtor(*this);
}
inline void DeleteTableResponse::SharedDtor(MessageLite& self) {
  DeleteTableResponse& this_ = static_cast<DeleteTableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL DeleteTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DeleteTableResponse(arena);
}
constexpr auto DeleteTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DeleteTableResponse),
                                            alignof(DeleteTableResponse));
}
constexpr auto DeleteTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DeleteTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DeleteTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<DeleteTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DeleteTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<DeleteTableResponse>(), &DeleteTableResponse::ByteSizeLong,
              &DeleteTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DeleteTableResponse, _impl_._cached_size_),
          false,
      },
      &DeleteTableResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DeleteTableResponse_class_data_ =
        DeleteTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DeleteTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DeleteTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DeleteTableResponse_class_data_.tc_table);
  return DeleteTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
DeleteTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeleteTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    DeleteTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::DeleteTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 1 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeleteTableResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Result status = 1 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(DeleteTableResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void DeleteTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.DeleteTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL DeleteTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const DeleteTableResponse& this_ = static_cast<const DeleteTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL DeleteTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const DeleteTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.DeleteTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 1 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.DeleteTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t DeleteTableResponse::ByteSizeLong(const MessageLite& base) {
  const DeleteTableResponse& this_ = static_cast<const DeleteTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t DeleteTableResponse::ByteSizeLong() const {
  const DeleteTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.DeleteTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .seshat.Result status = 1 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void DeleteTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<DeleteTableResponse*>(&to_msg);
  auto& from = static_cast<const DeleteTableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.DeleteTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteTableResponse::CopyFrom(const DeleteTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.DeleteTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void DeleteTableResponse::InternalSwap(DeleteTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata DeleteTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloneTableRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CloneTableRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_._has_bits_);
};

CloneTableRequest::CloneTableRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloneTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CloneTableRequest)
}
PROTOBUF_NDEBUG_INLINE CloneTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CloneTableRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_table_id_(arena, from.source_table_id_),
        new_name_(arena, from.new_name_) {}

CloneTableRequest::CloneTableRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CloneTableRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloneTableRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CloneTableRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.copy_items_ = from._impl_.copy_items_;

  // @@protoc_insertion_point(copy_constructor:seshat.CloneTableRequest)
}
PROTOBUF_NDEBUG_INLINE CloneTableRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        source_table_id_(arena),
        new_name_(arena) {}

inline void CloneTableRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.copy_items_ = {};
}
CloneTableRequest::~CloneTableRequest() {
  // @@protoc_insertion_point(destructor:seshat.CloneTableRequest)
  SharedDtor(*this);
}
inline void CloneTableRequest::SharedDtor(MessageLite& self) {
  CloneTableRequest& this_ = static_cast<CloneTableRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.source_table_id_.Destroy();
  this_._impl_.new_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CloneTableRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CloneTableRequest(arena);
}
constexpr auto CloneTableRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CloneTableRequest),
                                            alignof(CloneTableRequest));
}
constexpr auto CloneTableRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CloneTableRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CloneTableRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CloneTableRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CloneTableRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CloneTableRequest>(), &CloneTableRequest::ByteSizeLong,
              &CloneTableRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_._cached_size_),
          false,
      },
      &CloneTableRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CloneTableRequest_class_data_ =
        CloneTableRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CloneTableRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CloneTableRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CloneTableRequest_class_data_.tc_table);
  return CloneTableRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2>
CloneTableRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CloneTableRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CloneTableRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string source_table_id = 1 [json_name = "sourceTableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.source_table_id_)}},
    // string new_name = 2 [json_name = "newName"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.new_name_)}},
    // bool copy_items = 3 [json_name = "copyItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CloneTableRequest, _impl_.copy_items_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.copy_items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string source_table_id = 1 [json_name = "sourceTableId"];
    {PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.source_table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_name = 2 [json_name = "newName"];
    {PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.new_name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool copy_items = 3 [json_name = "copyItems"];
    {PROTOBUF_FIELD_OFFSET(CloneTableRequest, _impl_.copy_items_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\17\10\0\0\0\0\0"
    "seshat.CloneTableRequest"
    "source_table_id"
    "new_name"
  }},
};
PROTOBUF_NOINLINE void CloneTableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CloneTableRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.source_table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.new_name_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.copy_items_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CloneTableRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CloneTableRequest& this_ = static_cast<const CloneTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CloneTableRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CloneTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CloneTableRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string source_table_id = 1 [json_name = "sourceTableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_source_table_id().empty()) {
      const ::std::string& _s = this_._internal_source_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CloneTableRequest.source_table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string new_name = 2 [json_name = "newName"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_new_name().empty()) {
      const ::std::string& _s = this_._internal_new_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CloneTableRequest.new_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool copy_items = 3 [json_name = "copyItems"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_copy_items() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_copy_items(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CloneTableRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CloneTableRequest::ByteSizeLong(const MessageLite& base) {
  const CloneTableRequest& this_ = static_cast<const CloneTableRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CloneTableRequest::ByteSizeLong() const {
  const CloneTableRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CloneTableRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string source_table_id = 1 [json_name = "sourceTableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_source_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_table_id());
      }
    }
    // string new_name = 2 [json_name = "newName"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_new_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_new_name());
      }
    }
    // bool copy_items = 3 [json_name = "copyItems"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_copy_items() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CloneTableRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CloneTableRequest*>(&to_msg);
  auto& from = static_cast<const CloneTableRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CloneTableRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_source_table_id().empty()) {
        _this->_internal_set_source_table_id(from._internal_source_table_id());
      } else {
        if (_this->_impl_.source_table_id_.IsDefault()) {
          _this->_internal_set_source_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_new_name().empty()) {
        _this->_internal_set_new_name(from._internal_new_name());
      } else {
        if (_this->_impl_.new_name_.IsDefault()) {
          _this->_internal_set_new_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_copy_items() != 0) {
        _this->_impl_.copy_items_ = from._impl_.copy_items_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloneTableRequest::CopyFrom(const CloneTableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CloneTableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CloneTableRequest::InternalSwap(CloneTableRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_table_id_, &other->_impl_.source_table_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_name_, &other->_impl_.new_name_, arena);
  swap(_impl_.copy_items_, other->_impl_.copy_items_);
}

::google::protobuf::Metadata CloneTableRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CloneTableResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CloneTableResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_._has_bits_);
};

void CloneTableResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CloneTableResponse::CloneTableResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloneTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CloneTableResponse)
}
PROTOBUF_NDEBUG_INLINE CloneTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CloneTableResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CloneTableResponse::CloneTableResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CloneTableResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CloneTableResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CloneTableResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.cloned_table_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cloned_table_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.CloneTableResponse)
}
PROTOBUF_NDEBUG_INLINE CloneTableResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CloneTableResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, cloned_table_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, cloned_table_) +
               sizeof(Impl_::status_));
}
CloneTableResponse::~CloneTableResponse() {
  // @@protoc_insertion_point(destructor:seshat.CloneTableResponse)
  SharedDtor(*this);
}
inline void CloneTableResponse::SharedDtor(MessageLite& self) {
  CloneTableResponse& this_ = static_cast<CloneTableResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.cloned_table_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CloneTableResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CloneTableResponse(arena);
}
constexpr auto CloneTableResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CloneTableResponse),
                                            alignof(CloneTableResponse));
}
constexpr auto CloneTableResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CloneTableResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CloneTableResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CloneTableResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CloneTableResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CloneTableResponse>(), &CloneTableResponse::ByteSizeLong,
              &CloneTableResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_._cached_size_),
          false,
      },
      &CloneTableResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CloneTableResponse_class_data_ =
        CloneTableResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CloneTableResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CloneTableResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CloneTableResponse_class_data_.tc_table);
  return CloneTableResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CloneTableResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CloneTableResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CloneTableResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.status_)}},
    // .seshat.SelectionTable cloned_table = 1 [json_name = "clonedTable"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.cloned_table_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectionTable cloned_table = 1 [json_name = "clonedTable"];
    {PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.cloned_table_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CloneTableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CloneTableResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.cloned_table_ != nullptr);
      _impl_.cloned_table_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CloneTableResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CloneTableResponse& this_ = static_cast<const CloneTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CloneTableResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CloneTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CloneTableResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionTable cloned_table = 1 [json_name = "clonedTable"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.cloned_table_, this_._impl_.cloned_table_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CloneTableResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CloneTableResponse::ByteSizeLong(const MessageLite& base) {
  const CloneTableResponse& this_ = static_cast<const CloneTableResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CloneTableResponse::ByteSizeLong() const {
  const CloneTableResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CloneTableResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.SelectionTable cloned_table = 1 [json_name = "clonedTable"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cloned_table_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CloneTableResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CloneTableResponse*>(&to_msg);
  auto& from = static_cast<const CloneTableResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CloneTableResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.cloned_table_ != nullptr);
      if (_this->_impl_.cloned_table_ == nullptr) {
        _this->_impl_.cloned_table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cloned_table_);
      } else {
        _this->_impl_.cloned_table_->MergeFrom(*from._impl_.cloned_table_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CloneTableResponse::CopyFrom(const CloneTableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CloneTableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CloneTableResponse::InternalSwap(CloneTableResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.status_)
      + sizeof(CloneTableResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CloneTableResponse, _impl_.cloned_table_)>(
          reinterpret_cast<char*>(&_impl_.cloned_table_),
          reinterpret_cast<char*>(&other->_impl_.cloned_table_));
}

::google::protobuf::Metadata CloneTableResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProbabilitiesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetProbabilitiesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_._has_bits_);
};

GetProbabilitiesRequest::GetProbabilitiesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetProbabilitiesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetProbabilitiesRequest)
}
PROTOBUF_NDEBUG_INLINE GetProbabilitiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetProbabilitiesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

GetProbabilitiesRequest::GetProbabilitiesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetProbabilitiesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetProbabilitiesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProbabilitiesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetProbabilitiesRequest)
}
PROTOBUF_NDEBUG_INLINE GetProbabilitiesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void GetProbabilitiesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.context_ = {};
}
GetProbabilitiesRequest::~GetProbabilitiesRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetProbabilitiesRequest)
  SharedDtor(*this);
}
inline void GetProbabilitiesRequest::SharedDtor(MessageLite& self) {
  GetProbabilitiesRequest& this_ = static_cast<GetProbabilitiesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.context_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetProbabilitiesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetProbabilitiesRequest(arena);
}
constexpr auto GetProbabilitiesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetProbabilitiesRequest),
                                            alignof(GetProbabilitiesRequest));
}
constexpr auto GetProbabilitiesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetProbabilitiesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetProbabilitiesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetProbabilitiesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetProbabilitiesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetProbabilitiesRequest>(), &GetProbabilitiesRequest::ByteSizeLong,
              &GetProbabilitiesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_._cached_size_),
          false,
      },
      &GetProbabilitiesRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetProbabilitiesRequest_class_data_ =
        GetProbabilitiesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetProbabilitiesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetProbabilitiesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetProbabilitiesRequest_class_data_.tc_table);
  return GetProbabilitiesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 47, 2>
GetProbabilitiesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetProbabilitiesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetProbabilitiesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_.context_)}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_.table_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(GetProbabilitiesRequest, _impl_.context_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionContext>()},
  }},
  {{
    "\36\10\0\0\0\0\0\0"
    "seshat.GetProbabilitiesRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void GetProbabilitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetProbabilitiesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetProbabilitiesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetProbabilitiesRequest& this_ = static_cast<const GetProbabilitiesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetProbabilitiesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetProbabilitiesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetProbabilitiesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetProbabilitiesRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionContext context = 2 [json_name = "context"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetProbabilitiesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetProbabilitiesRequest::ByteSizeLong(const MessageLite& base) {
  const GetProbabilitiesRequest& this_ = static_cast<const GetProbabilitiesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetProbabilitiesRequest::ByteSizeLong() const {
  const GetProbabilitiesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetProbabilitiesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectionContext context = 2 [json_name = "context"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetProbabilitiesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProbabilitiesRequest*>(&to_msg);
  auto& from = static_cast<const GetProbabilitiesRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetProbabilitiesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProbabilitiesRequest::CopyFrom(const GetProbabilitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetProbabilitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProbabilitiesRequest::InternalSwap(GetProbabilitiesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  swap(_impl_.context_, other->_impl_.context_);
}

::google::protobuf::Metadata GetProbabilitiesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetProbabilitiesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetProbabilitiesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_._has_bits_);
};

void GetProbabilitiesResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetProbabilitiesResponse::GetProbabilitiesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetProbabilitiesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetProbabilitiesResponse)
}
PROTOBUF_NDEBUG_INLINE GetProbabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetProbabilitiesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        probabilities_{visibility, arena, from.probabilities_} {}

GetProbabilitiesResponse::GetProbabilitiesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetProbabilitiesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetProbabilitiesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetProbabilitiesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_weight_ = from._impl_.total_weight_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetProbabilitiesResponse)
}
PROTOBUF_NDEBUG_INLINE GetProbabilitiesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        probabilities_{visibility, arena} {}

inline void GetProbabilitiesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_weight_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_weight_));
}
GetProbabilitiesResponse::~GetProbabilitiesResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetProbabilitiesResponse)
  SharedDtor(*this);
}
inline void GetProbabilitiesResponse::SharedDtor(MessageLite& self) {
  GetProbabilitiesResponse& this_ = static_cast<GetProbabilitiesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetProbabilitiesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetProbabilitiesResponse(arena);
}
constexpr auto GetProbabilitiesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.probabilities_) +
          decltype(GetProbabilitiesResponse::_impl_.probabilities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetProbabilitiesResponse), alignof(GetProbabilitiesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetProbabilitiesResponse::PlacementNew_,
                                 sizeof(GetProbabilitiesResponse),
                                 alignof(GetProbabilitiesResponse));
  }
}
constexpr auto GetProbabilitiesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetProbabilitiesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetProbabilitiesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetProbabilitiesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetProbabilitiesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetProbabilitiesResponse>(), &GetProbabilitiesResponse::ByteSizeLong,
              &GetProbabilitiesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_._cached_size_),
          false,
      },
      &GetProbabilitiesResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetProbabilitiesResponse_class_data_ =
        GetProbabilitiesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetProbabilitiesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetProbabilitiesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetProbabilitiesResponse_class_data_.tc_table);
  return GetProbabilitiesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
GetProbabilitiesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetProbabilitiesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetProbabilitiesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.ItemProbability probabilities = 1 [json_name = "probabilities"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.probabilities_)}},
    // int32 total_weight = 2 [json_name = "totalWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetProbabilitiesResponse, _impl_.total_weight_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.total_weight_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.ItemProbability probabilities = 1 [json_name = "probabilities"];
    {PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.probabilities_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_weight = 2 [json_name = "totalWeight"];
    {PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.total_weight_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ItemProbability>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetProbabilitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetProbabilitiesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.probabilities_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.total_weight_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetProbabilitiesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetProbabilitiesResponse& this_ = static_cast<const GetProbabilitiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetProbabilitiesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetProbabilitiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetProbabilitiesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.ItemProbability probabilities = 1 [json_name = "probabilities"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_probabilities_size());
       i < n; i++) {
    const auto& repfield = this_._internal_probabilities().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_weight = 2 [json_name = "totalWeight"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_weight(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetProbabilitiesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetProbabilitiesResponse::ByteSizeLong(const MessageLite& base) {
  const GetProbabilitiesResponse& this_ = static_cast<const GetProbabilitiesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetProbabilitiesResponse::ByteSizeLong() const {
  const GetProbabilitiesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetProbabilitiesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ItemProbability probabilities = 1 [json_name = "probabilities"];
    {
      total_size += 1UL * this_._internal_probabilities_size();
      for (const auto& msg : this_._internal_probabilities()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_weight = 2 [json_name = "totalWeight"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetProbabilitiesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetProbabilitiesResponse*>(&to_msg);
  auto& from = static_cast<const GetProbabilitiesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetProbabilitiesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_probabilities()->MergeFrom(
      from._internal_probabilities());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_weight() != 0) {
        _this->_impl_.total_weight_ = from._impl_.total_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetProbabilitiesResponse::CopyFrom(const GetProbabilitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetProbabilitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetProbabilitiesResponse::InternalSwap(GetProbabilitiesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.probabilities_.InternalSwap(&other->_impl_.probabilities_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.total_weight_)
      + sizeof(GetProbabilitiesResponse::_impl_.total_weight_)
      - PROTOBUF_FIELD_OFFSET(GetProbabilitiesResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata GetProbabilitiesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemProbability::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ItemProbability>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_._has_bits_);
};

ItemProbability::ItemProbability(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemProbability_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ItemProbability)
}
PROTOBUF_NDEBUG_INLINE ItemProbability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ItemProbability& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ItemProbability::ItemProbability(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ItemProbability& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemProbability_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ItemProbability* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, probability_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, probability_),
           offsetof(Impl_, effective_weight_) -
               offsetof(Impl_, probability_) +
               sizeof(Impl_::effective_weight_));

  // @@protoc_insertion_point(copy_constructor:seshat.ItemProbability)
}
PROTOBUF_NDEBUG_INLINE ItemProbability::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ItemProbability::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_),
           0,
           offsetof(Impl_, effective_weight_) -
               offsetof(Impl_, item_) +
               sizeof(Impl_::effective_weight_));
}
ItemProbability::~ItemProbability() {
  // @@protoc_insertion_point(destructor:seshat.ItemProbability)
  SharedDtor(*this);
}
inline void ItemProbability::SharedDtor(MessageLite& self) {
  ItemProbability& this_ = static_cast<ItemProbability&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.item_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ItemProbability::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemProbability(arena);
}
constexpr auto ItemProbability::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ItemProbability),
                                            alignof(ItemProbability));
}
constexpr auto ItemProbability::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemProbability_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemProbability::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemProbability>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemProbability::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ItemProbability>(), &ItemProbability::ByteSizeLong,
              &ItemProbability::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_._cached_size_),
          false,
      },
      &ItemProbability::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemProbability_class_data_ =
        ItemProbability::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemProbability::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemProbability_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemProbability_class_data_.tc_table);
  return ItemProbability_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2>
ItemProbability::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ItemProbability_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ItemProbability>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 effective_weight = 4 [json_name = "effectiveWeight"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemProbability, _impl_.effective_weight_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.effective_weight_)}},
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.item_)}},
    // float probability = 2 [json_name = "probability"];
    {::_pbi::TcParser::FastF32S1,
     {21, 1, 0, PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.probability_)}},
    // float percentage = 3 [json_name = "percentage"];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.percentage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    {PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float probability = 2 [json_name = "probability"];
    {PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.probability_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float percentage = 3 [json_name = "percentage"];
    {PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.percentage_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // int32 effective_weight = 4 [json_name = "effectiveWeight"];
    {PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.effective_weight_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ItemProbability::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ItemProbability)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.item_ != nullptr);
    _impl_.item_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.probability_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.effective_weight_) -
        reinterpret_cast<char*>(&_impl_.probability_)) + sizeof(_impl_.effective_weight_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ItemProbability::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ItemProbability& this_ = static_cast<const ItemProbability&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ItemProbability::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ItemProbability& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ItemProbability)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem item = 1 [json_name = "item"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.item_, this_._impl_.item_->GetCachedSize(), target,
        stream);
  }

  // float probability = 2 [json_name = "probability"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_probability()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          2, this_._internal_probability(), target);
    }
  }

  // float percentage = 3 [json_name = "percentage"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_percentage(), target);
    }
  }

  // int32 effective_weight = 4 [json_name = "effectiveWeight"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_effective_weight() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_effective_weight(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ItemProbability)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ItemProbability::ByteSizeLong(const MessageLite& base) {
  const ItemProbability& this_ = static_cast<const ItemProbability&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ItemProbability::ByteSizeLong() const {
  const ItemProbability& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ItemProbability)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_);
    }
    // float probability = 2 [json_name = "probability"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_probability()) != 0) {
        total_size += 5;
      }
    }
    // float percentage = 3 [json_name = "percentage"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_percentage()) != 0) {
        total_size += 5;
      }
    }
    // int32 effective_weight = 4 [json_name = "effectiveWeight"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_effective_weight() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_effective_weight());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ItemProbability::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemProbability*>(&to_msg);
  auto& from = static_cast<const ItemProbability&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ItemProbability)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.item_ != nullptr);
      if (_this->_impl_.item_ == nullptr) {
        _this->_impl_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_);
      } else {
        _this->_impl_.item_->MergeFrom(*from._impl_.item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_probability()) != 0) {
        _this->_impl_.probability_ = from._impl_.probability_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_percentage()) != 0) {
        _this->_impl_.percentage_ = from._impl_.percentage_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_effective_weight() != 0) {
        _this->_impl_.effective_weight_ = from._impl_.effective_weight_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemProbability::CopyFrom(const ItemProbability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ItemProbability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ItemProbability::InternalSwap(ItemProbability* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.effective_weight_)
      + sizeof(ItemProbability::_impl_.effective_weight_)
      - PROTOBUF_FIELD_OFFSET(ItemProbability, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::google::protobuf::Metadata ItemProbability::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestDistributionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestDistributionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_._has_bits_);
};

TestDistributionRequest::TestDistributionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestDistributionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.TestDistributionRequest)
}
PROTOBUF_NDEBUG_INLINE TestDistributionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::TestDistributionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_id_(arena, from.table_id_) {}

TestDistributionRequest::TestDistributionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestDistributionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestDistributionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestDistributionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.context_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_)
                : nullptr;
  _impl_.sample_size_ = from._impl_.sample_size_;

  // @@protoc_insertion_point(copy_constructor:seshat.TestDistributionRequest)
}
PROTOBUF_NDEBUG_INLINE TestDistributionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        table_id_(arena) {}

inline void TestDistributionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, context_),
           0,
           offsetof(Impl_, sample_size_) -
               offsetof(Impl_, context_) +
               sizeof(Impl_::sample_size_));
}
TestDistributionRequest::~TestDistributionRequest() {
  // @@protoc_insertion_point(destructor:seshat.TestDistributionRequest)
  SharedDtor(*this);
}
inline void TestDistributionRequest::SharedDtor(MessageLite& self) {
  TestDistributionRequest& this_ = static_cast<TestDistributionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.table_id_.Destroy();
  delete this_._impl_.context_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestDistributionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestDistributionRequest(arena);
}
constexpr auto TestDistributionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(TestDistributionRequest),
                                            alignof(TestDistributionRequest));
}
constexpr auto TestDistributionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestDistributionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestDistributionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestDistributionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestDistributionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestDistributionRequest>(), &TestDistributionRequest::ByteSizeLong,
              &TestDistributionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_._cached_size_),
          false,
      },
      &TestDistributionRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestDistributionRequest_class_data_ =
        TestDistributionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestDistributionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestDistributionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestDistributionRequest_class_data_.tc_table);
  return TestDistributionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 47, 2>
TestDistributionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TestDistributionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::TestDistributionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string table_id = 1 [json_name = "tableId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.table_id_)}},
    // int32 sample_size = 2 [json_name = "sampleSize"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDistributionRequest, _impl_.sample_size_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.sample_size_)}},
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.context_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string table_id = 1 [json_name = "tableId"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.table_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 sample_size = 2 [json_name = "sampleSize"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.sample_size_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.context_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionContext>()},
  }},
  {{
    "\36\10\0\0\0\0\0\0"
    "seshat.TestDistributionRequest"
    "table_id"
  }},
};
PROTOBUF_NOINLINE void TestDistributionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.TestDistributionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.table_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.context_ != nullptr);
      _impl_.context_->Clear();
    }
  }
  _impl_.sample_size_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestDistributionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestDistributionRequest& this_ = static_cast<const TestDistributionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestDistributionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestDistributionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.TestDistributionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string table_id = 1 [json_name = "tableId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_table_id().empty()) {
      const ::std::string& _s = this_._internal_table_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.TestDistributionRequest.table_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 sample_size = 2 [json_name = "sampleSize"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_sample_size() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_sample_size(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionContext context = 3 [json_name = "context"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.context_, this_._impl_.context_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.TestDistributionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestDistributionRequest::ByteSizeLong(const MessageLite& base) {
  const TestDistributionRequest& this_ = static_cast<const TestDistributionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestDistributionRequest::ByteSizeLong() const {
  const TestDistributionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.TestDistributionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string table_id = 1 [json_name = "tableId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_table_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_table_id());
      }
    }
    // .seshat.SelectionContext context = 3 [json_name = "context"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.context_);
    }
    // int32 sample_size = 2 [json_name = "sampleSize"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_sample_size() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_sample_size());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestDistributionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestDistributionRequest*>(&to_msg);
  auto& from = static_cast<const TestDistributionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.TestDistributionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_table_id().empty()) {
        _this->_internal_set_table_id(from._internal_table_id());
      } else {
        if (_this->_impl_.table_id_.IsDefault()) {
          _this->_internal_set_table_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.context_ != nullptr);
      if (_this->_impl_.context_ == nullptr) {
        _this->_impl_.context_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.context_);
      } else {
        _this->_impl_.context_->MergeFrom(*from._impl_.context_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_sample_size() != 0) {
        _this->_impl_.sample_size_ = from._impl_.sample_size_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDistributionRequest::CopyFrom(const TestDistributionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.TestDistributionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestDistributionRequest::InternalSwap(TestDistributionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.table_id_, &other->_impl_.table_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.sample_size_)
      + sizeof(TestDistributionRequest::_impl_.sample_size_)
      - PROTOBUF_FIELD_OFFSET(TestDistributionRequest, _impl_.context_)>(
          reinterpret_cast<char*>(&_impl_.context_),
          reinterpret_cast<char*>(&other->_impl_.context_));
}

::google::protobuf::Metadata TestDistributionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TestDistributionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TestDistributionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_._has_bits_);
};

void TestDistributionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TestDistributionResponse::TestDistributionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestDistributionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.TestDistributionResponse)
}
PROTOBUF_NDEBUG_INLINE TestDistributionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::TestDistributionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        distributions_{visibility, arena, from.distributions_} {}

TestDistributionResponse::TestDistributionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TestDistributionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TestDistributionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TestDistributionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_selections_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_selections_),
           offsetof(Impl_, is_fair_) -
               offsetof(Impl_, total_selections_) +
               sizeof(Impl_::is_fair_));

  // @@protoc_insertion_point(copy_constructor:seshat.TestDistributionResponse)
}
PROTOBUF_NDEBUG_INLINE TestDistributionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        distributions_{visibility, arena} {}

inline void TestDistributionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, is_fair_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::is_fair_));
}
TestDistributionResponse::~TestDistributionResponse() {
  // @@protoc_insertion_point(destructor:seshat.TestDistributionResponse)
  SharedDtor(*this);
}
inline void TestDistributionResponse::SharedDtor(MessageLite& self) {
  TestDistributionResponse& this_ = static_cast<TestDistributionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TestDistributionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TestDistributionResponse(arena);
}
constexpr auto TestDistributionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.distributions_) +
          decltype(TestDistributionResponse::_impl_.distributions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(TestDistributionResponse), alignof(TestDistributionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&TestDistributionResponse::PlacementNew_,
                                 sizeof(TestDistributionResponse),
                                 alignof(TestDistributionResponse));
  }
}
constexpr auto TestDistributionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TestDistributionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TestDistributionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TestDistributionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TestDistributionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TestDistributionResponse>(), &TestDistributionResponse::ByteSizeLong,
              &TestDistributionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_._cached_size_),
          false,
      },
      &TestDistributionResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TestDistributionResponse_class_data_ =
        TestDistributionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TestDistributionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TestDistributionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TestDistributionResponse_class_data_.tc_table);
  return TestDistributionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 2, 0, 2>
TestDistributionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TestDistributionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::TestDistributionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.ItemDistribution distributions = 1 [json_name = "distributions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.distributions_)}},
    // int32 total_selections = 2 [json_name = "totalSelections"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TestDistributionResponse, _impl_.total_selections_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.total_selections_)}},
    // float chi_squared = 3 [json_name = "chiSquared"];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.chi_squared_)}},
    // bool is_fair = 4 [json_name = "isFair"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TestDistributionResponse, _impl_.is_fair_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.is_fair_)}},
    // .seshat.Result status = 5 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 1, PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.ItemDistribution distributions = 1 [json_name = "distributions"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.distributions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_selections = 2 [json_name = "totalSelections"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.total_selections_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float chi_squared = 3 [json_name = "chiSquared"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.chi_squared_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // bool is_fair = 4 [json_name = "isFair"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.is_fair_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .seshat.Result status = 5 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ItemDistribution>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TestDistributionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.TestDistributionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.distributions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.total_selections_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.is_fair_) -
        reinterpret_cast<char*>(&_impl_.total_selections_)) + sizeof(_impl_.is_fair_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TestDistributionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TestDistributionResponse& this_ = static_cast<const TestDistributionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TestDistributionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TestDistributionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.TestDistributionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.ItemDistribution distributions = 1 [json_name = "distributions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_distributions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_distributions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_selections = 2 [json_name = "totalSelections"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_selections() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_selections(), target);
    }
  }

  // float chi_squared = 3 [json_name = "chiSquared"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_chi_squared()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_chi_squared(), target);
    }
  }

  // bool is_fair = 4 [json_name = "isFair"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_is_fair() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_is_fair(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 5 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        5, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.TestDistributionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TestDistributionResponse::ByteSizeLong(const MessageLite& base) {
  const TestDistributionResponse& this_ = static_cast<const TestDistributionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TestDistributionResponse::ByteSizeLong() const {
  const TestDistributionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.TestDistributionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ItemDistribution distributions = 1 [json_name = "distributions"];
    {
      total_size += 1UL * this_._internal_distributions_size();
      for (const auto& msg : this_._internal_distributions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .seshat.Result status = 5 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_selections = 2 [json_name = "totalSelections"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_selections() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_selections());
      }
    }
    // float chi_squared = 3 [json_name = "chiSquared"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_chi_squared()) != 0) {
        total_size += 5;
      }
    }
    // bool is_fair = 4 [json_name = "isFair"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_is_fair() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TestDistributionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TestDistributionResponse*>(&to_msg);
  auto& from = static_cast<const TestDistributionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.TestDistributionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_distributions()->MergeFrom(
      from._internal_distributions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_selections() != 0) {
        _this->_impl_.total_selections_ = from._impl_.total_selections_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_chi_squared()) != 0) {
        _this->_impl_.chi_squared_ = from._impl_.chi_squared_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_is_fair() != 0) {
        _this->_impl_.is_fair_ = from._impl_.is_fair_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TestDistributionResponse::CopyFrom(const TestDistributionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.TestDistributionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TestDistributionResponse::InternalSwap(TestDistributionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.distributions_.InternalSwap(&other->_impl_.distributions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.is_fair_)
      + sizeof(TestDistributionResponse::_impl_.is_fair_)
      - PROTOBUF_FIELD_OFFSET(TestDistributionResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata TestDistributionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ItemDistribution::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ItemDistribution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_._has_bits_);
};

ItemDistribution::ItemDistribution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemDistribution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ItemDistribution)
}
PROTOBUF_NDEBUG_INLINE ItemDistribution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ItemDistribution& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ItemDistribution::ItemDistribution(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ItemDistribution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ItemDistribution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ItemDistribution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.item_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, selected_count_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, selected_count_),
           offsetof(Impl_, deviation_) -
               offsetof(Impl_, selected_count_) +
               sizeof(Impl_::deviation_));

  // @@protoc_insertion_point(copy_constructor:seshat.ItemDistribution)
}
PROTOBUF_NDEBUG_INLINE ItemDistribution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ItemDistribution::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, item_),
           0,
           offsetof(Impl_, deviation_) -
               offsetof(Impl_, item_) +
               sizeof(Impl_::deviation_));
}
ItemDistribution::~ItemDistribution() {
  // @@protoc_insertion_point(destructor:seshat.ItemDistribution)
  SharedDtor(*this);
}
inline void ItemDistribution::SharedDtor(MessageLite& self) {
  ItemDistribution& this_ = static_cast<ItemDistribution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.item_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ItemDistribution::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ItemDistribution(arena);
}
constexpr auto ItemDistribution::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ItemDistribution),
                                            alignof(ItemDistribution));
}
constexpr auto ItemDistribution::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ItemDistribution_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ItemDistribution::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ItemDistribution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ItemDistribution::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ItemDistribution>(), &ItemDistribution::ByteSizeLong,
              &ItemDistribution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_._cached_size_),
          false,
      },
      &ItemDistribution::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ItemDistribution_class_data_ =
        ItemDistribution::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ItemDistribution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ItemDistribution_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ItemDistribution_class_data_.tc_table);
  return ItemDistribution_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2>
ItemDistribution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ItemDistribution_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ItemDistribution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.item_)}},
    // int32 selected_count = 2 [json_name = "selectedCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ItemDistribution, _impl_.selected_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.selected_count_)}},
    // float expected_count = 3 [json_name = "expectedCount"];
    {::_pbi::TcParser::FastF32S1,
     {29, 2, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.expected_count_)}},
    // float actual_percentage = 4 [json_name = "actualPercentage"];
    {::_pbi::TcParser::FastF32S1,
     {37, 3, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.actual_percentage_)}},
    // float expected_percentage = 5 [json_name = "expectedPercentage"];
    {::_pbi::TcParser::FastF32S1,
     {45, 4, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.expected_percentage_)}},
    // float deviation = 6 [json_name = "deviation"];
    {::_pbi::TcParser::FastF32S1,
     {53, 5, 0, PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.deviation_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.item_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 selected_count = 2 [json_name = "selectedCount"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.selected_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // float expected_count = 3 [json_name = "expectedCount"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.expected_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float actual_percentage = 4 [json_name = "actualPercentage"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.actual_percentage_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float expected_percentage = 5 [json_name = "expectedPercentage"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.expected_percentage_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float deviation = 6 [json_name = "deviation"];
    {PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.deviation_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectableItem>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ItemDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ItemDistribution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.item_ != nullptr);
    _impl_.item_->Clear();
  }
  if ((cached_has_bits & 0x0000003eu) != 0) {
    ::memset(&_impl_.selected_count_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.deviation_) -
        reinterpret_cast<char*>(&_impl_.selected_count_)) + sizeof(_impl_.deviation_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ItemDistribution::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ItemDistribution& this_ = static_cast<const ItemDistribution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ItemDistribution::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ItemDistribution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ItemDistribution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectableItem item = 1 [json_name = "item"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.item_, this_._impl_.item_->GetCachedSize(), target,
        stream);
  }

  // int32 selected_count = 2 [json_name = "selectedCount"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (this_._internal_selected_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_selected_count(), target);
    }
  }

  // float expected_count = 3 [json_name = "expectedCount"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_expected_count()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          3, this_._internal_expected_count(), target);
    }
  }

  // float actual_percentage = 4 [json_name = "actualPercentage"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_actual_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          4, this_._internal_actual_percentage(), target);
    }
  }

  // float expected_percentage = 5 [json_name = "expectedPercentage"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_expected_percentage()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          5, this_._internal_expected_percentage(), target);
    }
  }

  // float deviation = 6 [json_name = "deviation"];
  if ((cached_has_bits & 0x00000020u) != 0) {
    if (::absl::bit_cast<::uint32_t>(this_._internal_deviation()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteFloatToArray(
          6, this_._internal_deviation(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ItemDistribution)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ItemDistribution::ByteSizeLong(const MessageLite& base) {
  const ItemDistribution& this_ = static_cast<const ItemDistribution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ItemDistribution::ByteSizeLong() const {
  const ItemDistribution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ItemDistribution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    // .seshat.SelectableItem item = 1 [json_name = "item"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.item_);
    }
    // int32 selected_count = 2 [json_name = "selectedCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_selected_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_selected_count());
      }
    }
    // float expected_count = 3 [json_name = "expectedCount"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_expected_count()) != 0) {
        total_size += 5;
      }
    }
    // float actual_percentage = 4 [json_name = "actualPercentage"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_actual_percentage()) != 0) {
        total_size += 5;
      }
    }
    // float expected_percentage = 5 [json_name = "expectedPercentage"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_expected_percentage()) != 0) {
        total_size += 5;
      }
    }
    // float deviation = 6 [json_name = "deviation"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(this_._internal_deviation()) != 0) {
        total_size += 5;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ItemDistribution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ItemDistribution*>(&to_msg);
  auto& from = static_cast<const ItemDistribution&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ItemDistribution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.item_ != nullptr);
      if (_this->_impl_.item_ == nullptr) {
        _this->_impl_.item_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.item_);
      } else {
        _this->_impl_.item_->MergeFrom(*from._impl_.item_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_selected_count() != 0) {
        _this->_impl_.selected_count_ = from._impl_.selected_count_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_expected_count()) != 0) {
        _this->_impl_.expected_count_ = from._impl_.expected_count_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_actual_percentage()) != 0) {
        _this->_impl_.actual_percentage_ = from._impl_.actual_percentage_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_expected_percentage()) != 0) {
        _this->_impl_.expected_percentage_ = from._impl_.expected_percentage_;
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (::absl::bit_cast<::uint32_t>(from._internal_deviation()) != 0) {
        _this->_impl_.deviation_ = from._impl_.deviation_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ItemDistribution::CopyFrom(const ItemDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ItemDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ItemDistribution::InternalSwap(ItemDistribution* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.deviation_)
      + sizeof(ItemDistribution::_impl_.deviation_)
      - PROTOBUF_FIELD_OFFSET(ItemDistribution, _impl_.item_)>(
          reinterpret_cast<char*>(&_impl_.item_),
          reinterpret_cast<char*>(&other->_impl_.item_));
}

::google::protobuf::Metadata ItemDistribution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MergeTablesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MergeTablesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_._has_bits_);
};

MergeTablesRequest::MergeTablesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MergeTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.MergeTablesRequest)
}
PROTOBUF_NDEBUG_INLINE MergeTablesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::MergeTablesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        source_table_ids_{visibility, arena, from.source_table_ids_},
        target_table_name_(arena, from.target_table_name_) {}

MergeTablesRequest::MergeTablesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MergeTablesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MergeTablesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MergeTablesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.strategy_ = from._impl_.strategy_;

  // @@protoc_insertion_point(copy_constructor:seshat.MergeTablesRequest)
}
PROTOBUF_NDEBUG_INLINE MergeTablesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        source_table_ids_{visibility, arena},
        target_table_name_(arena) {}

inline void MergeTablesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.strategy_ = {};
}
MergeTablesRequest::~MergeTablesRequest() {
  // @@protoc_insertion_point(destructor:seshat.MergeTablesRequest)
  SharedDtor(*this);
}
inline void MergeTablesRequest::SharedDtor(MessageLite& self) {
  MergeTablesRequest& this_ = static_cast<MergeTablesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_table_name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MergeTablesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MergeTablesRequest(arena);
}
constexpr auto MergeTablesRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.source_table_ids_) +
          decltype(MergeTablesRequest::_impl_.source_table_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MergeTablesRequest), alignof(MergeTablesRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MergeTablesRequest::PlacementNew_,
                                 sizeof(MergeTablesRequest),
                                 alignof(MergeTablesRequest));
  }
}
constexpr auto MergeTablesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MergeTablesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MergeTablesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MergeTablesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MergeTablesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MergeTablesRequest>(), &MergeTablesRequest::ByteSizeLong,
              &MergeTablesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_._cached_size_),
          false,
      },
      &MergeTablesRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MergeTablesRequest_class_data_ =
        MergeTablesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MergeTablesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MergeTablesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MergeTablesRequest_class_data_.tc_table);
  return MergeTablesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 67, 2>
MergeTablesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    MergeTablesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::MergeTablesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string source_table_ids = 1 [json_name = "sourceTableIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.source_table_ids_)}},
    // string target_table_name = 2 [json_name = "targetTableName"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.target_table_name_)}},
    // .seshat.MergeStrategy strategy = 3 [json_name = "strategy"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MergeTablesRequest, _impl_.strategy_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.strategy_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string source_table_ids = 1 [json_name = "sourceTableIds"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.source_table_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string target_table_name = 2 [json_name = "targetTableName"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.target_table_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.MergeStrategy strategy = 3 [json_name = "strategy"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesRequest, _impl_.strategy_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\31\20\21\0\0\0\0\0"
    "seshat.MergeTablesRequest"
    "source_table_ids"
    "target_table_name"
  }},
};
PROTOBUF_NOINLINE void MergeTablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.MergeTablesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.source_table_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.target_table_name_.ClearNonDefaultToEmpty();
  }
  _impl_.strategy_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MergeTablesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MergeTablesRequest& this_ = static_cast<const MergeTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MergeTablesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MergeTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.MergeTablesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string source_table_ids = 1 [json_name = "sourceTableIds"];
  for (int i = 0, n = this_._internal_source_table_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_source_table_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.MergeTablesRequest.source_table_ids");
    target = stream->WriteString(1, s, target);
  }

  // string target_table_name = 2 [json_name = "targetTableName"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_target_table_name().empty()) {
      const ::std::string& _s = this_._internal_target_table_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.MergeTablesRequest.target_table_name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .seshat.MergeStrategy strategy = 3 [json_name = "strategy"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_strategy() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_strategy(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.MergeTablesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MergeTablesRequest::ByteSizeLong(const MessageLite& base) {
  const MergeTablesRequest& this_ = static_cast<const MergeTablesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MergeTablesRequest::ByteSizeLong() const {
  const MergeTablesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.MergeTablesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string source_table_ids = 1 [json_name = "sourceTableIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_source_table_ids().size());
      for (int i = 0, n = this_._internal_source_table_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_source_table_ids().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string target_table_name = 2 [json_name = "targetTableName"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_target_table_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target_table_name());
      }
    }
    // .seshat.MergeStrategy strategy = 3 [json_name = "strategy"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_strategy() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_strategy());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MergeTablesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MergeTablesRequest*>(&to_msg);
  auto& from = static_cast<const MergeTablesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.MergeTablesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_source_table_ids()->MergeFrom(from._internal_source_table_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_target_table_name().empty()) {
        _this->_internal_set_target_table_name(from._internal_target_table_name());
      } else {
        if (_this->_impl_.target_table_name_.IsDefault()) {
          _this->_internal_set_target_table_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_strategy() != 0) {
        _this->_impl_.strategy_ = from._impl_.strategy_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MergeTablesRequest::CopyFrom(const MergeTablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.MergeTablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MergeTablesRequest::InternalSwap(MergeTablesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.source_table_ids_.InternalSwap(&other->_impl_.source_table_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_table_name_, &other->_impl_.target_table_name_, arena);
  swap(_impl_.strategy_, other->_impl_.strategy_);
}

::google::protobuf::Metadata MergeTablesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MergeTablesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<MergeTablesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_._has_bits_);
};

void MergeTablesResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
MergeTablesResponse::MergeTablesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MergeTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.MergeTablesResponse)
}
PROTOBUF_NDEBUG_INLINE MergeTablesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::MergeTablesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MergeTablesResponse::MergeTablesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const MergeTablesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, MergeTablesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MergeTablesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.merged_table_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.merged_table_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_items_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_items_),
           offsetof(Impl_, duplicate_items_merged_) -
               offsetof(Impl_, total_items_) +
               sizeof(Impl_::duplicate_items_merged_));

  // @@protoc_insertion_point(copy_constructor:seshat.MergeTablesResponse)
}
PROTOBUF_NDEBUG_INLINE MergeTablesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void MergeTablesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, merged_table_),
           0,
           offsetof(Impl_, duplicate_items_merged_) -
               offsetof(Impl_, merged_table_) +
               sizeof(Impl_::duplicate_items_merged_));
}
MergeTablesResponse::~MergeTablesResponse() {
  // @@protoc_insertion_point(destructor:seshat.MergeTablesResponse)
  SharedDtor(*this);
}
inline void MergeTablesResponse::SharedDtor(MessageLite& self) {
  MergeTablesResponse& this_ = static_cast<MergeTablesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.merged_table_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL MergeTablesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) MergeTablesResponse(arena);
}
constexpr auto MergeTablesResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MergeTablesResponse),
                                            alignof(MergeTablesResponse));
}
constexpr auto MergeTablesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_MergeTablesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &MergeTablesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<MergeTablesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &MergeTablesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<MergeTablesResponse>(), &MergeTablesResponse::ByteSizeLong,
              &MergeTablesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_._cached_size_),
          false,
      },
      &MergeTablesResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fselectables_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull MergeTablesResponse_class_data_ =
        MergeTablesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
MergeTablesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&MergeTablesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(MergeTablesResponse_class_data_.tc_table);
  return MergeTablesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2>
MergeTablesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    MergeTablesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::MergeTablesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 4 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 1, PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.status_)}},
    // .seshat.SelectionTable merged_table = 1 [json_name = "mergedTable"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.merged_table_)}},
    // int32 total_items = 2 [json_name = "totalItems"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MergeTablesResponse, _impl_.total_items_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.total_items_)}},
    // int32 duplicate_items_merged = 3 [json_name = "duplicateItemsMerged"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MergeTablesResponse, _impl_.duplicate_items_merged_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.duplicate_items_merged_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.SelectionTable merged_table = 1 [json_name = "mergedTable"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.merged_table_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_items = 2 [json_name = "totalItems"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.total_items_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 duplicate_items_merged = 3 [json_name = "duplicateItemsMerged"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.duplicate_items_merged_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::SelectionTable>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void MergeTablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.MergeTablesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.merged_table_ != nullptr);
      _impl_.merged_table_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  if ((cached_has_bits & 0x0000000cu) != 0) {
    ::memset(&_impl_.total_items_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.duplicate_items_merged_) -
        reinterpret_cast<char*>(&_impl_.total_items_)) + sizeof(_impl_.duplicate_items_merged_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL MergeTablesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const MergeTablesResponse& this_ = static_cast<const MergeTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL MergeTablesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const MergeTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.MergeTablesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.SelectionTable merged_table = 1 [json_name = "mergedTable"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.merged_table_, this_._impl_.merged_table_->GetCachedSize(), target,
        stream);
  }

  // int32 total_items = 2 [json_name = "totalItems"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_total_items() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_items(), target);
    }
  }

  // int32 duplicate_items_merged = 3 [json_name = "duplicateItemsMerged"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    if (this_._internal_duplicate_items_merged() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_duplicate_items_merged(), target);
    }
  }

  // .seshat.Result status = 4 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.MergeTablesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t MergeTablesResponse::ByteSizeLong(const MessageLite& base) {
  const MergeTablesResponse& this_ = static_cast<const MergeTablesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t MergeTablesResponse::ByteSizeLong() const {
  const MergeTablesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.MergeTablesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // .seshat.SelectionTable merged_table = 1 [json_name = "mergedTable"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.merged_table_);
    }
    // .seshat.Result status = 4 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_items = 2 [json_name = "totalItems"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_total_items() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_items());
      }
    }
    // int32 duplicate_items_merged = 3 [json_name = "duplicateItemsMerged"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_duplicate_items_merged() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_duplicate_items_merged());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void MergeTablesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MergeTablesResponse*>(&to_msg);
  auto& from = static_cast<const MergeTablesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.MergeTablesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.merged_table_ != nullptr);
      if (_this->_impl_.merged_table_ == nullptr) {
        _this->_impl_.merged_table_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.merged_table_);
      } else {
        _this->_impl_.merged_table_->MergeFrom(*from._impl_.merged_table_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_total_items() != 0) {
        _this->_impl_.total_items_ = from._impl_.total_items_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_duplicate_items_merged() != 0) {
        _this->_impl_.duplicate_items_merged_ = from._impl_.duplicate_items_merged_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MergeTablesResponse::CopyFrom(const MergeTablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.MergeTablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MergeTablesResponse::InternalSwap(MergeTablesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.duplicate_items_merged_)
      + sizeof(MergeTablesResponse::_impl_.duplicate_items_merged_)
      - PROTOBUF_FIELD_OFFSET(MergeTablesResponse, _impl_.merged_table_)>(
          reinterpret_cast<char*>(&_impl_.merged_table_),
          reinterpret_cast<char*>(&other->_impl_.merged_table_));
}

::google::protobuf::Metadata MergeTablesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_seshat_2fselectables_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
