// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/events.proto
// Protobuf C++ Version: 6.31.1

#ifndef seshat_2fevents_2eproto_2epb_2eh
#define seshat_2fevents_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/unknown_field_set.h"
#include "seshat/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_seshat_2fevents_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_seshat_2fevents_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_seshat_2fevents_2eproto;
}  // extern "C"
namespace seshat {
class ClearEventHistoryRequest;
struct ClearEventHistoryRequestDefaultTypeInternal;
extern ClearEventHistoryRequestDefaultTypeInternal _ClearEventHistoryRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClearEventHistoryRequest_class_data_;
class ClearEventHistoryResponse;
struct ClearEventHistoryResponseDefaultTypeInternal;
extern ClearEventHistoryResponseDefaultTypeInternal _ClearEventHistoryResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ClearEventHistoryResponse_class_data_;
class EventHistoryRequest;
struct EventHistoryRequestDefaultTypeInternal;
extern EventHistoryRequestDefaultTypeInternal _EventHistoryRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EventHistoryRequest_class_data_;
class EventHistoryResponse;
struct EventHistoryResponseDefaultTypeInternal;
extern EventHistoryResponseDefaultTypeInternal _EventHistoryResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EventHistoryResponse_class_data_;
class GameEvent;
struct GameEventDefaultTypeInternal;
extern GameEventDefaultTypeInternal _GameEvent_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GameEvent_class_data_;
class GameEvent_DataEntry_DoNotUse;
struct GameEvent_DataEntry_DoNotUseDefaultTypeInternal;
extern GameEvent_DataEntry_DoNotUseDefaultTypeInternal _GameEvent_DataEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GameEvent_DataEntry_DoNotUse_class_data_;
class GetSubscriptionsRequest;
struct GetSubscriptionsRequestDefaultTypeInternal;
extern GetSubscriptionsRequestDefaultTypeInternal _GetSubscriptionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSubscriptionsRequest_class_data_;
class GetSubscriptionsResponse;
struct GetSubscriptionsResponseDefaultTypeInternal;
extern GetSubscriptionsResponseDefaultTypeInternal _GetSubscriptionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSubscriptionsResponse_class_data_;
class PublishEventRequest;
struct PublishEventRequestDefaultTypeInternal;
extern PublishEventRequestDefaultTypeInternal _PublishEventRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublishEventRequest_class_data_;
class PublishEventResponse;
struct PublishEventResponseDefaultTypeInternal;
extern PublishEventResponseDefaultTypeInternal _PublishEventResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PublishEventResponse_class_data_;
class SubscribeAllRequest;
struct SubscribeAllRequestDefaultTypeInternal;
extern SubscribeAllRequestDefaultTypeInternal _SubscribeAllRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeAllRequest_class_data_;
class SubscribeRequest;
struct SubscribeRequestDefaultTypeInternal;
extern SubscribeRequestDefaultTypeInternal _SubscribeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_;
class Subscription;
struct SubscriptionDefaultTypeInternal;
extern SubscriptionDefaultTypeInternal _Subscription_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Subscription_class_data_;
class UnsubscribeRequest;
struct UnsubscribeRequestDefaultTypeInternal;
extern UnsubscribeRequestDefaultTypeInternal _UnsubscribeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UnsubscribeRequest_class_data_;
class UnsubscribeResponse;
struct UnsubscribeResponseDefaultTypeInternal;
extern UnsubscribeResponseDefaultTypeInternal _UnsubscribeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UnsubscribeResponse_class_data_;
}  // namespace seshat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace seshat {

// ===================================================================


// -------------------------------------------------------------------

class UnsubscribeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UnsubscribeRequest) */ {
 public:
  inline UnsubscribeRequest() : UnsubscribeRequest(nullptr) {}
  ~UnsubscribeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UnsubscribeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UnsubscribeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UnsubscribeRequest(::google::protobuf::internal::ConstantInitialized);

  inline UnsubscribeRequest(const UnsubscribeRequest& from) : UnsubscribeRequest(nullptr, from) {}
  inline UnsubscribeRequest(UnsubscribeRequest&& from) noexcept
      : UnsubscribeRequest(nullptr, ::std::move(from)) {}
  inline UnsubscribeRequest& operator=(const UnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeRequest& operator=(UnsubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnsubscribeRequest& default_instance() {
    return *reinterpret_cast<const UnsubscribeRequest*>(
        &_UnsubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(UnsubscribeRequest& a, UnsubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(UnsubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnsubscribeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UnsubscribeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnsubscribeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UnsubscribeRequest& from) { UnsubscribeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UnsubscribeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UnsubscribeRequest"; }

 protected:
  explicit UnsubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UnsubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UnsubscribeRequest& from);
  UnsubscribeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UnsubscribeRequest&& from) noexcept
      : UnsubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // string subscription_id = 1 [json_name = "subscriptionId"];
  void clear_subscription_id() ;
  const ::std::string& subscription_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_subscription_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_subscription_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_subscription_id();
  void set_allocated_subscription_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_subscription_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_subscription_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_subscription_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UnsubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UnsubscribeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subscription_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UnsubscribeRequest_class_data_;
// -------------------------------------------------------------------

class Subscription final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.Subscription) */ {
 public:
  inline Subscription() : Subscription(nullptr) {}
  ~Subscription() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Subscription* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Subscription));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Subscription(::google::protobuf::internal::ConstantInitialized);

  inline Subscription(const Subscription& from) : Subscription(nullptr, from) {}
  inline Subscription(Subscription&& from) noexcept
      : Subscription(nullptr, ::std::move(from)) {}
  inline Subscription& operator=(const Subscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline Subscription& operator=(Subscription&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Subscription& default_instance() {
    return *reinterpret_cast<const Subscription*>(
        &_Subscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(Subscription& a, Subscription& b) { a.Swap(&b); }
  inline void Swap(Subscription* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Subscription* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Subscription* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Subscription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Subscription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Subscription& from) { Subscription::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Subscription* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.Subscription"; }

 protected:
  explicit Subscription(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Subscription(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Subscription& from);
  Subscription(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Subscription&& from) noexcept
      : Subscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventTypesFieldNumber = 3,
    kIdFieldNumber = 1,
    kSubscriberIdFieldNumber = 2,
    kCreatedTimestampFieldNumber = 5,
    kPriorityFieldNumber = 4,
    kEventsReceivedFieldNumber = 6,
  };
  // repeated string event_types = 3 [json_name = "eventTypes"];
  int event_types_size() const;
  private:
  int _internal_event_types_size() const;

  public:
  void clear_event_types() ;
  const ::std::string& event_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_event_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_event_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_event_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_event_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_event_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_event_types();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string subscriber_id = 2 [json_name = "subscriberId"];
  void clear_subscriber_id() ;
  const ::std::string& subscriber_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_subscriber_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_subscriber_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_subscriber_id();
  void set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_subscriber_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_subscriber_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_subscriber_id();

  public:
  // int64 created_timestamp = 5 [json_name = "createdTimestamp"];
  void clear_created_timestamp() ;
  ::int64_t created_timestamp() const;
  void set_created_timestamp(::int64_t value);

  private:
  ::int64_t _internal_created_timestamp() const;
  void _internal_set_created_timestamp(::int64_t value);

  public:
  // int32 priority = 4 [json_name = "priority"];
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // int32 events_received = 6 [json_name = "eventsReceived"];
  void clear_events_received() ;
  ::int32_t events_received() const;
  void set_events_received(::int32_t value);

  private:
  ::int32_t _internal_events_received() const;
  void _internal_set_events_received(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.Subscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 54,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Subscription& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> event_types_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr subscriber_id_;
    ::int64_t created_timestamp_;
    ::int32_t priority_;
    ::int32_t events_received_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Subscription_class_data_;
// -------------------------------------------------------------------

class SubscribeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SubscribeRequest) */ {
 public:
  inline SubscribeRequest() : SubscribeRequest(nullptr) {}
  ~SubscribeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeRequest(const SubscribeRequest& from) : SubscribeRequest(nullptr, from) {}
  inline SubscribeRequest(SubscribeRequest&& from) noexcept
      : SubscribeRequest(nullptr, ::std::move(from)) {}
  inline SubscribeRequest& operator=(const SubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeRequest& operator=(SubscribeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeRequest& default_instance() {
    return *reinterpret_cast<const SubscribeRequest*>(
        &_SubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscribeRequest& a, SubscribeRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeRequest& from) { SubscribeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SubscribeRequest"; }

 protected:
  explicit SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeRequest& from);
  SubscribeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeRequest&& from) noexcept
      : SubscribeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventTypesFieldNumber = 1,
    kSubscriberIdFieldNumber = 2,
    kPriorityFieldNumber = 3,
    kIncludeHistoryFieldNumber = 4,
  };
  // repeated string event_types = 1 [json_name = "eventTypes"];
  int event_types_size() const;
  private:
  int _internal_event_types_size() const;

  public:
  void clear_event_types() ;
  const ::std::string& event_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_event_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_event_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_event_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_event_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_event_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_event_types();

  public:
  // string subscriber_id = 2 [json_name = "subscriberId"];
  void clear_subscriber_id() ;
  const ::std::string& subscriber_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_subscriber_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_subscriber_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_subscriber_id();
  void set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_subscriber_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_subscriber_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_subscriber_id();

  public:
  // int32 priority = 3 [json_name = "priority"];
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // bool include_history = 4 [json_name = "includeHistory"];
  void clear_include_history() ;
  bool include_history() const;
  void set_include_history(bool value);

  private:
  bool _internal_include_history() const;
  void _internal_set_include_history(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SubscribeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> event_types_;
    ::google::protobuf::internal::ArenaStringPtr subscriber_id_;
    ::int32_t priority_;
    bool include_history_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeRequest_class_data_;
// -------------------------------------------------------------------

class SubscribeAllRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SubscribeAllRequest) */ {
 public:
  inline SubscribeAllRequest() : SubscribeAllRequest(nullptr) {}
  ~SubscribeAllRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeAllRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeAllRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeAllRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeAllRequest(const SubscribeAllRequest& from) : SubscribeAllRequest(nullptr, from) {}
  inline SubscribeAllRequest(SubscribeAllRequest&& from) noexcept
      : SubscribeAllRequest(nullptr, ::std::move(from)) {}
  inline SubscribeAllRequest& operator=(const SubscribeAllRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeAllRequest& operator=(SubscribeAllRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeAllRequest& default_instance() {
    return *reinterpret_cast<const SubscribeAllRequest*>(
        &_SubscribeAllRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SubscribeAllRequest& a, SubscribeAllRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeAllRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeAllRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeAllRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeAllRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeAllRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeAllRequest& from) { SubscribeAllRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeAllRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SubscribeAllRequest"; }

 protected:
  explicit SubscribeAllRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeAllRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeAllRequest& from);
  SubscribeAllRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeAllRequest&& from) noexcept
      : SubscribeAllRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscriberIdFieldNumber = 1,
    kPriorityFieldNumber = 2,
    kIncludeHistoryFieldNumber = 3,
  };
  // string subscriber_id = 1 [json_name = "subscriberId"];
  void clear_subscriber_id() ;
  const ::std::string& subscriber_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_subscriber_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_subscriber_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_subscriber_id();
  void set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_subscriber_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_subscriber_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_subscriber_id();

  public:
  // int32 priority = 2 [json_name = "priority"];
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // bool include_history = 3 [json_name = "includeHistory"];
  void clear_include_history() ;
  bool include_history() const;
  void set_include_history(bool value);

  private:
  bool _internal_include_history() const;
  void _internal_set_include_history(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SubscribeAllRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 48,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeAllRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subscriber_id_;
    ::int32_t priority_;
    bool include_history_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeAllRequest_class_data_;
// -------------------------------------------------------------------

class GetSubscriptionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSubscriptionsRequest) */ {
 public:
  inline GetSubscriptionsRequest() : GetSubscriptionsRequest(nullptr) {}
  ~GetSubscriptionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSubscriptionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSubscriptionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSubscriptionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSubscriptionsRequest(const GetSubscriptionsRequest& from) : GetSubscriptionsRequest(nullptr, from) {}
  inline GetSubscriptionsRequest(GetSubscriptionsRequest&& from) noexcept
      : GetSubscriptionsRequest(nullptr, ::std::move(from)) {}
  inline GetSubscriptionsRequest& operator=(const GetSubscriptionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSubscriptionsRequest& operator=(GetSubscriptionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSubscriptionsRequest& default_instance() {
    return *reinterpret_cast<const GetSubscriptionsRequest*>(
        &_GetSubscriptionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetSubscriptionsRequest& a, GetSubscriptionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetSubscriptionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSubscriptionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSubscriptionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSubscriptionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSubscriptionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSubscriptionsRequest& from) { GetSubscriptionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSubscriptionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSubscriptionsRequest"; }

 protected:
  explicit GetSubscriptionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSubscriptionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSubscriptionsRequest& from);
  GetSubscriptionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSubscriptionsRequest&& from) noexcept
      : GetSubscriptionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscriberIdFieldNumber = 1,
  };
  // string subscriber_id = 1 [json_name = "subscriberId"];
  void clear_subscriber_id() ;
  const ::std::string& subscriber_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_subscriber_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_subscriber_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_subscriber_id();
  void set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_subscriber_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_subscriber_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_subscriber_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSubscriptionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSubscriptionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subscriber_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSubscriptionsRequest_class_data_;
// -------------------------------------------------------------------

class GameEvent_DataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  GameEvent_DataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameEvent_DataEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit GameEvent_DataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_GameEvent_DataEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fevents_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 43,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull GameEvent_DataEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class EventHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.EventHistoryRequest) */ {
 public:
  inline EventHistoryRequest() : EventHistoryRequest(nullptr) {}
  ~EventHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventHistoryRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventHistoryRequest(::google::protobuf::internal::ConstantInitialized);

  inline EventHistoryRequest(const EventHistoryRequest& from) : EventHistoryRequest(nullptr, from) {}
  inline EventHistoryRequest(EventHistoryRequest&& from) noexcept
      : EventHistoryRequest(nullptr, ::std::move(from)) {}
  inline EventHistoryRequest& operator=(const EventHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventHistoryRequest& operator=(EventHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventHistoryRequest& default_instance() {
    return *reinterpret_cast<const EventHistoryRequest*>(
        &_EventHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(EventHistoryRequest& a, EventHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(EventHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventHistoryRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventHistoryRequest& from) { EventHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventHistoryRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.EventHistoryRequest"; }

 protected:
  explicit EventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EventHistoryRequest& from);
  EventHistoryRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EventHistoryRequest&& from) noexcept
      : EventHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventTypesFieldNumber = 1,
    kEntityIdFieldNumber = 2,
    kSinceTimestampFieldNumber = 4,
    kUntilTimestampFieldNumber = 5,
    kLimitFieldNumber = 3,
  };
  // repeated string event_types = 1 [json_name = "eventTypes"];
  int event_types_size() const;
  private:
  int _internal_event_types_size() const;

  public:
  void clear_event_types() ;
  const ::std::string& event_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_event_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_event_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_event_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_event_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_event_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_event_types();

  public:
  // string entity_id = 2 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
  void clear_since_timestamp() ;
  ::int64_t since_timestamp() const;
  void set_since_timestamp(::int64_t value);

  private:
  ::int64_t _internal_since_timestamp() const;
  void _internal_set_since_timestamp(::int64_t value);

  public:
  // int64 until_timestamp = 5 [json_name = "untilTimestamp"];
  void clear_until_timestamp() ;
  ::int64_t until_timestamp() const;
  void set_until_timestamp(::int64_t value);

  private:
  ::int64_t _internal_until_timestamp() const;
  void _internal_set_until_timestamp(::int64_t value);

  public:
  // int32 limit = 3 [json_name = "limit"];
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.EventHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 55,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EventHistoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> event_types_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::int64_t since_timestamp_;
    ::int64_t until_timestamp_;
    ::int32_t limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EventHistoryRequest_class_data_;
// -------------------------------------------------------------------

class ClearEventHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ClearEventHistoryRequest) */ {
 public:
  inline ClearEventHistoryRequest() : ClearEventHistoryRequest(nullptr) {}
  ~ClearEventHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearEventHistoryRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearEventHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearEventHistoryRequest(::google::protobuf::internal::ConstantInitialized);

  inline ClearEventHistoryRequest(const ClearEventHistoryRequest& from) : ClearEventHistoryRequest(nullptr, from) {}
  inline ClearEventHistoryRequest(ClearEventHistoryRequest&& from) noexcept
      : ClearEventHistoryRequest(nullptr, ::std::move(from)) {}
  inline ClearEventHistoryRequest& operator=(const ClearEventHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearEventHistoryRequest& operator=(ClearEventHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearEventHistoryRequest& default_instance() {
    return *reinterpret_cast<const ClearEventHistoryRequest*>(
        &_ClearEventHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ClearEventHistoryRequest& a, ClearEventHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(ClearEventHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearEventHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearEventHistoryRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearEventHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearEventHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearEventHistoryRequest& from) { ClearEventHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearEventHistoryRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ClearEventHistoryRequest"; }

 protected:
  explicit ClearEventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClearEventHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClearEventHistoryRequest& from);
  ClearEventHistoryRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClearEventHistoryRequest&& from) noexcept
      : ClearEventHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventTypesFieldNumber = 1,
    kEntityIdFieldNumber = 2,
  };
  // repeated string event_types = 1 [json_name = "eventTypes"];
  int event_types_size() const;
  private:
  int _internal_event_types_size() const;

  public:
  void clear_event_types() ;
  const ::std::string& event_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_event_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_event_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_event_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_event_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_event_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_event_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_event_types();

  public:
  // string entity_id = 2 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ClearEventHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClearEventHistoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> event_types_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClearEventHistoryRequest_class_data_;
// -------------------------------------------------------------------

class GameEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GameEvent) */ {
 public:
  inline GameEvent() : GameEvent(nullptr) {}
  ~GameEvent() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GameEvent* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GameEvent));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GameEvent(::google::protobuf::internal::ConstantInitialized);

  inline GameEvent(const GameEvent& from) : GameEvent(nullptr, from) {}
  inline GameEvent(GameEvent&& from) noexcept
      : GameEvent(nullptr, ::std::move(from)) {}
  inline GameEvent& operator=(const GameEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline GameEvent& operator=(GameEvent&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GameEvent& default_instance() {
    return *reinterpret_cast<const GameEvent*>(
        &_GameEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GameEvent& a, GameEvent& b) { a.Swap(&b); }
  inline void Swap(GameEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GameEvent* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GameEvent* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GameEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GameEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GameEvent& from) { GameEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GameEvent* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GameEvent"; }

 protected:
  explicit GameEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GameEvent(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GameEvent& from);
  GameEvent(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GameEvent&& from) noexcept
      : GameEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 6,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kSourceFieldNumber = 7,
    kContextFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kPriorityFieldNumber = 5,
  };
  // map<string, string> data = 6 [json_name = "data"];
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const ::google::protobuf::Map<std::string, std::string>& data() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_data();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_data() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_data();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // string source = 7 [json_name = "source"];
  void clear_source() ;
  const ::std::string& source() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source();
  void set_allocated_source(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source();

  public:
  // .seshat.EventContext context = 3 [json_name = "context"];
  bool has_context() const;
  void clear_context() ;
  const ::seshat::EventContext& context() const;
  [[nodiscard]] ::seshat::EventContext* PROTOBUF_NULLABLE release_context();
  ::seshat::EventContext* PROTOBUF_NONNULL mutable_context();
  void set_allocated_context(::seshat::EventContext* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_context(::seshat::EventContext* PROTOBUF_NULLABLE value);
  ::seshat::EventContext* PROTOBUF_NULLABLE unsafe_arena_release_context();

  private:
  const ::seshat::EventContext& _internal_context() const;
  ::seshat::EventContext* PROTOBUF_NONNULL _internal_mutable_context();

  public:
  // int64 timestamp = 4 [json_name = "timestamp"];
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int32 priority = 5 [json_name = "priority"];
  void clear_priority() ;
  ::int32_t priority() const;
  void set_priority(::int32_t value);

  private:
  ::int32_t _internal_priority() const;
  void _internal_set_priority(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GameEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 7,
                                   2, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GameEvent& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<GameEvent_DataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        data_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    ::seshat::EventContext* PROTOBUF_NULLABLE context_;
    ::int64_t timestamp_;
    ::int32_t priority_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GameEvent_class_data_;
// -------------------------------------------------------------------

class UnsubscribeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UnsubscribeResponse) */ {
 public:
  inline UnsubscribeResponse() : UnsubscribeResponse(nullptr) {}
  ~UnsubscribeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UnsubscribeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UnsubscribeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UnsubscribeResponse(::google::protobuf::internal::ConstantInitialized);

  inline UnsubscribeResponse(const UnsubscribeResponse& from) : UnsubscribeResponse(nullptr, from) {}
  inline UnsubscribeResponse(UnsubscribeResponse&& from) noexcept
      : UnsubscribeResponse(nullptr, ::std::move(from)) {}
  inline UnsubscribeResponse& operator=(const UnsubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UnsubscribeResponse& operator=(UnsubscribeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UnsubscribeResponse& default_instance() {
    return *reinterpret_cast<const UnsubscribeResponse*>(
        &_UnsubscribeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(UnsubscribeResponse& a, UnsubscribeResponse& b) { a.Swap(&b); }
  inline void Swap(UnsubscribeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UnsubscribeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UnsubscribeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UnsubscribeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UnsubscribeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UnsubscribeResponse& from) { UnsubscribeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UnsubscribeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UnsubscribeResponse"; }

 protected:
  explicit UnsubscribeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UnsubscribeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UnsubscribeResponse& from);
  UnsubscribeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UnsubscribeResponse&& from) noexcept
      : UnsubscribeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // .seshat.Result status = 1 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UnsubscribeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UnsubscribeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UnsubscribeResponse_class_data_;
// -------------------------------------------------------------------

class PublishEventResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.PublishEventResponse) */ {
 public:
  inline PublishEventResponse() : PublishEventResponse(nullptr) {}
  ~PublishEventResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEventResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEventResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEventResponse(::google::protobuf::internal::ConstantInitialized);

  inline PublishEventResponse(const PublishEventResponse& from) : PublishEventResponse(nullptr, from) {}
  inline PublishEventResponse(PublishEventResponse&& from) noexcept
      : PublishEventResponse(nullptr, ::std::move(from)) {}
  inline PublishEventResponse& operator=(const PublishEventResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEventResponse& operator=(PublishEventResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEventResponse& default_instance() {
    return *reinterpret_cast<const PublishEventResponse*>(
        &_PublishEventResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(PublishEventResponse& a, PublishEventResponse& b) { a.Swap(&b); }
  inline void Swap(PublishEventResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEventResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEventResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishEventResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishEventResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishEventResponse& from) { PublishEventResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishEventResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.PublishEventResponse"; }

 protected:
  explicit PublishEventResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublishEventResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublishEventResponse& from);
  PublishEventResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublishEventResponse&& from) noexcept
      : PublishEventResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventIdFieldNumber = 2,
    kStatusFieldNumber = 1,
    kTimestampFieldNumber = 3,
  };
  // string event_id = 2 [json_name = "eventId"];
  void clear_event_id() ;
  const ::std::string& event_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_event_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_event_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_event_id();
  void set_allocated_event_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_event_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_event_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_event_id();

  public:
  // .seshat.Result status = 1 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int64 timestamp = 3 [json_name = "timestamp"];
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.PublishEventResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 44,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublishEventResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr event_id_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublishEventResponse_class_data_;
// -------------------------------------------------------------------

class PublishEventRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.PublishEventRequest) */ {
 public:
  inline PublishEventRequest() : PublishEventRequest(nullptr) {}
  ~PublishEventRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PublishEventRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PublishEventRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishEventRequest(::google::protobuf::internal::ConstantInitialized);

  inline PublishEventRequest(const PublishEventRequest& from) : PublishEventRequest(nullptr, from) {}
  inline PublishEventRequest(PublishEventRequest&& from) noexcept
      : PublishEventRequest(nullptr, ::std::move(from)) {}
  inline PublishEventRequest& operator=(const PublishEventRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishEventRequest& operator=(PublishEventRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishEventRequest& default_instance() {
    return *reinterpret_cast<const PublishEventRequest*>(
        &_PublishEventRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(PublishEventRequest& a, PublishEventRequest& b) { a.Swap(&b); }
  inline void Swap(PublishEventRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishEventRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishEventRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PublishEventRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishEventRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishEventRequest& from) { PublishEventRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PublishEventRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.PublishEventRequest"; }

 protected:
  explicit PublishEventRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PublishEventRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PublishEventRequest& from);
  PublishEventRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PublishEventRequest&& from) noexcept
      : PublishEventRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventFieldNumber = 1,
  };
  // .seshat.GameEvent event = 1 [json_name = "event"];
  bool has_event() const;
  void clear_event() ;
  const ::seshat::GameEvent& event() const;
  [[nodiscard]] ::seshat::GameEvent* PROTOBUF_NULLABLE release_event();
  ::seshat::GameEvent* PROTOBUF_NONNULL mutable_event();
  void set_allocated_event(::seshat::GameEvent* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_event(::seshat::GameEvent* PROTOBUF_NULLABLE value);
  ::seshat::GameEvent* PROTOBUF_NULLABLE unsafe_arena_release_event();

  private:
  const ::seshat::GameEvent& _internal_event() const;
  ::seshat::GameEvent* PROTOBUF_NONNULL _internal_mutable_event();

  public:
  // @@protoc_insertion_point(class_scope:seshat.PublishEventRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PublishEventRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::GameEvent* PROTOBUF_NULLABLE event_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PublishEventRequest_class_data_;
// -------------------------------------------------------------------

class GetSubscriptionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSubscriptionsResponse) */ {
 public:
  inline GetSubscriptionsResponse() : GetSubscriptionsResponse(nullptr) {}
  ~GetSubscriptionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSubscriptionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSubscriptionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSubscriptionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSubscriptionsResponse(const GetSubscriptionsResponse& from) : GetSubscriptionsResponse(nullptr, from) {}
  inline GetSubscriptionsResponse(GetSubscriptionsResponse&& from) noexcept
      : GetSubscriptionsResponse(nullptr, ::std::move(from)) {}
  inline GetSubscriptionsResponse& operator=(const GetSubscriptionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSubscriptionsResponse& operator=(GetSubscriptionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSubscriptionsResponse& default_instance() {
    return *reinterpret_cast<const GetSubscriptionsResponse*>(
        &_GetSubscriptionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetSubscriptionsResponse& a, GetSubscriptionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetSubscriptionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSubscriptionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSubscriptionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSubscriptionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSubscriptionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSubscriptionsResponse& from) { GetSubscriptionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSubscriptionsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSubscriptionsResponse"; }

 protected:
  explicit GetSubscriptionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSubscriptionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSubscriptionsResponse& from);
  GetSubscriptionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSubscriptionsResponse&& from) noexcept
      : GetSubscriptionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubscriptionsFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
  int subscriptions_size() const;
  private:
  int _internal_subscriptions_size() const;

  public:
  void clear_subscriptions() ;
  ::seshat::Subscription* PROTOBUF_NONNULL mutable_subscriptions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Subscription>* PROTOBUF_NONNULL mutable_subscriptions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Subscription>& _internal_subscriptions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Subscription>* PROTOBUF_NONNULL _internal_mutable_subscriptions();
  public:
  const ::seshat::Subscription& subscriptions(int index) const;
  ::seshat::Subscription* PROTOBUF_NONNULL add_subscriptions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Subscription>& subscriptions() const;
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSubscriptionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSubscriptionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Subscription > subscriptions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSubscriptionsResponse_class_data_;
// -------------------------------------------------------------------

class EventHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.EventHistoryResponse) */ {
 public:
  inline EventHistoryResponse() : EventHistoryResponse(nullptr) {}
  ~EventHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EventHistoryResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EventHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EventHistoryResponse(::google::protobuf::internal::ConstantInitialized);

  inline EventHistoryResponse(const EventHistoryResponse& from) : EventHistoryResponse(nullptr, from) {}
  inline EventHistoryResponse(EventHistoryResponse&& from) noexcept
      : EventHistoryResponse(nullptr, ::std::move(from)) {}
  inline EventHistoryResponse& operator=(const EventHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EventHistoryResponse& operator=(EventHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EventHistoryResponse& default_instance() {
    return *reinterpret_cast<const EventHistoryResponse*>(
        &_EventHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(EventHistoryResponse& a, EventHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(EventHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EventHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EventHistoryResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EventHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EventHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EventHistoryResponse& from) { EventHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EventHistoryResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.EventHistoryResponse"; }

 protected:
  explicit EventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EventHistoryResponse& from);
  EventHistoryResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EventHistoryResponse&& from) noexcept
      : EventHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEventsFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.GameEvent events = 1 [json_name = "events"];
  int events_size() const;
  private:
  int _internal_events_size() const;

  public:
  void clear_events() ;
  ::seshat::GameEvent* PROTOBUF_NONNULL mutable_events(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>* PROTOBUF_NONNULL mutable_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>& _internal_events() const;
  ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>* PROTOBUF_NONNULL _internal_mutable_events();
  public:
  const ::seshat::GameEvent& events(int index) const;
  ::seshat::GameEvent* PROTOBUF_NONNULL add_events();
  const ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>& events() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.EventHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EventHistoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::GameEvent > events_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EventHistoryResponse_class_data_;
// -------------------------------------------------------------------

class ClearEventHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ClearEventHistoryResponse) */ {
 public:
  inline ClearEventHistoryResponse() : ClearEventHistoryResponse(nullptr) {}
  ~ClearEventHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ClearEventHistoryResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ClearEventHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClearEventHistoryResponse(::google::protobuf::internal::ConstantInitialized);

  inline ClearEventHistoryResponse(const ClearEventHistoryResponse& from) : ClearEventHistoryResponse(nullptr, from) {}
  inline ClearEventHistoryResponse(ClearEventHistoryResponse&& from) noexcept
      : ClearEventHistoryResponse(nullptr, ::std::move(from)) {}
  inline ClearEventHistoryResponse& operator=(const ClearEventHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClearEventHistoryResponse& operator=(ClearEventHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClearEventHistoryResponse& default_instance() {
    return *reinterpret_cast<const ClearEventHistoryResponse*>(
        &_ClearEventHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ClearEventHistoryResponse& a, ClearEventHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(ClearEventHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClearEventHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClearEventHistoryResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ClearEventHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClearEventHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClearEventHistoryResponse& from) { ClearEventHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ClearEventHistoryResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ClearEventHistoryResponse"; }

 protected:
  explicit ClearEventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ClearEventHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ClearEventHistoryResponse& from);
  ClearEventHistoryResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ClearEventHistoryResponse&& from) noexcept
      : ClearEventHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 2,
    kClearedCountFieldNumber = 1,
  };
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 cleared_count = 1 [json_name = "clearedCount"];
  void clear_cleared_count() ;
  ::int32_t cleared_count() const;
  void set_cleared_count(::int32_t value);

  private:
  ::int32_t _internal_cleared_count() const;
  void _internal_set_cleared_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ClearEventHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ClearEventHistoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t cleared_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fevents_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ClearEventHistoryResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// PublishEventRequest

// .seshat.GameEvent event = 1 [json_name = "event"];
inline bool PublishEventRequest::has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline void PublishEventRequest::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_ != nullptr) _impl_.event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::GameEvent& PublishEventRequest::_internal_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::GameEvent* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::GameEvent&>(::seshat::_GameEvent_default_instance_);
}
inline const ::seshat::GameEvent& PublishEventRequest::event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PublishEventRequest.event)
  return _internal_event();
}
inline void PublishEventRequest::unsafe_arena_set_allocated_event(
    ::seshat::GameEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = reinterpret_cast<::seshat::GameEvent*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.PublishEventRequest.event)
}
inline ::seshat::GameEvent* PROTOBUF_NULLABLE PublishEventRequest::release_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::GameEvent* released = _impl_.event_;
  _impl_.event_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::GameEvent* PROTOBUF_NULLABLE PublishEventRequest::unsafe_arena_release_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.PublishEventRequest.event)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::GameEvent* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::seshat::GameEvent* PROTOBUF_NONNULL PublishEventRequest::_internal_mutable_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::GameEvent>(GetArena());
    _impl_.event_ = reinterpret_cast<::seshat::GameEvent*>(p);
  }
  return _impl_.event_;
}
inline ::seshat::GameEvent* PROTOBUF_NONNULL PublishEventRequest::mutable_event()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::GameEvent* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:seshat.PublishEventRequest.event)
  return _msg;
}
inline void PublishEventRequest::set_allocated_event(::seshat::GameEvent* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.event_ = reinterpret_cast<::seshat::GameEvent*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.PublishEventRequest.event)
}

// -------------------------------------------------------------------

// PublishEventResponse

// .seshat.Result status = 1 [json_name = "status"];
inline bool PublishEventResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& PublishEventResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& PublishEventResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PublishEventResponse.status)
  return _internal_status();
}
inline void PublishEventResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.PublishEventResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE PublishEventResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE PublishEventResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.PublishEventResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL PublishEventResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL PublishEventResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.PublishEventResponse.status)
  return _msg;
}
inline void PublishEventResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.PublishEventResponse.status)
}

// string event_id = 2 [json_name = "eventId"];
inline void PublishEventResponse::clear_event_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PublishEventResponse::event_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PublishEventResponse.event_id)
  return _internal_event_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PublishEventResponse::set_event_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.event_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.PublishEventResponse.event_id)
}
inline ::std::string* PROTOBUF_NONNULL PublishEventResponse::mutable_event_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_event_id();
  // @@protoc_insertion_point(field_mutable:seshat.PublishEventResponse.event_id)
  return _s;
}
inline const ::std::string& PublishEventResponse::_internal_event_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_id_.Get();
}
inline void PublishEventResponse::_internal_set_event_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.event_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PublishEventResponse::_internal_mutable_event_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.event_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PublishEventResponse::release_event_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.PublishEventResponse.event_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.event_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.event_id_.Set("", GetArena());
  }
  return released;
}
inline void PublishEventResponse::set_allocated_event_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.event_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.event_id_.IsDefault()) {
    _impl_.event_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.PublishEventResponse.event_id)
}

// int64 timestamp = 3 [json_name = "timestamp"];
inline void PublishEventResponse::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t PublishEventResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.PublishEventResponse.timestamp)
  return _internal_timestamp();
}
inline void PublishEventResponse::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.PublishEventResponse.timestamp)
}
inline ::int64_t PublishEventResponse::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PublishEventResponse::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// SubscribeRequest

// repeated string event_types = 1 [json_name = "eventTypes"];
inline int SubscribeRequest::_internal_event_types_size() const {
  return _internal_event_types().size();
}
inline int SubscribeRequest::event_types_size() const {
  return _internal_event_types_size();
}
inline void SubscribeRequest::clear_event_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::add_event_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_event_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SubscribeRequest.event_types)
  return _s;
}
inline const ::std::string& SubscribeRequest::event_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SubscribeRequest.event_types)
  return _internal_event_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::mutable_event_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SubscribeRequest.event_types)
  return _internal_mutable_event_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SubscribeRequest::set_event_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_event_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SubscribeRequest.event_types)
}
template <typename Arg_, typename... Args_>
inline void SubscribeRequest::add_event_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_event_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SubscribeRequest.event_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SubscribeRequest::event_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SubscribeRequest.event_types)
  return _internal_event_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SubscribeRequest::mutable_event_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SubscribeRequest.event_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_event_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SubscribeRequest::_internal_event_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SubscribeRequest::_internal_mutable_event_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.event_types_;
}

// string subscriber_id = 2 [json_name = "subscriberId"];
inline void SubscribeRequest::clear_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubscribeRequest::subscriber_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SubscribeRequest.subscriber_id)
  return _internal_subscriber_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeRequest::set_subscriber_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SubscribeRequest.subscriber_id)
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::mutable_subscriber_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_subscriber_id();
  // @@protoc_insertion_point(field_mutable:seshat.SubscribeRequest.subscriber_id)
  return _s;
}
inline const ::std::string& SubscribeRequest::_internal_subscriber_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriber_id_.Get();
}
inline void SubscribeRequest::_internal_set_subscriber_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubscribeRequest::_internal_mutable_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subscriber_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubscribeRequest::release_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SubscribeRequest.subscriber_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subscriber_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeRequest::set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subscriber_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscriber_id_.IsDefault()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SubscribeRequest.subscriber_id)
}

// int32 priority = 3 [json_name = "priority"];
inline void SubscribeRequest::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SubscribeRequest::priority() const {
  // @@protoc_insertion_point(field_get:seshat.SubscribeRequest.priority)
  return _internal_priority();
}
inline void SubscribeRequest::set_priority(::int32_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.SubscribeRequest.priority)
}
inline ::int32_t SubscribeRequest::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void SubscribeRequest::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// bool include_history = 4 [json_name = "includeHistory"];
inline void SubscribeRequest::clear_include_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_history_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool SubscribeRequest::include_history() const {
  // @@protoc_insertion_point(field_get:seshat.SubscribeRequest.include_history)
  return _internal_include_history();
}
inline void SubscribeRequest::set_include_history(bool value) {
  _internal_set_include_history(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SubscribeRequest.include_history)
}
inline bool SubscribeRequest::_internal_include_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_history_;
}
inline void SubscribeRequest::_internal_set_include_history(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_history_ = value;
}

// -------------------------------------------------------------------

// SubscribeAllRequest

// string subscriber_id = 1 [json_name = "subscriberId"];
inline void SubscribeAllRequest::clear_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SubscribeAllRequest::subscriber_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SubscribeAllRequest.subscriber_id)
  return _internal_subscriber_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeAllRequest::set_subscriber_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SubscribeAllRequest.subscriber_id)
}
inline ::std::string* PROTOBUF_NONNULL SubscribeAllRequest::mutable_subscriber_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_subscriber_id();
  // @@protoc_insertion_point(field_mutable:seshat.SubscribeAllRequest.subscriber_id)
  return _s;
}
inline const ::std::string& SubscribeAllRequest::_internal_subscriber_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriber_id_.Get();
}
inline void SubscribeAllRequest::_internal_set_subscriber_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SubscribeAllRequest::_internal_mutable_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subscriber_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SubscribeAllRequest::release_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SubscribeAllRequest.subscriber_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subscriber_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeAllRequest::set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subscriber_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscriber_id_.IsDefault()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SubscribeAllRequest.subscriber_id)
}

// int32 priority = 2 [json_name = "priority"];
inline void SubscribeAllRequest::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SubscribeAllRequest::priority() const {
  // @@protoc_insertion_point(field_get:seshat.SubscribeAllRequest.priority)
  return _internal_priority();
}
inline void SubscribeAllRequest::set_priority(::int32_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.SubscribeAllRequest.priority)
}
inline ::int32_t SubscribeAllRequest::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void SubscribeAllRequest::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// bool include_history = 3 [json_name = "includeHistory"];
inline void SubscribeAllRequest::clear_include_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_history_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool SubscribeAllRequest::include_history() const {
  // @@protoc_insertion_point(field_get:seshat.SubscribeAllRequest.include_history)
  return _internal_include_history();
}
inline void SubscribeAllRequest::set_include_history(bool value) {
  _internal_set_include_history(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SubscribeAllRequest.include_history)
}
inline bool SubscribeAllRequest::_internal_include_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_history_;
}
inline void SubscribeAllRequest::_internal_set_include_history(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_history_ = value;
}

// -------------------------------------------------------------------

// UnsubscribeRequest

// string subscription_id = 1 [json_name = "subscriptionId"];
inline void UnsubscribeRequest::clear_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscription_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UnsubscribeRequest::subscription_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UnsubscribeRequest.subscription_id)
  return _internal_subscription_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UnsubscribeRequest::set_subscription_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscription_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.UnsubscribeRequest.subscription_id)
}
inline ::std::string* PROTOBUF_NONNULL UnsubscribeRequest::mutable_subscription_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_subscription_id();
  // @@protoc_insertion_point(field_mutable:seshat.UnsubscribeRequest.subscription_id)
  return _s;
}
inline const ::std::string& UnsubscribeRequest::_internal_subscription_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscription_id_.Get();
}
inline void UnsubscribeRequest::_internal_set_subscription_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscription_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UnsubscribeRequest::_internal_mutable_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subscription_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UnsubscribeRequest::release_subscription_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UnsubscribeRequest.subscription_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subscription_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.subscription_id_.Set("", GetArena());
  }
  return released;
}
inline void UnsubscribeRequest::set_allocated_subscription_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subscription_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscription_id_.IsDefault()) {
    _impl_.subscription_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.UnsubscribeRequest.subscription_id)
}

// -------------------------------------------------------------------

// UnsubscribeResponse

// .seshat.Result status = 1 [json_name = "status"];
inline bool UnsubscribeResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& UnsubscribeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& UnsubscribeResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UnsubscribeResponse.status)
  return _internal_status();
}
inline void UnsubscribeResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UnsubscribeResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE UnsubscribeResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE UnsubscribeResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UnsubscribeResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL UnsubscribeResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL UnsubscribeResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.UnsubscribeResponse.status)
  return _msg;
}
inline void UnsubscribeResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UnsubscribeResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GameEvent

// string id = 1 [json_name = "id"];
inline void GameEvent::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GameEvent::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GameEvent::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GameEvent.id)
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.GameEvent.id)
  return _s;
}
inline const ::std::string& GameEvent::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void GameEvent::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GameEvent::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GameEvent.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void GameEvent::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GameEvent.id)
}

// string type = 2 [json_name = "type"];
inline void GameEvent::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GameEvent::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GameEvent::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GameEvent.type)
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:seshat.GameEvent.type)
  return _s;
}
inline const ::std::string& GameEvent::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void GameEvent::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GameEvent::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GameEvent.type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void GameEvent::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GameEvent.type)
}

// .seshat.EventContext context = 3 [json_name = "context"];
inline bool GameEvent::has_context() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.context_ != nullptr);
  return value;
}
inline const ::seshat::EventContext& GameEvent::_internal_context() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::EventContext* p = _impl_.context_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::EventContext&>(::seshat::_EventContext_default_instance_);
}
inline const ::seshat::EventContext& GameEvent::context() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.context)
  return _internal_context();
}
inline void GameEvent::unsafe_arena_set_allocated_context(
    ::seshat::EventContext* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }
  _impl_.context_ = reinterpret_cast<::seshat::EventContext*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GameEvent.context)
}
inline ::seshat::EventContext* PROTOBUF_NULLABLE GameEvent::release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::EventContext* released = _impl_.context_;
  _impl_.context_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::EventContext* PROTOBUF_NULLABLE GameEvent::unsafe_arena_release_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GameEvent.context)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::EventContext* temp = _impl_.context_;
  _impl_.context_ = nullptr;
  return temp;
}
inline ::seshat::EventContext* PROTOBUF_NONNULL GameEvent::_internal_mutable_context() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.context_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::EventContext>(GetArena());
    _impl_.context_ = reinterpret_cast<::seshat::EventContext*>(p);
  }
  return _impl_.context_;
}
inline ::seshat::EventContext* PROTOBUF_NONNULL GameEvent::mutable_context()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::EventContext* _msg = _internal_mutable_context();
  // @@protoc_insertion_point(field_mutable:seshat.GameEvent.context)
  return _msg;
}
inline void GameEvent::set_allocated_context(::seshat::EventContext* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.context_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.context_ = reinterpret_cast<::seshat::EventContext*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GameEvent.context)
}

// int64 timestamp = 4 [json_name = "timestamp"];
inline void GameEvent::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t GameEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.timestamp)
  return _internal_timestamp();
}
inline void GameEvent::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.GameEvent.timestamp)
}
inline ::int64_t GameEvent::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void GameEvent::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// int32 priority = 5 [json_name = "priority"];
inline void GameEvent::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t GameEvent::priority() const {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.priority)
  return _internal_priority();
}
inline void GameEvent::set_priority(::int32_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.GameEvent.priority)
}
inline ::int32_t GameEvent::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void GameEvent::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// map<string, string> data = 6 [json_name = "data"];
inline int GameEvent::_internal_data_size() const {
  return _internal_data().size();
}
inline int GameEvent::data_size() const {
  return _internal_data_size();
}
inline void GameEvent::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GameEvent::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GameEvent::data() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.GameEvent.data)
  return _internal_data();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL GameEvent::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL GameEvent::mutable_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.GameEvent.data)
  return _internal_mutable_data();
}

// string source = 7 [json_name = "source"];
inline void GameEvent::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& GameEvent::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GameEvent.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GameEvent::set_source(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GameEvent.source)
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::mutable_source()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:seshat.GameEvent.source)
  return _s;
}
inline const ::std::string& GameEvent::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void GameEvent::_internal_set_source(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GameEvent::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.source_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GameEvent::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GameEvent.source)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.source_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_.Set("", GetArena());
  }
  return released;
}
inline void GameEvent::set_allocated_source(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.source_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_.IsDefault()) {
    _impl_.source_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GameEvent.source)
}

// -------------------------------------------------------------------

// EventHistoryRequest

// repeated string event_types = 1 [json_name = "eventTypes"];
inline int EventHistoryRequest::_internal_event_types_size() const {
  return _internal_event_types().size();
}
inline int EventHistoryRequest::event_types_size() const {
  return _internal_event_types_size();
}
inline void EventHistoryRequest::clear_event_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL EventHistoryRequest::add_event_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_event_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.EventHistoryRequest.event_types)
  return _s;
}
inline const ::std::string& EventHistoryRequest::event_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryRequest.event_types)
  return _internal_event_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL EventHistoryRequest::mutable_event_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.EventHistoryRequest.event_types)
  return _internal_mutable_event_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void EventHistoryRequest::set_event_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_event_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.EventHistoryRequest.event_types)
}
template <typename Arg_, typename... Args_>
inline void EventHistoryRequest::add_event_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_event_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.EventHistoryRequest.event_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& EventHistoryRequest::event_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.EventHistoryRequest.event_types)
  return _internal_event_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
EventHistoryRequest::mutable_event_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.EventHistoryRequest.event_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_event_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
EventHistoryRequest::_internal_event_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
EventHistoryRequest::_internal_mutable_event_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.event_types_;
}

// string entity_id = 2 [json_name = "entityId"];
inline void EventHistoryRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EventHistoryRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EventHistoryRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.EventHistoryRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL EventHistoryRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.EventHistoryRequest.entity_id)
  return _s;
}
inline const ::std::string& EventHistoryRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void EventHistoryRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EventHistoryRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EventHistoryRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.EventHistoryRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void EventHistoryRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.EventHistoryRequest.entity_id)
}

// int32 limit = 3 [json_name = "limit"];
inline void EventHistoryRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t EventHistoryRequest::limit() const {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryRequest.limit)
  return _internal_limit();
}
inline void EventHistoryRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.EventHistoryRequest.limit)
}
inline ::int32_t EventHistoryRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void EventHistoryRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
inline void EventHistoryRequest::clear_since_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t EventHistoryRequest::since_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryRequest.since_timestamp)
  return _internal_since_timestamp();
}
inline void EventHistoryRequest::set_since_timestamp(::int64_t value) {
  _internal_set_since_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.EventHistoryRequest.since_timestamp)
}
inline ::int64_t EventHistoryRequest::_internal_since_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.since_timestamp_;
}
inline void EventHistoryRequest::_internal_set_since_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = value;
}

// int64 until_timestamp = 5 [json_name = "untilTimestamp"];
inline void EventHistoryRequest::clear_until_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.until_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t EventHistoryRequest::until_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryRequest.until_timestamp)
  return _internal_until_timestamp();
}
inline void EventHistoryRequest::set_until_timestamp(::int64_t value) {
  _internal_set_until_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.EventHistoryRequest.until_timestamp)
}
inline ::int64_t EventHistoryRequest::_internal_until_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.until_timestamp_;
}
inline void EventHistoryRequest::_internal_set_until_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.until_timestamp_ = value;
}

// -------------------------------------------------------------------

// EventHistoryResponse

// repeated .seshat.GameEvent events = 1 [json_name = "events"];
inline int EventHistoryResponse::_internal_events_size() const {
  return _internal_events().size();
}
inline int EventHistoryResponse::events_size() const {
  return _internal_events_size();
}
inline void EventHistoryResponse::clear_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_.Clear();
}
inline ::seshat::GameEvent* PROTOBUF_NONNULL EventHistoryResponse::mutable_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.EventHistoryResponse.events)
  return _internal_mutable_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>* PROTOBUF_NONNULL EventHistoryResponse::mutable_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.EventHistoryResponse.events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_events();
}
inline const ::seshat::GameEvent& EventHistoryResponse::events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryResponse.events)
  return _internal_events().Get(index);
}
inline ::seshat::GameEvent* PROTOBUF_NONNULL EventHistoryResponse::add_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::GameEvent* _add = _internal_mutable_events()->Add();
  // @@protoc_insertion_point(field_add:seshat.EventHistoryResponse.events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>& EventHistoryResponse::events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.EventHistoryResponse.events)
  return _internal_events();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>&
EventHistoryResponse::_internal_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::GameEvent>* PROTOBUF_NONNULL
EventHistoryResponse::_internal_mutable_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.events_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void EventHistoryResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t EventHistoryResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryResponse.total_count)
  return _internal_total_count();
}
inline void EventHistoryResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.EventHistoryResponse.total_count)
}
inline ::int32_t EventHistoryResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void EventHistoryResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool EventHistoryResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& EventHistoryResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& EventHistoryResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EventHistoryResponse.status)
  return _internal_status();
}
inline void EventHistoryResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.EventHistoryResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE EventHistoryResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE EventHistoryResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.EventHistoryResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL EventHistoryResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL EventHistoryResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.EventHistoryResponse.status)
  return _msg;
}
inline void EventHistoryResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.EventHistoryResponse.status)
}

// -------------------------------------------------------------------

// ClearEventHistoryRequest

// repeated string event_types = 1 [json_name = "eventTypes"];
inline int ClearEventHistoryRequest::_internal_event_types_size() const {
  return _internal_event_types().size();
}
inline int ClearEventHistoryRequest::event_types_size() const {
  return _internal_event_types_size();
}
inline void ClearEventHistoryRequest::clear_event_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ClearEventHistoryRequest::add_event_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_event_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ClearEventHistoryRequest.event_types)
  return _s;
}
inline const ::std::string& ClearEventHistoryRequest::event_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ClearEventHistoryRequest.event_types)
  return _internal_event_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ClearEventHistoryRequest::mutable_event_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ClearEventHistoryRequest.event_types)
  return _internal_mutable_event_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ClearEventHistoryRequest::set_event_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_event_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ClearEventHistoryRequest.event_types)
}
template <typename Arg_, typename... Args_>
inline void ClearEventHistoryRequest::add_event_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_event_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ClearEventHistoryRequest.event_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ClearEventHistoryRequest::event_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ClearEventHistoryRequest.event_types)
  return _internal_event_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ClearEventHistoryRequest::mutable_event_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ClearEventHistoryRequest.event_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_event_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ClearEventHistoryRequest::_internal_event_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ClearEventHistoryRequest::_internal_mutable_event_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.event_types_;
}

// string entity_id = 2 [json_name = "entityId"];
inline void ClearEventHistoryRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ClearEventHistoryRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ClearEventHistoryRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ClearEventHistoryRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ClearEventHistoryRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ClearEventHistoryRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ClearEventHistoryRequest.entity_id)
  return _s;
}
inline const ::std::string& ClearEventHistoryRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void ClearEventHistoryRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ClearEventHistoryRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ClearEventHistoryRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ClearEventHistoryRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ClearEventHistoryRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ClearEventHistoryRequest.entity_id)
}

// -------------------------------------------------------------------

// ClearEventHistoryResponse

// int32 cleared_count = 1 [json_name = "clearedCount"];
inline void ClearEventHistoryResponse::clear_cleared_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cleared_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t ClearEventHistoryResponse::cleared_count() const {
  // @@protoc_insertion_point(field_get:seshat.ClearEventHistoryResponse.cleared_count)
  return _internal_cleared_count();
}
inline void ClearEventHistoryResponse::set_cleared_count(::int32_t value) {
  _internal_set_cleared_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.ClearEventHistoryResponse.cleared_count)
}
inline ::int32_t ClearEventHistoryResponse::_internal_cleared_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cleared_count_;
}
inline void ClearEventHistoryResponse::_internal_set_cleared_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cleared_count_ = value;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool ClearEventHistoryResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& ClearEventHistoryResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& ClearEventHistoryResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ClearEventHistoryResponse.status)
  return _internal_status();
}
inline void ClearEventHistoryResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ClearEventHistoryResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE ClearEventHistoryResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE ClearEventHistoryResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ClearEventHistoryResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL ClearEventHistoryResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL ClearEventHistoryResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.ClearEventHistoryResponse.status)
  return _msg;
}
inline void ClearEventHistoryResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ClearEventHistoryResponse.status)
}

// -------------------------------------------------------------------

// GetSubscriptionsRequest

// string subscriber_id = 1 [json_name = "subscriberId"];
inline void GetSubscriptionsRequest::clear_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetSubscriptionsRequest::subscriber_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSubscriptionsRequest.subscriber_id)
  return _internal_subscriber_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSubscriptionsRequest::set_subscriber_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSubscriptionsRequest.subscriber_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSubscriptionsRequest::mutable_subscriber_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_subscriber_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSubscriptionsRequest.subscriber_id)
  return _s;
}
inline const ::std::string& GetSubscriptionsRequest::_internal_subscriber_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriber_id_.Get();
}
inline void GetSubscriptionsRequest::_internal_set_subscriber_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subscriber_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSubscriptionsRequest::_internal_mutable_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subscriber_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSubscriptionsRequest::release_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSubscriptionsRequest.subscriber_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subscriber_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSubscriptionsRequest::set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subscriber_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscriber_id_.IsDefault()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSubscriptionsRequest.subscriber_id)
}

// -------------------------------------------------------------------

// GetSubscriptionsResponse

// repeated .seshat.Subscription subscriptions = 1 [json_name = "subscriptions"];
inline int GetSubscriptionsResponse::_internal_subscriptions_size() const {
  return _internal_subscriptions().size();
}
inline int GetSubscriptionsResponse::subscriptions_size() const {
  return _internal_subscriptions_size();
}
inline void GetSubscriptionsResponse::clear_subscriptions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriptions_.Clear();
}
inline ::seshat::Subscription* PROTOBUF_NONNULL GetSubscriptionsResponse::mutable_subscriptions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetSubscriptionsResponse.subscriptions)
  return _internal_mutable_subscriptions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Subscription>* PROTOBUF_NONNULL GetSubscriptionsResponse::mutable_subscriptions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetSubscriptionsResponse.subscriptions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_subscriptions();
}
inline const ::seshat::Subscription& GetSubscriptionsResponse::subscriptions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSubscriptionsResponse.subscriptions)
  return _internal_subscriptions().Get(index);
}
inline ::seshat::Subscription* PROTOBUF_NONNULL GetSubscriptionsResponse::add_subscriptions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Subscription* _add = _internal_mutable_subscriptions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetSubscriptionsResponse.subscriptions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Subscription>& GetSubscriptionsResponse::subscriptions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetSubscriptionsResponse.subscriptions)
  return _internal_subscriptions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Subscription>&
GetSubscriptionsResponse::_internal_subscriptions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriptions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Subscription>* PROTOBUF_NONNULL
GetSubscriptionsResponse::_internal_mutable_subscriptions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.subscriptions_;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetSubscriptionsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetSubscriptionsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetSubscriptionsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSubscriptionsResponse.status)
  return _internal_status();
}
inline void GetSubscriptionsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSubscriptionsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSubscriptionsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSubscriptionsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSubscriptionsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSubscriptionsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSubscriptionsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetSubscriptionsResponse.status)
  return _msg;
}
inline void GetSubscriptionsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSubscriptionsResponse.status)
}

// -------------------------------------------------------------------

// Subscription

// string id = 1 [json_name = "id"];
inline void Subscription::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Subscription::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Subscription.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Subscription::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Subscription.id)
}
inline ::std::string* PROTOBUF_NONNULL Subscription::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.Subscription.id)
  return _s;
}
inline const ::std::string& Subscription::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Subscription::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Subscription::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Subscription::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Subscription.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Subscription::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Subscription.id)
}

// string subscriber_id = 2 [json_name = "subscriberId"];
inline void Subscription::clear_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subscriber_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Subscription::subscriber_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Subscription.subscriber_id)
  return _internal_subscriber_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Subscription::set_subscriber_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.subscriber_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Subscription.subscriber_id)
}
inline ::std::string* PROTOBUF_NONNULL Subscription::mutable_subscriber_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_subscriber_id();
  // @@protoc_insertion_point(field_mutable:seshat.Subscription.subscriber_id)
  return _s;
}
inline const ::std::string& Subscription::_internal_subscriber_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subscriber_id_.Get();
}
inline void Subscription::_internal_set_subscriber_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.subscriber_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Subscription::_internal_mutable_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.subscriber_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Subscription::release_subscriber_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Subscription.subscriber_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.subscriber_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  return released;
}
inline void Subscription::set_allocated_subscriber_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.subscriber_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.subscriber_id_.IsDefault()) {
    _impl_.subscriber_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Subscription.subscriber_id)
}

// repeated string event_types = 3 [json_name = "eventTypes"];
inline int Subscription::_internal_event_types_size() const {
  return _internal_event_types().size();
}
inline int Subscription::event_types_size() const {
  return _internal_event_types_size();
}
inline void Subscription::clear_event_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.event_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL Subscription::add_event_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_event_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.Subscription.event_types)
  return _s;
}
inline const ::std::string& Subscription::event_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Subscription.event_types)
  return _internal_event_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL Subscription::mutable_event_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.Subscription.event_types)
  return _internal_mutable_event_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Subscription::set_event_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_event_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.Subscription.event_types)
}
template <typename Arg_, typename... Args_>
inline void Subscription::add_event_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_event_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.Subscription.event_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& Subscription::event_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.Subscription.event_types)
  return _internal_event_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
Subscription::mutable_event_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.Subscription.event_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_event_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Subscription::_internal_event_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.event_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
Subscription::_internal_mutable_event_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.event_types_;
}

// int32 priority = 4 [json_name = "priority"];
inline void Subscription::clear_priority() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t Subscription::priority() const {
  // @@protoc_insertion_point(field_get:seshat.Subscription.priority)
  return _internal_priority();
}
inline void Subscription::set_priority(::int32_t value) {
  _internal_set_priority(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.Subscription.priority)
}
inline ::int32_t Subscription::_internal_priority() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.priority_;
}
inline void Subscription::_internal_set_priority(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.priority_ = value;
}

// int64 created_timestamp = 5 [json_name = "createdTimestamp"];
inline void Subscription::clear_created_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t Subscription::created_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.Subscription.created_timestamp)
  return _internal_created_timestamp();
}
inline void Subscription::set_created_timestamp(::int64_t value) {
  _internal_set_created_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.Subscription.created_timestamp)
}
inline ::int64_t Subscription::_internal_created_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_timestamp_;
}
inline void Subscription::_internal_set_created_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_timestamp_ = value;
}

// int32 events_received = 6 [json_name = "eventsReceived"];
inline void Subscription::clear_events_received() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_received_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t Subscription::events_received() const {
  // @@protoc_insertion_point(field_get:seshat.Subscription.events_received)
  return _internal_events_received();
}
inline void Subscription::set_events_received(::int32_t value) {
  _internal_set_events_received(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.Subscription.events_received)
}
inline ::int32_t Subscription::_internal_events_received() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.events_received_;
}
inline void Subscription::_internal_set_events_received(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.events_received_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // seshat_2fevents_2eproto_2epb_2eh
