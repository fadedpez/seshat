// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/conditions.proto
// Protobuf C++ Version: 6.31.1

#ifndef seshat_2fconditions_2eproto_2epb_2eh
#define seshat_2fconditions_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "seshat/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_seshat_2fconditions_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_seshat_2fconditions_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_seshat_2fconditions_2eproto;
}  // extern "C"
namespace seshat {
enum ConditionSeverity : int;
extern const uint32_t ConditionSeverity_internal_data_[];
enum DurationType : int;
extern const uint32_t DurationType_internal_data_[];
enum EffectOperation : int;
extern const uint32_t EffectOperation_internal_data_[];
enum RemovalReason : int;
extern const uint32_t RemovalReason_internal_data_[];
enum StackingBehavior : int;
extern const uint32_t StackingBehavior_internal_data_[];
class ApplyConditionRequest;
struct ApplyConditionRequestDefaultTypeInternal;
extern ApplyConditionRequestDefaultTypeInternal _ApplyConditionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApplyConditionRequest_class_data_;
class ApplyConditionResponse;
struct ApplyConditionResponseDefaultTypeInternal;
extern ApplyConditionResponseDefaultTypeInternal _ApplyConditionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ApplyConditionResponse_class_data_;
class CheckImmunityRequest;
struct CheckImmunityRequestDefaultTypeInternal;
extern CheckImmunityRequestDefaultTypeInternal _CheckImmunityRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CheckImmunityRequest_class_data_;
class CheckImmunityResponse;
struct CheckImmunityResponseDefaultTypeInternal;
extern CheckImmunityResponseDefaultTypeInternal _CheckImmunityResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CheckImmunityResponse_class_data_;
class Condition;
struct ConditionDefaultTypeInternal;
extern ConditionDefaultTypeInternal _Condition_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Condition_class_data_;
class ConditionDuration;
struct ConditionDurationDefaultTypeInternal;
extern ConditionDurationDefaultTypeInternal _ConditionDuration_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionDuration_class_data_;
class ConditionEffect;
struct ConditionEffectDefaultTypeInternal;
extern ConditionEffectDefaultTypeInternal _ConditionEffect_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionEffect_class_data_;
class ConditionEffect_ParametersEntry_DoNotUse;
struct ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal;
extern ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal _ConditionEffect_ParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionEffect_ParametersEntry_DoNotUse_class_data_;
class ConditionHistoryEntry;
struct ConditionHistoryEntryDefaultTypeInternal;
extern ConditionHistoryEntryDefaultTypeInternal _ConditionHistoryEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_class_data_;
class ConditionHistoryEntry_DetailsEntry_DoNotUse;
struct ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal;
extern ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal _ConditionHistoryEntry_DetailsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_;
class ConditionParameters;
struct ConditionParametersDefaultTypeInternal;
extern ConditionParametersDefaultTypeInternal _ConditionParameters_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionParameters_class_data_;
class ConditionParameters_PropertiesEntry_DoNotUse;
struct ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal _ConditionParameters_PropertiesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionParameters_PropertiesEntry_DoNotUse_class_data_;
class ConditionTemplate;
struct ConditionTemplateDefaultTypeInternal;
extern ConditionTemplateDefaultTypeInternal _ConditionTemplate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionTemplate_class_data_;
class ConditionTemplate_PropertiesEntry_DoNotUse;
struct ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal _ConditionTemplate_PropertiesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConditionTemplate_PropertiesEntry_DoNotUse_class_data_;
class Condition_PropertiesEntry_DoNotUse;
struct Condition_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern Condition_PropertiesEntry_DoNotUseDefaultTypeInternal _Condition_PropertiesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull Condition_PropertiesEntry_DoNotUse_class_data_;
class ConflictResolution;
struct ConflictResolutionDefaultTypeInternal;
extern ConflictResolutionDefaultTypeInternal _ConflictResolution_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConflictResolution_class_data_;
class CreateConditionTemplateRequest;
struct CreateConditionTemplateRequestDefaultTypeInternal;
extern CreateConditionTemplateRequestDefaultTypeInternal _CreateConditionTemplateRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateConditionTemplateRequest_class_data_;
class CreateConditionTemplateResponse;
struct CreateConditionTemplateResponseDefaultTypeInternal;
extern CreateConditionTemplateResponseDefaultTypeInternal _CreateConditionTemplateResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateConditionTemplateResponse_class_data_;
class EntityConditions;
struct EntityConditionsDefaultTypeInternal;
extern EntityConditionsDefaultTypeInternal _EntityConditions_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EntityConditions_class_data_;
class GetActiveConditionsRequest;
struct GetActiveConditionsRequestDefaultTypeInternal;
extern GetActiveConditionsRequestDefaultTypeInternal _GetActiveConditionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsRequest_class_data_;
class GetActiveConditionsResponse;
struct GetActiveConditionsResponseDefaultTypeInternal;
extern GetActiveConditionsResponseDefaultTypeInternal _GetActiveConditionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_class_data_;
class GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse;
struct GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal;
extern GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal _GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_;
class GetConditionHistoryRequest;
struct GetConditionHistoryRequestDefaultTypeInternal;
extern GetConditionHistoryRequestDefaultTypeInternal _GetConditionHistoryRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionHistoryRequest_class_data_;
class GetConditionHistoryResponse;
struct GetConditionHistoryResponseDefaultTypeInternal;
extern GetConditionHistoryResponseDefaultTypeInternal _GetConditionHistoryResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionHistoryResponse_class_data_;
class GetConditionTemplatesRequest;
struct GetConditionTemplatesRequestDefaultTypeInternal;
extern GetConditionTemplatesRequestDefaultTypeInternal _GetConditionTemplatesRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionTemplatesRequest_class_data_;
class GetConditionTemplatesResponse;
struct GetConditionTemplatesResponseDefaultTypeInternal;
extern GetConditionTemplatesResponseDefaultTypeInternal _GetConditionTemplatesResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionTemplatesResponse_class_data_;
class GetConditionsByTypeRequest;
struct GetConditionsByTypeRequestDefaultTypeInternal;
extern GetConditionsByTypeRequestDefaultTypeInternal _GetConditionsByTypeRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionsByTypeRequest_class_data_;
class GetConditionsByTypeResponse;
struct GetConditionsByTypeResponseDefaultTypeInternal;
extern GetConditionsByTypeResponseDefaultTypeInternal _GetConditionsByTypeResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionsByTypeResponse_class_data_;
class GetConditionsRequest;
struct GetConditionsRequestDefaultTypeInternal;
extern GetConditionsRequestDefaultTypeInternal _GetConditionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionsRequest_class_data_;
class GetConditionsResponse;
struct GetConditionsResponseDefaultTypeInternal;
extern GetConditionsResponseDefaultTypeInternal _GetConditionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConditionsResponse_class_data_;
class GetConflictingConditionsRequest;
struct GetConflictingConditionsRequestDefaultTypeInternal;
extern GetConflictingConditionsRequestDefaultTypeInternal _GetConflictingConditionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConflictingConditionsRequest_class_data_;
class GetConflictingConditionsResponse;
struct GetConflictingConditionsResponseDefaultTypeInternal;
extern GetConflictingConditionsResponseDefaultTypeInternal _GetConflictingConditionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetConflictingConditionsResponse_class_data_;
class HasConditionRequest;
struct HasConditionRequestDefaultTypeInternal;
extern HasConditionRequestDefaultTypeInternal _HasConditionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull HasConditionRequest_class_data_;
class HasConditionResponse;
struct HasConditionResponseDefaultTypeInternal;
extern HasConditionResponseDefaultTypeInternal _HasConditionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull HasConditionResponse_class_data_;
class ProcessConditionTickRequest;
struct ProcessConditionTickRequestDefaultTypeInternal;
extern ProcessConditionTickRequestDefaultTypeInternal _ProcessConditionTickRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcessConditionTickRequest_class_data_;
class ProcessConditionTickResponse;
struct ProcessConditionTickResponseDefaultTypeInternal;
extern ProcessConditionTickResponseDefaultTypeInternal _ProcessConditionTickResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ProcessConditionTickResponse_class_data_;
class RemoveConditionRequest;
struct RemoveConditionRequestDefaultTypeInternal;
extern RemoveConditionRequestDefaultTypeInternal _RemoveConditionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoveConditionRequest_class_data_;
class RemoveConditionResponse;
struct RemoveConditionResponseDefaultTypeInternal;
extern RemoveConditionResponseDefaultTypeInternal _RemoveConditionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoveConditionResponse_class_data_;
class ResolveConflictsRequest;
struct ResolveConflictsRequestDefaultTypeInternal;
extern ResolveConflictsRequestDefaultTypeInternal _ResolveConflictsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResolveConflictsRequest_class_data_;
class ResolveConflictsResponse;
struct ResolveConflictsResponseDefaultTypeInternal;
extern ResolveConflictsResponseDefaultTypeInternal _ResolveConflictsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ResolveConflictsResponse_class_data_;
class UpdateConditionRequest;
struct UpdateConditionRequestDefaultTypeInternal;
extern UpdateConditionRequestDefaultTypeInternal _UpdateConditionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateConditionRequest_class_data_;
class UpdateConditionResponse;
struct UpdateConditionResponseDefaultTypeInternal;
extern UpdateConditionResponseDefaultTypeInternal _UpdateConditionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateConditionResponse_class_data_;
}  // namespace seshat
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::seshat::ConditionSeverity_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::ConditionSeverity>;
template <>
internal::EnumTraitsT<::seshat::DurationType_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::DurationType>;
template <>
internal::EnumTraitsT<::seshat::EffectOperation_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::EffectOperation>;
template <>
internal::EnumTraitsT<::seshat::RemovalReason_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::RemovalReason>;
template <>
internal::EnumTraitsT<::seshat::StackingBehavior_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::StackingBehavior>;
}  // namespace protobuf
}  // namespace google

namespace seshat {
enum ConditionSeverity : int {
  CONDITION_SEVERITY_UNSPECIFIED = 0,
  CONDITION_SEVERITY_MINOR = 1,
  CONDITION_SEVERITY_MODERATE = 2,
  CONDITION_SEVERITY_MAJOR = 3,
  CONDITION_SEVERITY_CRITICAL = 4,
  ConditionSeverity_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ConditionSeverity_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ConditionSeverity_internal_data_[];
inline constexpr ConditionSeverity ConditionSeverity_MIN =
    static_cast<ConditionSeverity>(0);
inline constexpr ConditionSeverity ConditionSeverity_MAX =
    static_cast<ConditionSeverity>(4);
inline bool ConditionSeverity_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int ConditionSeverity_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ConditionSeverity_descriptor();
template <typename T>
const ::std::string& ConditionSeverity_Name(T value) {
  static_assert(::std::is_same<T, ConditionSeverity>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to ConditionSeverity_Name().");
  return ConditionSeverity_Name(static_cast<ConditionSeverity>(value));
}
template <>
inline const ::std::string& ConditionSeverity_Name(ConditionSeverity value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ConditionSeverity_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool ConditionSeverity_Parse(
    ::absl::string_view name, ConditionSeverity* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConditionSeverity>(ConditionSeverity_descriptor(), name,
                                           value);
}
enum DurationType : int {
  DURATION_TYPE_UNSPECIFIED = 0,
  DURATION_TYPE_ROUNDS = 1,
  DURATION_TYPE_MINUTES = 2,
  DURATION_TYPE_HOURS = 3,
  DURATION_TYPE_DAYS = 4,
  DURATION_TYPE_UNTIL_TRIGGER = 5,
  DURATION_TYPE_CONCENTRATION = 6,
  DURATION_TYPE_PERMANENT = 7,
  DurationType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  DurationType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t DurationType_internal_data_[];
inline constexpr DurationType DurationType_MIN =
    static_cast<DurationType>(0);
inline constexpr DurationType DurationType_MAX =
    static_cast<DurationType>(7);
inline bool DurationType_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int DurationType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DurationType_descriptor();
template <typename T>
const ::std::string& DurationType_Name(T value) {
  static_assert(::std::is_same<T, DurationType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to DurationType_Name().");
  return DurationType_Name(static_cast<DurationType>(value));
}
template <>
inline const ::std::string& DurationType_Name(DurationType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<DurationType_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool DurationType_Parse(
    ::absl::string_view name, DurationType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<DurationType>(DurationType_descriptor(), name,
                                           value);
}
enum StackingBehavior : int {
  STACKING_BEHAVIOR_UNSPECIFIED = 0,
  STACKING_BEHAVIOR_NONE = 1,
  STACKING_BEHAVIOR_DURATION = 2,
  STACKING_BEHAVIOR_INTENSITY = 3,
  STACKING_BEHAVIOR_COUNT = 4,
  STACKING_BEHAVIOR_REPLACE = 5,
  StackingBehavior_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StackingBehavior_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StackingBehavior_internal_data_[];
inline constexpr StackingBehavior StackingBehavior_MIN =
    static_cast<StackingBehavior>(0);
inline constexpr StackingBehavior StackingBehavior_MAX =
    static_cast<StackingBehavior>(5);
inline bool StackingBehavior_IsValid(int value) {
  return 0 <= value && value <= 5;
}
inline constexpr int StackingBehavior_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StackingBehavior_descriptor();
template <typename T>
const ::std::string& StackingBehavior_Name(T value) {
  static_assert(::std::is_same<T, StackingBehavior>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to StackingBehavior_Name().");
  return StackingBehavior_Name(static_cast<StackingBehavior>(value));
}
template <>
inline const ::std::string& StackingBehavior_Name(StackingBehavior value) {
  return ::google::protobuf::internal::NameOfDenseEnum<StackingBehavior_descriptor, 0, 5>(
      static_cast<int>(value));
}
inline bool StackingBehavior_Parse(
    ::absl::string_view name, StackingBehavior* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StackingBehavior>(StackingBehavior_descriptor(), name,
                                           value);
}
enum EffectOperation : int {
  EFFECT_OPERATION_UNSPECIFIED = 0,
  EFFECT_OPERATION_ADD = 1,
  EFFECT_OPERATION_SUBTRACT = 2,
  EFFECT_OPERATION_MULTIPLY = 3,
  EFFECT_OPERATION_DIVIDE = 4,
  EFFECT_OPERATION_SET = 5,
  EFFECT_OPERATION_DISABLE = 6,
  EFFECT_OPERATION_ENABLE = 7,
  EffectOperation_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  EffectOperation_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t EffectOperation_internal_data_[];
inline constexpr EffectOperation EffectOperation_MIN =
    static_cast<EffectOperation>(0);
inline constexpr EffectOperation EffectOperation_MAX =
    static_cast<EffectOperation>(7);
inline bool EffectOperation_IsValid(int value) {
  return 0 <= value && value <= 7;
}
inline constexpr int EffectOperation_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EffectOperation_descriptor();
template <typename T>
const ::std::string& EffectOperation_Name(T value) {
  static_assert(::std::is_same<T, EffectOperation>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to EffectOperation_Name().");
  return EffectOperation_Name(static_cast<EffectOperation>(value));
}
template <>
inline const ::std::string& EffectOperation_Name(EffectOperation value) {
  return ::google::protobuf::internal::NameOfDenseEnum<EffectOperation_descriptor, 0, 7>(
      static_cast<int>(value));
}
inline bool EffectOperation_Parse(
    ::absl::string_view name, EffectOperation* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<EffectOperation>(EffectOperation_descriptor(), name,
                                           value);
}
enum RemovalReason : int {
  REMOVAL_REASON_UNSPECIFIED = 0,
  REMOVAL_REASON_EXPIRED = 1,
  REMOVAL_REASON_DISPELLED = 2,
  REMOVAL_REASON_CURED = 3,
  REMOVAL_REASON_OVERRIDDEN = 4,
  REMOVAL_REASON_DEATH = 5,
  REMOVAL_REASON_MANUAL = 6,
  RemovalReason_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  RemovalReason_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t RemovalReason_internal_data_[];
inline constexpr RemovalReason RemovalReason_MIN =
    static_cast<RemovalReason>(0);
inline constexpr RemovalReason RemovalReason_MAX =
    static_cast<RemovalReason>(6);
inline bool RemovalReason_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int RemovalReason_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RemovalReason_descriptor();
template <typename T>
const ::std::string& RemovalReason_Name(T value) {
  static_assert(::std::is_same<T, RemovalReason>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to RemovalReason_Name().");
  return RemovalReason_Name(static_cast<RemovalReason>(value));
}
template <>
inline const ::std::string& RemovalReason_Name(RemovalReason value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RemovalReason_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool RemovalReason_Parse(
    ::absl::string_view name, RemovalReason* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<RemovalReason>(RemovalReason_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class RemoveConditionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RemoveConditionRequest) */ {
 public:
  inline RemoveConditionRequest() : RemoveConditionRequest(nullptr) {}
  ~RemoveConditionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveConditionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveConditionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveConditionRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveConditionRequest(const RemoveConditionRequest& from) : RemoveConditionRequest(nullptr, from) {}
  inline RemoveConditionRequest(RemoveConditionRequest&& from) noexcept
      : RemoveConditionRequest(nullptr, ::std::move(from)) {}
  inline RemoveConditionRequest& operator=(const RemoveConditionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveConditionRequest& operator=(RemoveConditionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveConditionRequest& default_instance() {
    return *reinterpret_cast<const RemoveConditionRequest*>(
        &_RemoveConditionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(RemoveConditionRequest& a, RemoveConditionRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveConditionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveConditionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveConditionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveConditionRequest& from) { RemoveConditionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveConditionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RemoveConditionRequest"; }

 protected:
  explicit RemoveConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoveConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoveConditionRequest& from);
  RemoveConditionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoveConditionRequest&& from) noexcept
      : RemoveConditionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionIdFieldNumber = 1,
    kTargetEntityIdFieldNumber = 2,
    kConditionTypeFieldNumber = 3,
    kReasonFieldNumber = 4,
  };
  // string condition_id = 1 [json_name = "conditionId"];
  void clear_condition_id() ;
  const ::std::string& condition_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_id();
  void set_allocated_condition_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_id();

  public:
  // string target_entity_id = 2 [json_name = "targetEntityId"];
  void clear_target_entity_id() ;
  const ::std::string& target_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_target_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_target_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_target_entity_id();
  void set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_target_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_target_entity_id();

  public:
  // string condition_type = 3 [json_name = "conditionType"];
  void clear_condition_type() ;
  const ::std::string& condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_type();
  void set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_type();

  public:
  // .seshat.RemovalReason reason = 4 [json_name = "reason"];
  void clear_reason() ;
  ::seshat::RemovalReason reason() const;
  void set_reason(::seshat::RemovalReason value);

  private:
  ::seshat::RemovalReason _internal_reason() const;
  void _internal_set_reason(::seshat::RemovalReason value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.RemoveConditionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 80,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoveConditionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr condition_id_;
    ::google::protobuf::internal::ArenaStringPtr target_entity_id_;
    ::google::protobuf::internal::ArenaStringPtr condition_type_;
    int reason_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoveConditionRequest_class_data_;
// -------------------------------------------------------------------

class ProcessConditionTickRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ProcessConditionTickRequest) */ {
 public:
  inline ProcessConditionTickRequest() : ProcessConditionTickRequest(nullptr) {}
  ~ProcessConditionTickRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProcessConditionTickRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProcessConditionTickRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcessConditionTickRequest(::google::protobuf::internal::ConstantInitialized);

  inline ProcessConditionTickRequest(const ProcessConditionTickRequest& from) : ProcessConditionTickRequest(nullptr, from) {}
  inline ProcessConditionTickRequest(ProcessConditionTickRequest&& from) noexcept
      : ProcessConditionTickRequest(nullptr, ::std::move(from)) {}
  inline ProcessConditionTickRequest& operator=(const ProcessConditionTickRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessConditionTickRequest& operator=(ProcessConditionTickRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcessConditionTickRequest& default_instance() {
    return *reinterpret_cast<const ProcessConditionTickRequest*>(
        &_ProcessConditionTickRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(ProcessConditionTickRequest& a, ProcessConditionTickRequest& b) { a.Swap(&b); }
  inline void Swap(ProcessConditionTickRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessConditionTickRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcessConditionTickRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProcessConditionTickRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcessConditionTickRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProcessConditionTickRequest& from) { ProcessConditionTickRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProcessConditionTickRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ProcessConditionTickRequest"; }

 protected:
  explicit ProcessConditionTickRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProcessConditionTickRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProcessConditionTickRequest& from);
  ProcessConditionTickRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProcessConditionTickRequest&& from) noexcept
      : ProcessConditionTickRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kTriggerFieldNumber = 2,
    kCurrentTimestampFieldNumber = 3,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string trigger = 2 [json_name = "trigger"];
  void clear_trigger() ;
  const ::std::string& trigger() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_trigger(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_trigger();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_trigger();
  void set_allocated_trigger(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_trigger() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_trigger(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_trigger();

  public:
  // int64 current_timestamp = 3 [json_name = "currentTimestamp"];
  void clear_current_timestamp() ;
  ::int64_t current_timestamp() const;
  void set_current_timestamp(::int64_t value);

  private:
  ::int64_t _internal_current_timestamp() const;
  void _internal_set_current_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ProcessConditionTickRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProcessConditionTickRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr trigger_;
    ::int64_t current_timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProcessConditionTickRequest_class_data_;
// -------------------------------------------------------------------

class HasConditionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.HasConditionRequest) */ {
 public:
  inline HasConditionRequest() : HasConditionRequest(nullptr) {}
  ~HasConditionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HasConditionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HasConditionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HasConditionRequest(::google::protobuf::internal::ConstantInitialized);

  inline HasConditionRequest(const HasConditionRequest& from) : HasConditionRequest(nullptr, from) {}
  inline HasConditionRequest(HasConditionRequest&& from) noexcept
      : HasConditionRequest(nullptr, ::std::move(from)) {}
  inline HasConditionRequest& operator=(const HasConditionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HasConditionRequest& operator=(HasConditionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HasConditionRequest& default_instance() {
    return *reinterpret_cast<const HasConditionRequest*>(
        &_HasConditionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(HasConditionRequest& a, HasConditionRequest& b) { a.Swap(&b); }
  inline void Swap(HasConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HasConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HasConditionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HasConditionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HasConditionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HasConditionRequest& from) { HasConditionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HasConditionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.HasConditionRequest"; }

 protected:
  explicit HasConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HasConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HasConditionRequest& from);
  HasConditionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, HasConditionRequest&& from) noexcept
      : HasConditionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kConditionTypeFieldNumber = 2,
    kActiveOnlyFieldNumber = 3,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string condition_type = 2 [json_name = "conditionType"];
  void clear_condition_type() ;
  const ::std::string& condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_type();
  void set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_type();

  public:
  // bool active_only = 3 [json_name = "activeOnly"];
  void clear_active_only() ;
  bool active_only() const;
  void set_active_only(bool value);

  private:
  bool _internal_active_only() const;
  void _internal_set_active_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.HasConditionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HasConditionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr condition_type_;
    bool active_only_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull HasConditionRequest_class_data_;
// -------------------------------------------------------------------

class GetConflictingConditionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConflictingConditionsRequest) */ {
 public:
  inline GetConflictingConditionsRequest() : GetConflictingConditionsRequest(nullptr) {}
  ~GetConflictingConditionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConflictingConditionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConflictingConditionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConflictingConditionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConflictingConditionsRequest(const GetConflictingConditionsRequest& from) : GetConflictingConditionsRequest(nullptr, from) {}
  inline GetConflictingConditionsRequest(GetConflictingConditionsRequest&& from) noexcept
      : GetConflictingConditionsRequest(nullptr, ::std::move(from)) {}
  inline GetConflictingConditionsRequest& operator=(const GetConflictingConditionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConflictingConditionsRequest& operator=(GetConflictingConditionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConflictingConditionsRequest& default_instance() {
    return *reinterpret_cast<const GetConflictingConditionsRequest*>(
        &_GetConflictingConditionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(GetConflictingConditionsRequest& a, GetConflictingConditionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetConflictingConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConflictingConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConflictingConditionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConflictingConditionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConflictingConditionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConflictingConditionsRequest& from) { GetConflictingConditionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConflictingConditionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConflictingConditionsRequest"; }

 protected:
  explicit GetConflictingConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConflictingConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConflictingConditionsRequest& from);
  GetConflictingConditionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConflictingConditionsRequest&& from) noexcept
      : GetConflictingConditionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kNewConditionTypeFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string new_condition_type = 2 [json_name = "newConditionType"];
  void clear_new_condition_type() ;
  const ::std::string& new_condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_new_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_new_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_new_condition_type();
  void set_allocated_new_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_new_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_new_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_new_condition_type();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConflictingConditionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 74,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConflictingConditionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr new_condition_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConflictingConditionsRequest_class_data_;
// -------------------------------------------------------------------

class GetConditionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionsRequest) */ {
 public:
  inline GetConditionsRequest() : GetConditionsRequest(nullptr) {}
  ~GetConditionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionsRequest(const GetConditionsRequest& from) : GetConditionsRequest(nullptr, from) {}
  inline GetConditionsRequest(GetConditionsRequest&& from) noexcept
      : GetConditionsRequest(nullptr, ::std::move(from)) {}
  inline GetConditionsRequest& operator=(const GetConditionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionsRequest& operator=(GetConditionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionsRequest& default_instance() {
    return *reinterpret_cast<const GetConditionsRequest*>(
        &_GetConditionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(GetConditionsRequest& a, GetConditionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionsRequest& from) { GetConditionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionsRequest"; }

 protected:
  explicit GetConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionsRequest& from);
  GetConditionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionsRequest&& from) noexcept
      : GetConditionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionTypesFieldNumber = 3,
    kEntityIdFieldNumber = 1,
    kActiveOnlyFieldNumber = 2,
  };
  // repeated string condition_types = 3 [json_name = "conditionTypes"];
  int condition_types_size() const;
  private:
  int _internal_condition_types_size() const;

  public:
  void clear_condition_types() ;
  const ::std::string& condition_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_condition_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_condition_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_condition_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& condition_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_condition_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_condition_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_condition_types();

  public:
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // bool active_only = 2 [json_name = "activeOnly"];
  void clear_active_only() ;
  bool active_only() const;
  void set_active_only(bool value);

  private:
  bool _internal_active_only() const;
  void _internal_set_active_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> condition_types_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    bool active_only_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionsRequest_class_data_;
// -------------------------------------------------------------------

class GetConditionsByTypeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionsByTypeRequest) */ {
 public:
  inline GetConditionsByTypeRequest() : GetConditionsByTypeRequest(nullptr) {}
  ~GetConditionsByTypeRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionsByTypeRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionsByTypeRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionsByTypeRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionsByTypeRequest(const GetConditionsByTypeRequest& from) : GetConditionsByTypeRequest(nullptr, from) {}
  inline GetConditionsByTypeRequest(GetConditionsByTypeRequest&& from) noexcept
      : GetConditionsByTypeRequest(nullptr, ::std::move(from)) {}
  inline GetConditionsByTypeRequest& operator=(const GetConditionsByTypeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionsByTypeRequest& operator=(GetConditionsByTypeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionsByTypeRequest& default_instance() {
    return *reinterpret_cast<const GetConditionsByTypeRequest*>(
        &_GetConditionsByTypeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(GetConditionsByTypeRequest& a, GetConditionsByTypeRequest& b) { a.Swap(&b); }
  inline void Swap(GetConditionsByTypeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionsByTypeRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionsByTypeRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionsByTypeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionsByTypeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionsByTypeRequest& from) { GetConditionsByTypeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionsByTypeRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionsByTypeRequest"; }

 protected:
  explicit GetConditionsByTypeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionsByTypeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionsByTypeRequest& from);
  GetConditionsByTypeRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionsByTypeRequest&& from) noexcept
      : GetConditionsByTypeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionTypeFieldNumber = 1,
    kActiveOnlyFieldNumber = 2,
    kLimitFieldNumber = 3,
  };
  // string condition_type = 1 [json_name = "conditionType"];
  void clear_condition_type() ;
  const ::std::string& condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_type();
  void set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_type();

  public:
  // bool active_only = 2 [json_name = "activeOnly"];
  void clear_active_only() ;
  bool active_only() const;
  void set_active_only(bool value);

  private:
  bool _internal_active_only() const;
  void _internal_set_active_only(bool value);

  public:
  // int32 limit = 3 [json_name = "limit"];
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionsByTypeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionsByTypeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr condition_type_;
    bool active_only_;
    ::int32_t limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionsByTypeRequest_class_data_;
// -------------------------------------------------------------------

class GetConditionTemplatesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionTemplatesRequest) */ {
 public:
  inline GetConditionTemplatesRequest() : GetConditionTemplatesRequest(nullptr) {}
  ~GetConditionTemplatesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionTemplatesRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionTemplatesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionTemplatesRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionTemplatesRequest(const GetConditionTemplatesRequest& from) : GetConditionTemplatesRequest(nullptr, from) {}
  inline GetConditionTemplatesRequest(GetConditionTemplatesRequest&& from) noexcept
      : GetConditionTemplatesRequest(nullptr, ::std::move(from)) {}
  inline GetConditionTemplatesRequest& operator=(const GetConditionTemplatesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionTemplatesRequest& operator=(GetConditionTemplatesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionTemplatesRequest& default_instance() {
    return *reinterpret_cast<const GetConditionTemplatesRequest*>(
        &_GetConditionTemplatesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(GetConditionTemplatesRequest& a, GetConditionTemplatesRequest& b) { a.Swap(&b); }
  inline void Swap(GetConditionTemplatesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionTemplatesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionTemplatesRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionTemplatesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionTemplatesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionTemplatesRequest& from) { GetConditionTemplatesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionTemplatesRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionTemplatesRequest"; }

 protected:
  explicit GetConditionTemplatesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionTemplatesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionTemplatesRequest& from);
  GetConditionTemplatesRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionTemplatesRequest&& from) noexcept
      : GetConditionTemplatesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCategoryFieldNumber = 1,
    kSystemFieldNumber = 2,
  };
  // string category = 1 [json_name = "category"];
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // string system = 2 [json_name = "system"];
  void clear_system() ;
  const ::std::string& system() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_system(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_system();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_system();
  void set_allocated_system(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_system() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_system(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_system();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionTemplatesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionTemplatesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::google::protobuf::internal::ArenaStringPtr system_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionTemplatesRequest_class_data_;
// -------------------------------------------------------------------

class GetConditionHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionHistoryRequest) */ {
 public:
  inline GetConditionHistoryRequest() : GetConditionHistoryRequest(nullptr) {}
  ~GetConditionHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionHistoryRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionHistoryRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionHistoryRequest(const GetConditionHistoryRequest& from) : GetConditionHistoryRequest(nullptr, from) {}
  inline GetConditionHistoryRequest(GetConditionHistoryRequest&& from) noexcept
      : GetConditionHistoryRequest(nullptr, ::std::move(from)) {}
  inline GetConditionHistoryRequest& operator=(const GetConditionHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionHistoryRequest& operator=(GetConditionHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionHistoryRequest& default_instance() {
    return *reinterpret_cast<const GetConditionHistoryRequest*>(
        &_GetConditionHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(GetConditionHistoryRequest& a, GetConditionHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(GetConditionHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionHistoryRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionHistoryRequest& from) { GetConditionHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionHistoryRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionHistoryRequest"; }

 protected:
  explicit GetConditionHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionHistoryRequest& from);
  GetConditionHistoryRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionHistoryRequest&& from) noexcept
      : GetConditionHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionTypesFieldNumber = 4,
    kEntityIdFieldNumber = 1,
    kSinceTimestampFieldNumber = 3,
    kLimitFieldNumber = 2,
  };
  // repeated string condition_types = 4 [json_name = "conditionTypes"];
  int condition_types_size() const;
  private:
  int _internal_condition_types_size() const;

  public:
  void clear_condition_types() ;
  const ::std::string& condition_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_condition_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_condition_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_condition_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& condition_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_condition_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_condition_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_condition_types();

  public:
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
  void clear_since_timestamp() ;
  ::int64_t since_timestamp() const;
  void set_since_timestamp(::int64_t value);

  private:
  ::int64_t _internal_since_timestamp() const;
  void _internal_set_since_timestamp(::int64_t value);

  public:
  // int32 limit = 2 [json_name = "limit"];
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionHistoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> condition_types_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::int64_t since_timestamp_;
    ::int32_t limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionHistoryRequest_class_data_;
// -------------------------------------------------------------------

class GetActiveConditionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetActiveConditionsRequest) */ {
 public:
  inline GetActiveConditionsRequest() : GetActiveConditionsRequest(nullptr) {}
  ~GetActiveConditionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetActiveConditionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetActiveConditionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveConditionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveConditionsRequest(const GetActiveConditionsRequest& from) : GetActiveConditionsRequest(nullptr, from) {}
  inline GetActiveConditionsRequest(GetActiveConditionsRequest&& from) noexcept
      : GetActiveConditionsRequest(nullptr, ::std::move(from)) {}
  inline GetActiveConditionsRequest& operator=(const GetActiveConditionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveConditionsRequest& operator=(GetActiveConditionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveConditionsRequest& default_instance() {
    return *reinterpret_cast<const GetActiveConditionsRequest*>(
        &_GetActiveConditionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(GetActiveConditionsRequest& a, GetActiveConditionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetActiveConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveConditionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveConditionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetActiveConditionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActiveConditionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetActiveConditionsRequest& from) { GetActiveConditionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetActiveConditionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetActiveConditionsRequest"; }

 protected:
  explicit GetActiveConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetActiveConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetActiveConditionsRequest& from);
  GetActiveConditionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetActiveConditionsRequest&& from) noexcept
      : GetActiveConditionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdsFieldNumber = 1,
    kAsOfTimestampFieldNumber = 2,
  };
  // repeated string entity_ids = 1 [json_name = "entityIds"];
  int entity_ids_size() const;
  private:
  int _internal_entity_ids_size() const;

  public:
  void clear_entity_ids() ;
  const ::std::string& entity_ids(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_ids(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_ids(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_ids();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_ids();

  public:
  // int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
  void clear_as_of_timestamp() ;
  ::int64_t as_of_timestamp() const;
  void set_as_of_timestamp(::int64_t value);

  private:
  ::int64_t _internal_as_of_timestamp() const;
  void _internal_set_as_of_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetActiveConditionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetActiveConditionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_ids_;
    ::int64_t as_of_timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsRequest_class_data_;
// -------------------------------------------------------------------

class ConflictResolution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConflictResolution) */ {
 public:
  inline ConflictResolution() : ConflictResolution(nullptr) {}
  ~ConflictResolution() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConflictResolution* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConflictResolution));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConflictResolution(::google::protobuf::internal::ConstantInitialized);

  inline ConflictResolution(const ConflictResolution& from) : ConflictResolution(nullptr, from) {}
  inline ConflictResolution(ConflictResolution&& from) noexcept
      : ConflictResolution(nullptr, ::std::move(from)) {}
  inline ConflictResolution& operator=(const ConflictResolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConflictResolution& operator=(ConflictResolution&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConflictResolution& default_instance() {
    return *reinterpret_cast<const ConflictResolution*>(
        &_ConflictResolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ConflictResolution& a, ConflictResolution& b) { a.Swap(&b); }
  inline void Swap(ConflictResolution* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConflictResolution* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConflictResolution* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConflictResolution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConflictResolution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConflictResolution& from) { ConflictResolution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConflictResolution* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConflictResolution"; }

 protected:
  explicit ConflictResolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConflictResolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConflictResolution& from);
  ConflictResolution(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConflictResolution&& from) noexcept
      : ConflictResolution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAffectedConditionIdsFieldNumber = 3,
    kConflictTypeFieldNumber = 1,
    kActionFieldNumber = 2,
    kReasonFieldNumber = 4,
  };
  // repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
  int affected_condition_ids_size() const;
  private:
  int _internal_affected_condition_ids_size() const;

  public:
  void clear_affected_condition_ids() ;
  const ::std::string& affected_condition_ids(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_affected_condition_ids(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_affected_condition_ids(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_affected_condition_ids();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_affected_condition_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& affected_condition_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_affected_condition_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_affected_condition_ids() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_affected_condition_ids();

  public:
  // string conflict_type = 1 [json_name = "conflictType"];
  void clear_conflict_type() ;
  const ::std::string& conflict_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_conflict_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_conflict_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_conflict_type();
  void set_allocated_conflict_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_conflict_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_conflict_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_conflict_type();

  public:
  // string action = 2 [json_name = "action"];
  void clear_action() ;
  const ::std::string& action() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_action();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_action();
  void set_allocated_action(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_action() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_action(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_action();

  public:
  // string reason = 4 [json_name = "reason"];
  void clear_reason() ;
  const ::std::string& reason() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reason();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reason();
  void set_allocated_reason(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reason(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reason();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConflictResolution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 81,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConflictResolution& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> affected_condition_ids_;
    ::google::protobuf::internal::ArenaStringPtr conflict_type_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConflictResolution_class_data_;
// -------------------------------------------------------------------

class ConditionTemplate_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConditionTemplate_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionTemplate_PropertiesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ConditionTemplate_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ConditionTemplate_PropertiesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 57,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ConditionTemplate_PropertiesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ConditionParameters_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConditionParameters_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionParameters_PropertiesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ConditionParameters_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ConditionParameters_PropertiesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 59,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ConditionParameters_PropertiesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ConditionHistoryEntry_DetailsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConditionHistoryEntry_DetailsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ConditionHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ConditionHistoryEntry_DetailsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 58,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ConditionEffect_ParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConditionEffect_ParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionEffect_ParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ConditionEffect_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ConditionEffect_ParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 55,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ConditionEffect_ParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class ConditionDuration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConditionDuration) */ {
 public:
  inline ConditionDuration() : ConditionDuration(nullptr) {}
  ~ConditionDuration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConditionDuration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConditionDuration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionDuration(::google::protobuf::internal::ConstantInitialized);

  inline ConditionDuration(const ConditionDuration& from) : ConditionDuration(nullptr, from) {}
  inline ConditionDuration(ConditionDuration&& from) noexcept
      : ConditionDuration(nullptr, ::std::move(from)) {}
  inline ConditionDuration& operator=(const ConditionDuration& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConditionDuration& operator=(ConditionDuration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConditionDuration& default_instance() {
    return *reinterpret_cast<const ConditionDuration*>(
        &_ConditionDuration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ConditionDuration& a, ConditionDuration& b) { a.Swap(&b); }
  inline void Swap(ConditionDuration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConditionDuration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConditionDuration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConditionDuration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConditionDuration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConditionDuration& from) { ConditionDuration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConditionDuration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConditionDuration"; }

 protected:
  explicit ConditionDuration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConditionDuration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConditionDuration& from);
  ConditionDuration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConditionDuration&& from) noexcept
      : ConditionDuration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTriggerFieldNumber = 3,
    kTypeFieldNumber = 1,
    kValueFieldNumber = 2,
    kPermanentFieldNumber = 4,
  };
  // string trigger = 3 [json_name = "trigger"];
  void clear_trigger() ;
  const ::std::string& trigger() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_trigger(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_trigger();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_trigger();
  void set_allocated_trigger(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_trigger() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_trigger(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_trigger();

  public:
  // .seshat.DurationType type = 1 [json_name = "type"];
  void clear_type() ;
  ::seshat::DurationType type() const;
  void set_type(::seshat::DurationType value);

  private:
  ::seshat::DurationType _internal_type() const;
  void _internal_set_type(::seshat::DurationType value);

  public:
  // int32 value = 2 [json_name = "value"];
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // bool permanent = 4 [json_name = "permanent"];
  void clear_permanent() ;
  bool permanent() const;
  void set_permanent(bool value);

  private:
  bool _internal_permanent() const;
  void _internal_set_permanent(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConditionDuration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 40,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConditionDuration& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr trigger_;
    int type_;
    ::int32_t value_;
    bool permanent_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConditionDuration_class_data_;
// -------------------------------------------------------------------

class Condition_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Condition_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Condition_PropertiesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit Condition_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_Condition_PropertiesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 49,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull Condition_PropertiesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class CheckImmunityRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CheckImmunityRequest) */ {
 public:
  inline CheckImmunityRequest() : CheckImmunityRequest(nullptr) {}
  ~CheckImmunityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CheckImmunityRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CheckImmunityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckImmunityRequest(::google::protobuf::internal::ConstantInitialized);

  inline CheckImmunityRequest(const CheckImmunityRequest& from) : CheckImmunityRequest(nullptr, from) {}
  inline CheckImmunityRequest(CheckImmunityRequest&& from) noexcept
      : CheckImmunityRequest(nullptr, ::std::move(from)) {}
  inline CheckImmunityRequest& operator=(const CheckImmunityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckImmunityRequest& operator=(CheckImmunityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckImmunityRequest& default_instance() {
    return *reinterpret_cast<const CheckImmunityRequest*>(
        &_CheckImmunityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(CheckImmunityRequest& a, CheckImmunityRequest& b) { a.Swap(&b); }
  inline void Swap(CheckImmunityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckImmunityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckImmunityRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CheckImmunityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckImmunityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckImmunityRequest& from) { CheckImmunityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CheckImmunityRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CheckImmunityRequest"; }

 protected:
  explicit CheckImmunityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CheckImmunityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CheckImmunityRequest& from);
  CheckImmunityRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CheckImmunityRequest&& from) noexcept
      : CheckImmunityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kConditionTypeFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string condition_type = 2 [json_name = "conditionType"];
  void clear_condition_type() ;
  const ::std::string& condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_type();
  void set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_type();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CheckImmunityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 59,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CheckImmunityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr condition_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CheckImmunityRequest_class_data_;
// -------------------------------------------------------------------

class ResolveConflictsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ResolveConflictsRequest) */ {
 public:
  inline ResolveConflictsRequest() : ResolveConflictsRequest(nullptr) {}
  ~ResolveConflictsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResolveConflictsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResolveConflictsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveConflictsRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResolveConflictsRequest(const ResolveConflictsRequest& from) : ResolveConflictsRequest(nullptr, from) {}
  inline ResolveConflictsRequest(ResolveConflictsRequest&& from) noexcept
      : ResolveConflictsRequest(nullptr, ::std::move(from)) {}
  inline ResolveConflictsRequest& operator=(const ResolveConflictsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveConflictsRequest& operator=(ResolveConflictsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveConflictsRequest& default_instance() {
    return *reinterpret_cast<const ResolveConflictsRequest*>(
        &_ResolveConflictsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ResolveConflictsRequest& a, ResolveConflictsRequest& b) { a.Swap(&b); }
  inline void Swap(ResolveConflictsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveConflictsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveConflictsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResolveConflictsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveConflictsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveConflictsRequest& from) { ResolveConflictsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResolveConflictsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ResolveConflictsRequest"; }

 protected:
  explicit ResolveConflictsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResolveConflictsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResolveConflictsRequest& from);
  ResolveConflictsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResolveConflictsRequest&& from) noexcept
      : ResolveConflictsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResolutionsFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
  int resolutions_size() const;
  private:
  int _internal_resolutions_size() const;

  public:
  void clear_resolutions() ;
  ::seshat::ConflictResolution* PROTOBUF_NONNULL mutable_resolutions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL mutable_resolutions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& _internal_resolutions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL _internal_mutable_resolutions();
  public:
  const ::seshat::ConflictResolution& resolutions(int index) const;
  ::seshat::ConflictResolution* PROTOBUF_NONNULL add_resolutions();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& resolutions() const;
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ResolveConflictsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 48,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResolveConflictsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConflictResolution > resolutions_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResolveConflictsRequest_class_data_;
// -------------------------------------------------------------------

class ConditionEffect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConditionEffect) */ {
 public:
  inline ConditionEffect() : ConditionEffect(nullptr) {}
  ~ConditionEffect() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConditionEffect* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConditionEffect));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionEffect(::google::protobuf::internal::ConstantInitialized);

  inline ConditionEffect(const ConditionEffect& from) : ConditionEffect(nullptr, from) {}
  inline ConditionEffect(ConditionEffect&& from) noexcept
      : ConditionEffect(nullptr, ::std::move(from)) {}
  inline ConditionEffect& operator=(const ConditionEffect& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConditionEffect& operator=(ConditionEffect&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConditionEffect& default_instance() {
    return *reinterpret_cast<const ConditionEffect*>(
        &_ConditionEffect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ConditionEffect& a, ConditionEffect& b) { a.Swap(&b); }
  inline void Swap(ConditionEffect* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConditionEffect* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConditionEffect* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConditionEffect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConditionEffect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConditionEffect& from) { ConditionEffect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConditionEffect* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConditionEffect"; }

 protected:
  explicit ConditionEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConditionEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConditionEffect& from);
  ConditionEffect(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConditionEffect&& from) noexcept
      : ConditionEffect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParametersFieldNumber = 6,
    kTypeFieldNumber = 1,
    kTargetFieldNumber = 2,
    kDescriptionFieldNumber = 5,
    kOperationFieldNumber = 3,
    kValueFieldNumber = 4,
  };
  // map<string, string> parameters = 6 [json_name = "parameters"];
  int parameters_size() const;
  private:
  int _internal_parameters_size() const;

  public:
  void clear_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // string type = 1 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // string target = 2 [json_name = "target"];
  void clear_target() ;
  const ::std::string& target() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_target(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_target();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_target();
  void set_allocated_target(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_target() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_target();

  public:
  // string description = 5 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // .seshat.EffectOperation operation = 3 [json_name = "operation"];
  void clear_operation() ;
  ::seshat::EffectOperation operation() const;
  void set_operation(::seshat::EffectOperation value);

  private:
  ::seshat::EffectOperation _internal_operation() const;
  void _internal_set_operation(::seshat::EffectOperation value);

  public:
  // int32 value = 4 [json_name = "value"];
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConditionEffect)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConditionEffect& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ConditionEffect_ParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameters_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr target_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    int operation_;
    ::int32_t value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConditionEffect_class_data_;
// -------------------------------------------------------------------

class ConditionTemplate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConditionTemplate) */ {
 public:
  inline ConditionTemplate() : ConditionTemplate(nullptr) {}
  ~ConditionTemplate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConditionTemplate* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConditionTemplate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionTemplate(::google::protobuf::internal::ConstantInitialized);

  inline ConditionTemplate(const ConditionTemplate& from) : ConditionTemplate(nullptr, from) {}
  inline ConditionTemplate(ConditionTemplate&& from) noexcept
      : ConditionTemplate(nullptr, ::std::move(from)) {}
  inline ConditionTemplate& operator=(const ConditionTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConditionTemplate& operator=(ConditionTemplate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConditionTemplate& default_instance() {
    return *reinterpret_cast<const ConditionTemplate*>(
        &_ConditionTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(ConditionTemplate& a, ConditionTemplate& b) { a.Swap(&b); }
  inline void Swap(ConditionTemplate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConditionTemplate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConditionTemplate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConditionTemplate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConditionTemplate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConditionTemplate& from) { ConditionTemplate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConditionTemplate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConditionTemplate"; }

 protected:
  explicit ConditionTemplate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConditionTemplate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConditionTemplate& from);
  ConditionTemplate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConditionTemplate&& from) noexcept
      : ConditionTemplate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDefaultEffectsFieldNumber = 7,
    kConflictsWithFieldNumber = 9,
    kImmunitiesFieldNumber = 10,
    kPropertiesFieldNumber = 11,
    kTypeFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCategoryFieldNumber = 4,
    kDefaultDurationFieldNumber = 6,
    kDefaultSeverityFieldNumber = 5,
    kStackingBehaviorFieldNumber = 8,
  };
  // repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
  int default_effects_size() const;
  private:
  int _internal_default_effects_size() const;

  public:
  void clear_default_effects() ;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL mutable_default_effects(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL mutable_default_effects();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& _internal_default_effects() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL _internal_mutable_default_effects();
  public:
  const ::seshat::ConditionEffect& default_effects(int index) const;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL add_default_effects();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& default_effects() const;
  // repeated string conflicts_with = 9 [json_name = "conflictsWith"];
  int conflicts_with_size() const;
  private:
  int _internal_conflicts_with_size() const;

  public:
  void clear_conflicts_with() ;
  const ::std::string& conflicts_with(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_conflicts_with(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_conflicts_with(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_conflicts_with();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_conflicts_with(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& conflicts_with() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_conflicts_with();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_conflicts_with() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_conflicts_with();

  public:
  // repeated string immunities = 10 [json_name = "immunities"];
  int immunities_size() const;
  private:
  int _internal_immunities_size() const;

  public:
  void clear_immunities() ;
  const ::std::string& immunities(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_immunities(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_immunities(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_immunities();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_immunities(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& immunities() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_immunities();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_immunities() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_immunities();

  public:
  // map<string, string> properties = 11 [json_name = "properties"];
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_properties();

  public:
  // string type = 1 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // string category = 4 [json_name = "category"];
  void clear_category() ;
  const ::std::string& category() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_category(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_category();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_category();
  void set_allocated_category(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_category() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_category(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_category();

  public:
  // .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
  bool has_default_duration() const;
  void clear_default_duration() ;
  const ::seshat::ConditionDuration& default_duration() const;
  [[nodiscard]] ::seshat::ConditionDuration* PROTOBUF_NULLABLE release_default_duration();
  ::seshat::ConditionDuration* PROTOBUF_NONNULL mutable_default_duration();
  void set_allocated_default_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_default_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  ::seshat::ConditionDuration* PROTOBUF_NULLABLE unsafe_arena_release_default_duration();

  private:
  const ::seshat::ConditionDuration& _internal_default_duration() const;
  ::seshat::ConditionDuration* PROTOBUF_NONNULL _internal_mutable_default_duration();

  public:
  // .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
  void clear_default_severity() ;
  ::seshat::ConditionSeverity default_severity() const;
  void set_default_severity(::seshat::ConditionSeverity value);

  private:
  ::seshat::ConditionSeverity _internal_default_severity() const;
  void _internal_set_default_severity(::seshat::ConditionSeverity value);

  public:
  // .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
  void clear_stacking_behavior() ;
  ::seshat::StackingBehavior stacking_behavior() const;
  void set_stacking_behavior(::seshat::StackingBehavior value);

  private:
  ::seshat::StackingBehavior _internal_stacking_behavior() const;
  void _internal_set_stacking_behavior(::seshat::StackingBehavior value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConditionTemplate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11,
                                   3, 102,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConditionTemplate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionEffect > default_effects_;
    ::google::protobuf::RepeatedPtrField<::std::string> conflicts_with_;
    ::google::protobuf::RepeatedPtrField<::std::string> immunities_;
    ::google::protobuf::internal::MapField<ConditionTemplate_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr category_;
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE default_duration_;
    int default_severity_;
    int stacking_behavior_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConditionTemplate_class_data_;
// -------------------------------------------------------------------

class ConditionParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConditionParameters) */ {
 public:
  inline ConditionParameters() : ConditionParameters(nullptr) {}
  ~ConditionParameters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConditionParameters* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConditionParameters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionParameters(::google::protobuf::internal::ConstantInitialized);

  inline ConditionParameters(const ConditionParameters& from) : ConditionParameters(nullptr, from) {}
  inline ConditionParameters(ConditionParameters&& from) noexcept
      : ConditionParameters(nullptr, ::std::move(from)) {}
  inline ConditionParameters& operator=(const ConditionParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConditionParameters& operator=(ConditionParameters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConditionParameters& default_instance() {
    return *reinterpret_cast<const ConditionParameters*>(
        &_ConditionParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ConditionParameters& a, ConditionParameters& b) { a.Swap(&b); }
  inline void Swap(ConditionParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConditionParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConditionParameters* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConditionParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConditionParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConditionParameters& from) { ConditionParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConditionParameters* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConditionParameters"; }

 protected:
  explicit ConditionParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConditionParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConditionParameters& from);
  ConditionParameters(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConditionParameters&& from) noexcept
      : ConditionParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomEffectsFieldNumber = 3,
    kPropertiesFieldNumber = 4,
    kDurationFieldNumber = 2,
    kSeverityFieldNumber = 1,
    kStackCountFieldNumber = 5,
  };
  // repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
  int custom_effects_size() const;
  private:
  int _internal_custom_effects_size() const;

  public:
  void clear_custom_effects() ;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL mutable_custom_effects(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL mutable_custom_effects();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& _internal_custom_effects() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL _internal_mutable_custom_effects();
  public:
  const ::seshat::ConditionEffect& custom_effects(int index) const;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL add_custom_effects();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& custom_effects() const;
  // map<string, string> properties = 4 [json_name = "properties"];
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_properties();

  public:
  // .seshat.ConditionDuration duration = 2 [json_name = "duration"];
  bool has_duration() const;
  void clear_duration() ;
  const ::seshat::ConditionDuration& duration() const;
  [[nodiscard]] ::seshat::ConditionDuration* PROTOBUF_NULLABLE release_duration();
  ::seshat::ConditionDuration* PROTOBUF_NONNULL mutable_duration();
  void set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  ::seshat::ConditionDuration* PROTOBUF_NULLABLE unsafe_arena_release_duration();

  private:
  const ::seshat::ConditionDuration& _internal_duration() const;
  ::seshat::ConditionDuration* PROTOBUF_NONNULL _internal_mutable_duration();

  public:
  // .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
  void clear_severity() ;
  ::seshat::ConditionSeverity severity() const;
  void set_severity(::seshat::ConditionSeverity value);

  private:
  ::seshat::ConditionSeverity _internal_severity() const;
  void _internal_set_severity(::seshat::ConditionSeverity value);

  public:
  // int32 stack_count = 5 [json_name = "stackCount"];
  void clear_stack_count() ;
  ::int32_t stack_count() const;
  void set_stack_count(::int32_t value);

  private:
  ::int32_t _internal_stack_count() const;
  void _internal_set_stack_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConditionParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   3, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConditionParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionEffect > custom_effects_;
    ::google::protobuf::internal::MapField<ConditionParameters_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE duration_;
    int severity_;
    ::int32_t stack_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConditionParameters_class_data_;
// -------------------------------------------------------------------

class Condition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.Condition) */ {
 public:
  inline Condition() : Condition(nullptr) {}
  ~Condition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Condition* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Condition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Condition(::google::protobuf::internal::ConstantInitialized);

  inline Condition(const Condition& from) : Condition(nullptr, from) {}
  inline Condition(Condition&& from) noexcept
      : Condition(nullptr, ::std::move(from)) {}
  inline Condition& operator=(const Condition& from) {
    CopyFrom(from);
    return *this;
  }
  inline Condition& operator=(Condition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Condition& default_instance() {
    return *reinterpret_cast<const Condition*>(
        &_Condition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Condition& a, Condition& b) { a.Swap(&b); }
  inline void Swap(Condition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Condition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Condition* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Condition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Condition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Condition& from) { Condition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Condition* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.Condition"; }

 protected:
  explicit Condition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  Condition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Condition& from);
  Condition(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, Condition&& from) noexcept
      : Condition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEffectsFieldNumber = 9,
    kPropertiesFieldNumber = 10,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
    kNameFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kTargetEntityIdFieldNumber = 5,
    kSourceEntityIdFieldNumber = 6,
    kDurationFieldNumber = 8,
    kSeverityFieldNumber = 7,
    kIsActiveFieldNumber = 13,
    kAppliedTimestampFieldNumber = 11,
    kExpiresTimestampFieldNumber = 12,
    kStackCountFieldNumber = 14,
    kMaxStacksFieldNumber = 15,
    kStackingBehaviorFieldNumber = 16,
  };
  // repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
  int effects_size() const;
  private:
  int _internal_effects_size() const;

  public:
  void clear_effects() ;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL mutable_effects(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL mutable_effects();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& _internal_effects() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL _internal_mutable_effects();
  public:
  const ::seshat::ConditionEffect& effects(int index) const;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL add_effects();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& effects() const;
  // map<string, string> properties = 10 [json_name = "properties"];
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_properties();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string type = 2 [json_name = "type"];
  void clear_type() ;
  const ::std::string& type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_type();
  void set_allocated_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_type();

  public:
  // string name = 3 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string description = 4 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // string target_entity_id = 5 [json_name = "targetEntityId"];
  void clear_target_entity_id() ;
  const ::std::string& target_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_target_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_target_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_target_entity_id();
  void set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_target_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_target_entity_id();

  public:
  // string source_entity_id = 6 [json_name = "sourceEntityId"];
  void clear_source_entity_id() ;
  const ::std::string& source_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source_entity_id();
  void set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source_entity_id();

  public:
  // .seshat.ConditionDuration duration = 8 [json_name = "duration"];
  bool has_duration() const;
  void clear_duration() ;
  const ::seshat::ConditionDuration& duration() const;
  [[nodiscard]] ::seshat::ConditionDuration* PROTOBUF_NULLABLE release_duration();
  ::seshat::ConditionDuration* PROTOBUF_NONNULL mutable_duration();
  void set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value);
  ::seshat::ConditionDuration* PROTOBUF_NULLABLE unsafe_arena_release_duration();

  private:
  const ::seshat::ConditionDuration& _internal_duration() const;
  ::seshat::ConditionDuration* PROTOBUF_NONNULL _internal_mutable_duration();

  public:
  // .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
  void clear_severity() ;
  ::seshat::ConditionSeverity severity() const;
  void set_severity(::seshat::ConditionSeverity value);

  private:
  ::seshat::ConditionSeverity _internal_severity() const;
  void _internal_set_severity(::seshat::ConditionSeverity value);

  public:
  // bool is_active = 13 [json_name = "isActive"];
  void clear_is_active() ;
  bool is_active() const;
  void set_is_active(bool value);

  private:
  bool _internal_is_active() const;
  void _internal_set_is_active(bool value);

  public:
  // int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
  void clear_applied_timestamp() ;
  ::int64_t applied_timestamp() const;
  void set_applied_timestamp(::int64_t value);

  private:
  ::int64_t _internal_applied_timestamp() const;
  void _internal_set_applied_timestamp(::int64_t value);

  public:
  // int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
  void clear_expires_timestamp() ;
  ::int64_t expires_timestamp() const;
  void set_expires_timestamp(::int64_t value);

  private:
  ::int64_t _internal_expires_timestamp() const;
  void _internal_set_expires_timestamp(::int64_t value);

  public:
  // int32 stack_count = 14 [json_name = "stackCount"];
  void clear_stack_count() ;
  ::int32_t stack_count() const;
  void set_stack_count(::int32_t value);

  private:
  ::int32_t _internal_stack_count() const;
  void _internal_set_stack_count(::int32_t value);

  public:
  // int32 max_stacks = 15 [json_name = "maxStacks"];
  void clear_max_stacks() ;
  ::int32_t max_stacks() const;
  void set_max_stacks(::int32_t value);

  private:
  ::int32_t _internal_max_stacks() const;
  void _internal_set_max_stacks(::int32_t value);

  public:
  // .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
  void clear_stacking_behavior() ;
  ::seshat::StackingBehavior stacking_behavior() const;
  void set_stacking_behavior(::seshat::StackingBehavior value);

  private:
  ::seshat::StackingBehavior _internal_stacking_behavior() const;
  void _internal_set_stacking_behavior(::seshat::StackingBehavior value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.Condition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16,
                                   3, 104,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const Condition& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionEffect > effects_;
    ::google::protobuf::internal::MapField<Condition_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr target_entity_id_;
    ::google::protobuf::internal::ArenaStringPtr source_entity_id_;
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE duration_;
    int severity_;
    bool is_active_;
    ::int64_t applied_timestamp_;
    ::int64_t expires_timestamp_;
    ::int32_t stack_count_;
    ::int32_t max_stacks_;
    int stacking_behavior_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull Condition_class_data_;
// -------------------------------------------------------------------

class UpdateConditionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UpdateConditionResponse) */ {
 public:
  inline UpdateConditionResponse() : UpdateConditionResponse(nullptr) {}
  ~UpdateConditionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateConditionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateConditionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateConditionResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpdateConditionResponse(const UpdateConditionResponse& from) : UpdateConditionResponse(nullptr, from) {}
  inline UpdateConditionResponse(UpdateConditionResponse&& from) noexcept
      : UpdateConditionResponse(nullptr, ::std::move(from)) {}
  inline UpdateConditionResponse& operator=(const UpdateConditionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateConditionResponse& operator=(UpdateConditionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateConditionResponse& default_instance() {
    return *reinterpret_cast<const UpdateConditionResponse*>(
        &_UpdateConditionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(UpdateConditionResponse& a, UpdateConditionResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateConditionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateConditionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateConditionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateConditionResponse& from) { UpdateConditionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateConditionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UpdateConditionResponse"; }

 protected:
  explicit UpdateConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateConditionResponse& from);
  UpdateConditionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateConditionResponse&& from) noexcept
      : UpdateConditionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatedConditionFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
  bool has_updated_condition() const;
  void clear_updated_condition() ;
  const ::seshat::Condition& updated_condition() const;
  [[nodiscard]] ::seshat::Condition* PROTOBUF_NULLABLE release_updated_condition();
  ::seshat::Condition* PROTOBUF_NONNULL mutable_updated_condition();
  void set_allocated_updated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_updated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  ::seshat::Condition* PROTOBUF_NULLABLE unsafe_arena_release_updated_condition();

  private:
  const ::seshat::Condition& _internal_updated_condition() const;
  ::seshat::Condition* PROTOBUF_NONNULL _internal_mutable_updated_condition();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UpdateConditionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateConditionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Condition* PROTOBUF_NULLABLE updated_condition_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateConditionResponse_class_data_;
// -------------------------------------------------------------------

class UpdateConditionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UpdateConditionRequest) */ {
 public:
  inline UpdateConditionRequest() : UpdateConditionRequest(nullptr) {}
  ~UpdateConditionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateConditionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateConditionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateConditionRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateConditionRequest(const UpdateConditionRequest& from) : UpdateConditionRequest(nullptr, from) {}
  inline UpdateConditionRequest(UpdateConditionRequest&& from) noexcept
      : UpdateConditionRequest(nullptr, ::std::move(from)) {}
  inline UpdateConditionRequest& operator=(const UpdateConditionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateConditionRequest& operator=(UpdateConditionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateConditionRequest& default_instance() {
    return *reinterpret_cast<const UpdateConditionRequest*>(
        &_UpdateConditionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(UpdateConditionRequest& a, UpdateConditionRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateConditionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateConditionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateConditionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateConditionRequest& from) { UpdateConditionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateConditionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UpdateConditionRequest"; }

 protected:
  explicit UpdateConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateConditionRequest& from);
  UpdateConditionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateConditionRequest&& from) noexcept
      : UpdateConditionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionIdFieldNumber = 1,
    kUpdatesFieldNumber = 2,
  };
  // string condition_id = 1 [json_name = "conditionId"];
  void clear_condition_id() ;
  const ::std::string& condition_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_id();
  void set_allocated_condition_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_id();

  public:
  // .seshat.ConditionParameters updates = 2 [json_name = "updates"];
  bool has_updates() const;
  void clear_updates() ;
  const ::seshat::ConditionParameters& updates() const;
  [[nodiscard]] ::seshat::ConditionParameters* PROTOBUF_NULLABLE release_updates();
  ::seshat::ConditionParameters* PROTOBUF_NONNULL mutable_updates();
  void set_allocated_updates(::seshat::ConditionParameters* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_updates(::seshat::ConditionParameters* PROTOBUF_NULLABLE value);
  ::seshat::ConditionParameters* PROTOBUF_NULLABLE unsafe_arena_release_updates();

  private:
  const ::seshat::ConditionParameters& _internal_updates() const;
  ::seshat::ConditionParameters* PROTOBUF_NONNULL _internal_mutable_updates();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UpdateConditionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateConditionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr condition_id_;
    ::seshat::ConditionParameters* PROTOBUF_NULLABLE updates_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateConditionRequest_class_data_;
// -------------------------------------------------------------------

class ResolveConflictsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ResolveConflictsResponse) */ {
 public:
  inline ResolveConflictsResponse() : ResolveConflictsResponse(nullptr) {}
  ~ResolveConflictsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ResolveConflictsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ResolveConflictsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResolveConflictsResponse(::google::protobuf::internal::ConstantInitialized);

  inline ResolveConflictsResponse(const ResolveConflictsResponse& from) : ResolveConflictsResponse(nullptr, from) {}
  inline ResolveConflictsResponse(ResolveConflictsResponse&& from) noexcept
      : ResolveConflictsResponse(nullptr, ::std::move(from)) {}
  inline ResolveConflictsResponse& operator=(const ResolveConflictsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResolveConflictsResponse& operator=(ResolveConflictsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResolveConflictsResponse& default_instance() {
    return *reinterpret_cast<const ResolveConflictsResponse*>(
        &_ResolveConflictsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(ResolveConflictsResponse& a, ResolveConflictsResponse& b) { a.Swap(&b); }
  inline void Swap(ResolveConflictsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResolveConflictsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResolveConflictsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ResolveConflictsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResolveConflictsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResolveConflictsResponse& from) { ResolveConflictsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ResolveConflictsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ResolveConflictsResponse"; }

 protected:
  explicit ResolveConflictsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ResolveConflictsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ResolveConflictsResponse& from);
  ResolveConflictsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ResolveConflictsResponse&& from) noexcept
      : ResolveConflictsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemovedConditionsFieldNumber = 1,
    kModifiedConditionsFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
  int removed_conditions_size() const;
  private:
  int _internal_removed_conditions_size() const;

  public:
  void clear_removed_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_removed_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_removed_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_removed_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_removed_conditions();
  public:
  const ::seshat::Condition& removed_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_removed_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& removed_conditions() const;
  // repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
  int modified_conditions_size() const;
  private:
  int _internal_modified_conditions_size() const;

  public:
  void clear_modified_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_modified_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_modified_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_modified_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_modified_conditions();
  public:
  const ::seshat::Condition& modified_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_modified_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& modified_conditions() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ResolveConflictsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ResolveConflictsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > removed_conditions_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > modified_conditions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ResolveConflictsResponse_class_data_;
// -------------------------------------------------------------------

class RemoveConditionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RemoveConditionResponse) */ {
 public:
  inline RemoveConditionResponse() : RemoveConditionResponse(nullptr) {}
  ~RemoveConditionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveConditionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveConditionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveConditionResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveConditionResponse(const RemoveConditionResponse& from) : RemoveConditionResponse(nullptr, from) {}
  inline RemoveConditionResponse(RemoveConditionResponse&& from) noexcept
      : RemoveConditionResponse(nullptr, ::std::move(from)) {}
  inline RemoveConditionResponse& operator=(const RemoveConditionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveConditionResponse& operator=(RemoveConditionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveConditionResponse& default_instance() {
    return *reinterpret_cast<const RemoveConditionResponse*>(
        &_RemoveConditionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(RemoveConditionResponse& a, RemoveConditionResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveConditionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveConditionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveConditionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveConditionResponse& from) { RemoveConditionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveConditionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RemoveConditionResponse"; }

 protected:
  explicit RemoveConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoveConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoveConditionResponse& from);
  RemoveConditionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoveConditionResponse&& from) noexcept
      : RemoveConditionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemovedConditionFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
  bool has_removed_condition() const;
  void clear_removed_condition() ;
  const ::seshat::Condition& removed_condition() const;
  [[nodiscard]] ::seshat::Condition* PROTOBUF_NULLABLE release_removed_condition();
  ::seshat::Condition* PROTOBUF_NONNULL mutable_removed_condition();
  void set_allocated_removed_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_removed_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  ::seshat::Condition* PROTOBUF_NULLABLE unsafe_arena_release_removed_condition();

  private:
  const ::seshat::Condition& _internal_removed_condition() const;
  ::seshat::Condition* PROTOBUF_NONNULL _internal_mutable_removed_condition();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.RemoveConditionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoveConditionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Condition* PROTOBUF_NULLABLE removed_condition_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoveConditionResponse_class_data_;
// -------------------------------------------------------------------

class ProcessConditionTickResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ProcessConditionTickResponse) */ {
 public:
  inline ProcessConditionTickResponse() : ProcessConditionTickResponse(nullptr) {}
  ~ProcessConditionTickResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ProcessConditionTickResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ProcessConditionTickResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ProcessConditionTickResponse(::google::protobuf::internal::ConstantInitialized);

  inline ProcessConditionTickResponse(const ProcessConditionTickResponse& from) : ProcessConditionTickResponse(nullptr, from) {}
  inline ProcessConditionTickResponse(ProcessConditionTickResponse&& from) noexcept
      : ProcessConditionTickResponse(nullptr, ::std::move(from)) {}
  inline ProcessConditionTickResponse& operator=(const ProcessConditionTickResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessConditionTickResponse& operator=(ProcessConditionTickResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcessConditionTickResponse& default_instance() {
    return *reinterpret_cast<const ProcessConditionTickResponse*>(
        &_ProcessConditionTickResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(ProcessConditionTickResponse& a, ProcessConditionTickResponse& b) { a.Swap(&b); }
  inline void Swap(ProcessConditionTickResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessConditionTickResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcessConditionTickResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ProcessConditionTickResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcessConditionTickResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ProcessConditionTickResponse& from) { ProcessConditionTickResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ProcessConditionTickResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ProcessConditionTickResponse"; }

 protected:
  explicit ProcessConditionTickResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ProcessConditionTickResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ProcessConditionTickResponse& from);
  ProcessConditionTickResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ProcessConditionTickResponse&& from) noexcept
      : ProcessConditionTickResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpiredConditionsFieldNumber = 1,
    kTriggeredConditionsFieldNumber = 2,
    kAppliedEffectsFieldNumber = 3,
    kStatusFieldNumber = 4,
  };
  // repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
  int expired_conditions_size() const;
  private:
  int _internal_expired_conditions_size() const;

  public:
  void clear_expired_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_expired_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_expired_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_expired_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_expired_conditions();
  public:
  const ::seshat::Condition& expired_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_expired_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& expired_conditions() const;
  // repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
  int triggered_conditions_size() const;
  private:
  int _internal_triggered_conditions_size() const;

  public:
  void clear_triggered_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_triggered_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_triggered_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_triggered_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_triggered_conditions();
  public:
  const ::seshat::Condition& triggered_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_triggered_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& triggered_conditions() const;
  // repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
  int applied_effects_size() const;
  private:
  int _internal_applied_effects_size() const;

  public:
  void clear_applied_effects() ;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL mutable_applied_effects(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL mutable_applied_effects();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& _internal_applied_effects() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL _internal_mutable_applied_effects();
  public:
  const ::seshat::ConditionEffect& applied_effects(int index) const;
  ::seshat::ConditionEffect* PROTOBUF_NONNULL add_applied_effects();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& applied_effects() const;
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ProcessConditionTickResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ProcessConditionTickResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > expired_conditions_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > triggered_conditions_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionEffect > applied_effects_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ProcessConditionTickResponse_class_data_;
// -------------------------------------------------------------------

class HasConditionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.HasConditionResponse) */ {
 public:
  inline HasConditionResponse() : HasConditionResponse(nullptr) {}
  ~HasConditionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(HasConditionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(HasConditionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HasConditionResponse(::google::protobuf::internal::ConstantInitialized);

  inline HasConditionResponse(const HasConditionResponse& from) : HasConditionResponse(nullptr, from) {}
  inline HasConditionResponse(HasConditionResponse&& from) noexcept
      : HasConditionResponse(nullptr, ::std::move(from)) {}
  inline HasConditionResponse& operator=(const HasConditionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HasConditionResponse& operator=(HasConditionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HasConditionResponse& default_instance() {
    return *reinterpret_cast<const HasConditionResponse*>(
        &_HasConditionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(HasConditionResponse& a, HasConditionResponse& b) { a.Swap(&b); }
  inline void Swap(HasConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HasConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HasConditionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<HasConditionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HasConditionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HasConditionResponse& from) { HasConditionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(HasConditionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.HasConditionResponse"; }

 protected:
  explicit HasConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  HasConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const HasConditionResponse& from);
  HasConditionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, HasConditionResponse&& from) noexcept
      : HasConditionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionFieldNumber = 2,
    kStatusFieldNumber = 3,
    kHasConditionFieldNumber = 1,
  };
  // .seshat.Condition condition = 2 [json_name = "condition"];
  bool has_condition() const;
  void clear_condition() ;
  const ::seshat::Condition& condition() const;
  [[nodiscard]] ::seshat::Condition* PROTOBUF_NULLABLE release_condition();
  ::seshat::Condition* PROTOBUF_NONNULL mutable_condition();
  void set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  ::seshat::Condition* PROTOBUF_NULLABLE unsafe_arena_release_condition();

  private:
  const ::seshat::Condition& _internal_condition() const;
  ::seshat::Condition* PROTOBUF_NONNULL _internal_mutable_condition();

  public:
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // bool has_condition = 1 [json_name = "hasCondition"];
  void clear_has_condition() ;
  bool has_condition() const;
  void set_has_condition(bool value);

  private:
  bool _internal_has_condition() const;
  void _internal_set_has_condition(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.HasConditionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const HasConditionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Condition* PROTOBUF_NULLABLE condition_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    bool has_condition_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull HasConditionResponse_class_data_;
// -------------------------------------------------------------------

class GetConflictingConditionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConflictingConditionsResponse) */ {
 public:
  inline GetConflictingConditionsResponse() : GetConflictingConditionsResponse(nullptr) {}
  ~GetConflictingConditionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConflictingConditionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConflictingConditionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConflictingConditionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConflictingConditionsResponse(const GetConflictingConditionsResponse& from) : GetConflictingConditionsResponse(nullptr, from) {}
  inline GetConflictingConditionsResponse(GetConflictingConditionsResponse&& from) noexcept
      : GetConflictingConditionsResponse(nullptr, ::std::move(from)) {}
  inline GetConflictingConditionsResponse& operator=(const GetConflictingConditionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConflictingConditionsResponse& operator=(GetConflictingConditionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConflictingConditionsResponse& default_instance() {
    return *reinterpret_cast<const GetConflictingConditionsResponse*>(
        &_GetConflictingConditionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(GetConflictingConditionsResponse& a, GetConflictingConditionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetConflictingConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConflictingConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConflictingConditionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConflictingConditionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConflictingConditionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConflictingConditionsResponse& from) { GetConflictingConditionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConflictingConditionsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConflictingConditionsResponse"; }

 protected:
  explicit GetConflictingConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConflictingConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConflictingConditionsResponse& from);
  GetConflictingConditionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConflictingConditionsResponse&& from) noexcept
      : GetConflictingConditionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConflictingConditionsFieldNumber = 1,
    kSuggestedResolutionsFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
  int conflicting_conditions_size() const;
  private:
  int _internal_conflicting_conditions_size() const;

  public:
  void clear_conflicting_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_conflicting_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_conflicting_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_conflicting_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_conflicting_conditions();
  public:
  const ::seshat::Condition& conflicting_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_conflicting_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& conflicting_conditions() const;
  // repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
  int suggested_resolutions_size() const;
  private:
  int _internal_suggested_resolutions_size() const;

  public:
  void clear_suggested_resolutions() ;
  ::seshat::ConflictResolution* PROTOBUF_NONNULL mutable_suggested_resolutions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL mutable_suggested_resolutions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& _internal_suggested_resolutions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL _internal_mutable_suggested_resolutions();
  public:
  const ::seshat::ConflictResolution& suggested_resolutions(int index) const;
  ::seshat::ConflictResolution* PROTOBUF_NONNULL add_suggested_resolutions();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& suggested_resolutions() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConflictingConditionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConflictingConditionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > conflicting_conditions_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConflictResolution > suggested_resolutions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConflictingConditionsResponse_class_data_;
// -------------------------------------------------------------------

class GetConditionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionsResponse) */ {
 public:
  inline GetConditionsResponse() : GetConditionsResponse(nullptr) {}
  ~GetConditionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionsResponse(const GetConditionsResponse& from) : GetConditionsResponse(nullptr, from) {}
  inline GetConditionsResponse(GetConditionsResponse&& from) noexcept
      : GetConditionsResponse(nullptr, ::std::move(from)) {}
  inline GetConditionsResponse& operator=(const GetConditionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionsResponse& operator=(GetConditionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionsResponse& default_instance() {
    return *reinterpret_cast<const GetConditionsResponse*>(
        &_GetConditionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(GetConditionsResponse& a, GetConditionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionsResponse& from) { GetConditionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionsResponse"; }

 protected:
  explicit GetConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionsResponse& from);
  GetConditionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionsResponse&& from) noexcept
      : GetConditionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_conditions();
  public:
  const ::seshat::Condition& conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& conditions() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > conditions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionsResponse_class_data_;
// -------------------------------------------------------------------

class GetConditionsByTypeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionsByTypeResponse) */ {
 public:
  inline GetConditionsByTypeResponse() : GetConditionsByTypeResponse(nullptr) {}
  ~GetConditionsByTypeResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionsByTypeResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionsByTypeResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionsByTypeResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionsByTypeResponse(const GetConditionsByTypeResponse& from) : GetConditionsByTypeResponse(nullptr, from) {}
  inline GetConditionsByTypeResponse(GetConditionsByTypeResponse&& from) noexcept
      : GetConditionsByTypeResponse(nullptr, ::std::move(from)) {}
  inline GetConditionsByTypeResponse& operator=(const GetConditionsByTypeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionsByTypeResponse& operator=(GetConditionsByTypeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionsByTypeResponse& default_instance() {
    return *reinterpret_cast<const GetConditionsByTypeResponse*>(
        &_GetConditionsByTypeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetConditionsByTypeResponse& a, GetConditionsByTypeResponse& b) { a.Swap(&b); }
  inline void Swap(GetConditionsByTypeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionsByTypeResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionsByTypeResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionsByTypeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionsByTypeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionsByTypeResponse& from) { GetConditionsByTypeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionsByTypeResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionsByTypeResponse"; }

 protected:
  explicit GetConditionsByTypeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionsByTypeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionsByTypeResponse& from);
  GetConditionsByTypeResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionsByTypeResponse&& from) noexcept
      : GetConditionsByTypeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_conditions();
  public:
  const ::seshat::Condition& conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& conditions() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionsByTypeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionsByTypeResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > conditions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionsByTypeResponse_class_data_;
// -------------------------------------------------------------------

class GetConditionTemplatesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionTemplatesResponse) */ {
 public:
  inline GetConditionTemplatesResponse() : GetConditionTemplatesResponse(nullptr) {}
  ~GetConditionTemplatesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionTemplatesResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionTemplatesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionTemplatesResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionTemplatesResponse(const GetConditionTemplatesResponse& from) : GetConditionTemplatesResponse(nullptr, from) {}
  inline GetConditionTemplatesResponse(GetConditionTemplatesResponse&& from) noexcept
      : GetConditionTemplatesResponse(nullptr, ::std::move(from)) {}
  inline GetConditionTemplatesResponse& operator=(const GetConditionTemplatesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionTemplatesResponse& operator=(GetConditionTemplatesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionTemplatesResponse& default_instance() {
    return *reinterpret_cast<const GetConditionTemplatesResponse*>(
        &_GetConditionTemplatesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(GetConditionTemplatesResponse& a, GetConditionTemplatesResponse& b) { a.Swap(&b); }
  inline void Swap(GetConditionTemplatesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionTemplatesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionTemplatesResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionTemplatesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionTemplatesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionTemplatesResponse& from) { GetConditionTemplatesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionTemplatesResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionTemplatesResponse"; }

 protected:
  explicit GetConditionTemplatesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionTemplatesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionTemplatesResponse& from);
  GetConditionTemplatesResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionTemplatesResponse&& from) noexcept
      : GetConditionTemplatesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTemplatesFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
  int templates_size() const;
  private:
  int _internal_templates_size() const;

  public:
  void clear_templates() ;
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL mutable_templates(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>* PROTOBUF_NONNULL mutable_templates();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>& _internal_templates() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>* PROTOBUF_NONNULL _internal_mutable_templates();
  public:
  const ::seshat::ConditionTemplate& templates(int index) const;
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL add_templates();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>& templates() const;
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionTemplatesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionTemplatesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionTemplate > templates_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionTemplatesResponse_class_data_;
// -------------------------------------------------------------------

class EntityConditions final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.EntityConditions) */ {
 public:
  inline EntityConditions() : EntityConditions(nullptr) {}
  ~EntityConditions() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EntityConditions* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EntityConditions));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityConditions(::google::protobuf::internal::ConstantInitialized);

  inline EntityConditions(const EntityConditions& from) : EntityConditions(nullptr, from) {}
  inline EntityConditions(EntityConditions&& from) noexcept
      : EntityConditions(nullptr, ::std::move(from)) {}
  inline EntityConditions& operator=(const EntityConditions& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityConditions& operator=(EntityConditions&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityConditions& default_instance() {
    return *reinterpret_cast<const EntityConditions*>(
        &_EntityConditions_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(EntityConditions& a, EntityConditions& b) { a.Swap(&b); }
  inline void Swap(EntityConditions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityConditions* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityConditions* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EntityConditions>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityConditions& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityConditions& from) { EntityConditions::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EntityConditions* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.EntityConditions"; }

 protected:
  explicit EntityConditions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EntityConditions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EntityConditions& from);
  EntityConditions(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EntityConditions&& from) noexcept
      : EntityConditions(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConditionsFieldNumber = 2,
    kEntityIdFieldNumber = 1,
    kTotalConditionsFieldNumber = 3,
  };
  // repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
  int conditions_size() const;
  private:
  int _internal_conditions_size() const;

  public:
  void clear_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_conditions();
  public:
  const ::seshat::Condition& conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& conditions() const;
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // int32 total_conditions = 3 [json_name = "totalConditions"];
  void clear_total_conditions() ;
  ::int32_t total_conditions() const;
  void set_total_conditions(::int32_t value);

  private:
  ::int32_t _internal_total_conditions() const;
  void _internal_set_total_conditions(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.EntityConditions)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 41,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EntityConditions& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > conditions_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::int32_t total_conditions_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EntityConditions_class_data_;
// -------------------------------------------------------------------

class CreateConditionTemplateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateConditionTemplateResponse) */ {
 public:
  inline CreateConditionTemplateResponse() : CreateConditionTemplateResponse(nullptr) {}
  ~CreateConditionTemplateResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateConditionTemplateResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateConditionTemplateResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateConditionTemplateResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateConditionTemplateResponse(const CreateConditionTemplateResponse& from) : CreateConditionTemplateResponse(nullptr, from) {}
  inline CreateConditionTemplateResponse(CreateConditionTemplateResponse&& from) noexcept
      : CreateConditionTemplateResponse(nullptr, ::std::move(from)) {}
  inline CreateConditionTemplateResponse& operator=(const CreateConditionTemplateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConditionTemplateResponse& operator=(CreateConditionTemplateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConditionTemplateResponse& default_instance() {
    return *reinterpret_cast<const CreateConditionTemplateResponse*>(
        &_CreateConditionTemplateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(CreateConditionTemplateResponse& a, CreateConditionTemplateResponse& b) { a.Swap(&b); }
  inline void Swap(CreateConditionTemplateResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConditionTemplateResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConditionTemplateResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateConditionTemplateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateConditionTemplateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateConditionTemplateResponse& from) { CreateConditionTemplateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateConditionTemplateResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateConditionTemplateResponse"; }

 protected:
  explicit CreateConditionTemplateResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateConditionTemplateResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateConditionTemplateResponse& from);
  CreateConditionTemplateResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateConditionTemplateResponse&& from) noexcept
      : CreateConditionTemplateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedTemplateFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
  bool has_created_template() const;
  void clear_created_template() ;
  const ::seshat::ConditionTemplate& created_template() const;
  [[nodiscard]] ::seshat::ConditionTemplate* PROTOBUF_NULLABLE release_created_template();
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL mutable_created_template();
  void set_allocated_created_template(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_created_template(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value);
  ::seshat::ConditionTemplate* PROTOBUF_NULLABLE unsafe_arena_release_created_template();

  private:
  const ::seshat::ConditionTemplate& _internal_created_template() const;
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL _internal_mutable_created_template();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateConditionTemplateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateConditionTemplateResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::ConditionTemplate* PROTOBUF_NULLABLE created_template_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateConditionTemplateResponse_class_data_;
// -------------------------------------------------------------------

class CreateConditionTemplateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateConditionTemplateRequest) */ {
 public:
  inline CreateConditionTemplateRequest() : CreateConditionTemplateRequest(nullptr) {}
  ~CreateConditionTemplateRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateConditionTemplateRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateConditionTemplateRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateConditionTemplateRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateConditionTemplateRequest(const CreateConditionTemplateRequest& from) : CreateConditionTemplateRequest(nullptr, from) {}
  inline CreateConditionTemplateRequest(CreateConditionTemplateRequest&& from) noexcept
      : CreateConditionTemplateRequest(nullptr, ::std::move(from)) {}
  inline CreateConditionTemplateRequest& operator=(const CreateConditionTemplateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateConditionTemplateRequest& operator=(CreateConditionTemplateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateConditionTemplateRequest& default_instance() {
    return *reinterpret_cast<const CreateConditionTemplateRequest*>(
        &_CreateConditionTemplateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(CreateConditionTemplateRequest& a, CreateConditionTemplateRequest& b) { a.Swap(&b); }
  inline void Swap(CreateConditionTemplateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateConditionTemplateRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateConditionTemplateRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateConditionTemplateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateConditionTemplateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateConditionTemplateRequest& from) { CreateConditionTemplateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateConditionTemplateRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateConditionTemplateRequest"; }

 protected:
  explicit CreateConditionTemplateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateConditionTemplateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateConditionTemplateRequest& from);
  CreateConditionTemplateRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateConditionTemplateRequest&& from) noexcept
      : CreateConditionTemplateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTemplateFieldNumber = 1,
  };
  // .seshat.ConditionTemplate template = 1 [json_name = "template"];
  bool has_template_() const;
  void clear_template_() ;
  const ::seshat::ConditionTemplate& template_() const;
  [[nodiscard]] ::seshat::ConditionTemplate* PROTOBUF_NULLABLE release_template_();
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL mutable_template_();
  void set_allocated_template_(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_template_(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value);
  ::seshat::ConditionTemplate* PROTOBUF_NULLABLE unsafe_arena_release_template_();

  private:
  const ::seshat::ConditionTemplate& _internal_template_() const;
  ::seshat::ConditionTemplate* PROTOBUF_NONNULL _internal_mutable_template_();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateConditionTemplateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateConditionTemplateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::ConditionTemplate* PROTOBUF_NULLABLE template__;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateConditionTemplateRequest_class_data_;
// -------------------------------------------------------------------

class ConditionHistoryEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConditionHistoryEntry) */ {
 public:
  inline ConditionHistoryEntry() : ConditionHistoryEntry(nullptr) {}
  ~ConditionHistoryEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConditionHistoryEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConditionHistoryEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConditionHistoryEntry(::google::protobuf::internal::ConstantInitialized);

  inline ConditionHistoryEntry(const ConditionHistoryEntry& from) : ConditionHistoryEntry(nullptr, from) {}
  inline ConditionHistoryEntry(ConditionHistoryEntry&& from) noexcept
      : ConditionHistoryEntry(nullptr, ::std::move(from)) {}
  inline ConditionHistoryEntry& operator=(const ConditionHistoryEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConditionHistoryEntry& operator=(ConditionHistoryEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConditionHistoryEntry& default_instance() {
    return *reinterpret_cast<const ConditionHistoryEntry*>(
        &_ConditionHistoryEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(ConditionHistoryEntry& a, ConditionHistoryEntry& b) { a.Swap(&b); }
  inline void Swap(ConditionHistoryEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConditionHistoryEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConditionHistoryEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConditionHistoryEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConditionHistoryEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConditionHistoryEntry& from) { ConditionHistoryEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConditionHistoryEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConditionHistoryEntry"; }

 protected:
  explicit ConditionHistoryEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConditionHistoryEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConditionHistoryEntry& from);
  ConditionHistoryEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConditionHistoryEntry&& from) noexcept
      : ConditionHistoryEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailsFieldNumber = 6,
    kActionFieldNumber = 2,
    kReasonFieldNumber = 4,
    kSourceEntityIdFieldNumber = 5,
    kConditionFieldNumber = 1,
    kTimestampFieldNumber = 3,
  };
  // map<string, string> details = 6 [json_name = "details"];
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  const ::google::protobuf::Map<std::string, std::string>& details() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_details();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_details() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_details();

  public:
  // string action = 2 [json_name = "action"];
  void clear_action() ;
  const ::std::string& action() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_action();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_action();
  void set_allocated_action(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_action() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_action(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_action();

  public:
  // string reason = 4 [json_name = "reason"];
  void clear_reason() ;
  const ::std::string& reason() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reason();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reason();
  void set_allocated_reason(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reason(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reason();

  public:
  // string source_entity_id = 5 [json_name = "sourceEntityId"];
  void clear_source_entity_id() ;
  const ::std::string& source_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source_entity_id();
  void set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source_entity_id();

  public:
  // .seshat.Condition condition = 1 [json_name = "condition"];
  bool has_condition() const;
  void clear_condition() ;
  const ::seshat::Condition& condition() const;
  [[nodiscard]] ::seshat::Condition* PROTOBUF_NULLABLE release_condition();
  ::seshat::Condition* PROTOBUF_NONNULL mutable_condition();
  void set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  ::seshat::Condition* PROTOBUF_NULLABLE unsafe_arena_release_condition();

  private:
  const ::seshat::Condition& _internal_condition() const;
  ::seshat::Condition* PROTOBUF_NONNULL _internal_mutable_condition();

  public:
  // int64 timestamp = 3 [json_name = "timestamp"];
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConditionHistoryEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   2, 72,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConditionHistoryEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ConditionHistoryEntry_DetailsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        details_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::google::protobuf::internal::ArenaStringPtr source_entity_id_;
    ::seshat::Condition* PROTOBUF_NULLABLE condition_;
    ::int64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_class_data_;
// -------------------------------------------------------------------

class CheckImmunityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CheckImmunityResponse) */ {
 public:
  inline CheckImmunityResponse() : CheckImmunityResponse(nullptr) {}
  ~CheckImmunityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CheckImmunityResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CheckImmunityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckImmunityResponse(::google::protobuf::internal::ConstantInitialized);

  inline CheckImmunityResponse(const CheckImmunityResponse& from) : CheckImmunityResponse(nullptr, from) {}
  inline CheckImmunityResponse(CheckImmunityResponse&& from) noexcept
      : CheckImmunityResponse(nullptr, ::std::move(from)) {}
  inline CheckImmunityResponse& operator=(const CheckImmunityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckImmunityResponse& operator=(CheckImmunityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckImmunityResponse& default_instance() {
    return *reinterpret_cast<const CheckImmunityResponse*>(
        &_CheckImmunityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(CheckImmunityResponse& a, CheckImmunityResponse& b) { a.Swap(&b); }
  inline void Swap(CheckImmunityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckImmunityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckImmunityResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CheckImmunityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckImmunityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckImmunityResponse& from) { CheckImmunityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CheckImmunityResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CheckImmunityResponse"; }

 protected:
  explicit CheckImmunityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CheckImmunityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CheckImmunityResponse& from);
  CheckImmunityResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CheckImmunityResponse&& from) noexcept
      : CheckImmunityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kImmunitySourcesFieldNumber = 2,
    kStatusFieldNumber = 3,
    kIsImmuneFieldNumber = 1,
  };
  // repeated string immunity_sources = 2 [json_name = "immunitySources"];
  int immunity_sources_size() const;
  private:
  int _internal_immunity_sources_size() const;

  public:
  void clear_immunity_sources() ;
  const ::std::string& immunity_sources(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_immunity_sources(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_immunity_sources(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_immunity_sources();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_immunity_sources(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& immunity_sources() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_immunity_sources();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_immunity_sources() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_immunity_sources();

  public:
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // bool is_immune = 1 [json_name = "isImmune"];
  void clear_is_immune() ;
  bool is_immune() const;
  void set_is_immune(bool value);

  private:
  bool _internal_is_immune() const;
  void _internal_set_is_immune(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.CheckImmunityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CheckImmunityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> immunity_sources_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    bool is_immune_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CheckImmunityResponse_class_data_;
// -------------------------------------------------------------------

class ApplyConditionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ApplyConditionResponse) */ {
 public:
  inline ApplyConditionResponse() : ApplyConditionResponse(nullptr) {}
  ~ApplyConditionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApplyConditionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApplyConditionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApplyConditionResponse(::google::protobuf::internal::ConstantInitialized);

  inline ApplyConditionResponse(const ApplyConditionResponse& from) : ApplyConditionResponse(nullptr, from) {}
  inline ApplyConditionResponse(ApplyConditionResponse&& from) noexcept
      : ApplyConditionResponse(nullptr, ::std::move(from)) {}
  inline ApplyConditionResponse& operator=(const ApplyConditionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyConditionResponse& operator=(ApplyConditionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyConditionResponse& default_instance() {
    return *reinterpret_cast<const ApplyConditionResponse*>(
        &_ApplyConditionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(ApplyConditionResponse& a, ApplyConditionResponse& b) { a.Swap(&b); }
  inline void Swap(ApplyConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyConditionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyConditionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApplyConditionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ApplyConditionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ApplyConditionResponse& from) { ApplyConditionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApplyConditionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ApplyConditionResponse"; }

 protected:
  explicit ApplyConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApplyConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApplyConditionResponse& from);
  ApplyConditionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApplyConditionResponse&& from) noexcept
      : ApplyConditionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWarningsFieldNumber = 2,
    kConflictingConditionsFieldNumber = 3,
    kAppliedConditionFieldNumber = 1,
    kStatusFieldNumber = 4,
  };
  // repeated string warnings = 2 [json_name = "warnings"];
  int warnings_size() const;
  private:
  int _internal_warnings_size() const;

  public:
  void clear_warnings() ;
  const ::std::string& warnings(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_warnings(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_warnings(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_warnings();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_warnings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_warnings();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_warnings();

  public:
  // repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
  int conflicting_conditions_size() const;
  private:
  int _internal_conflicting_conditions_size() const;

  public:
  void clear_conflicting_conditions() ;
  ::seshat::Condition* PROTOBUF_NONNULL mutable_conflicting_conditions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL mutable_conflicting_conditions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& _internal_conflicting_conditions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL _internal_mutable_conflicting_conditions();
  public:
  const ::seshat::Condition& conflicting_conditions(int index) const;
  ::seshat::Condition* PROTOBUF_NONNULL add_conflicting_conditions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& conflicting_conditions() const;
  // .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
  bool has_applied_condition() const;
  void clear_applied_condition() ;
  const ::seshat::Condition& applied_condition() const;
  [[nodiscard]] ::seshat::Condition* PROTOBUF_NULLABLE release_applied_condition();
  ::seshat::Condition* PROTOBUF_NONNULL mutable_applied_condition();
  void set_allocated_applied_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_applied_condition(::seshat::Condition* PROTOBUF_NULLABLE value);
  ::seshat::Condition* PROTOBUF_NULLABLE unsafe_arena_release_applied_condition();

  private:
  const ::seshat::Condition& _internal_applied_condition() const;
  ::seshat::Condition* PROTOBUF_NONNULL _internal_mutable_applied_condition();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ApplyConditionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   3, 46,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApplyConditionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> warnings_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Condition > conflicting_conditions_;
    ::seshat::Condition* PROTOBUF_NULLABLE applied_condition_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApplyConditionResponse_class_data_;
// -------------------------------------------------------------------

class ApplyConditionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ApplyConditionRequest) */ {
 public:
  inline ApplyConditionRequest() : ApplyConditionRequest(nullptr) {}
  ~ApplyConditionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ApplyConditionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ApplyConditionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ApplyConditionRequest(::google::protobuf::internal::ConstantInitialized);

  inline ApplyConditionRequest(const ApplyConditionRequest& from) : ApplyConditionRequest(nullptr, from) {}
  inline ApplyConditionRequest(ApplyConditionRequest&& from) noexcept
      : ApplyConditionRequest(nullptr, ::std::move(from)) {}
  inline ApplyConditionRequest& operator=(const ApplyConditionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ApplyConditionRequest& operator=(ApplyConditionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ApplyConditionRequest& default_instance() {
    return *reinterpret_cast<const ApplyConditionRequest*>(
        &_ApplyConditionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ApplyConditionRequest& a, ApplyConditionRequest& b) { a.Swap(&b); }
  inline void Swap(ApplyConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ApplyConditionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ApplyConditionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ApplyConditionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ApplyConditionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ApplyConditionRequest& from) { ApplyConditionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ApplyConditionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ApplyConditionRequest"; }

 protected:
  explicit ApplyConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ApplyConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ApplyConditionRequest& from);
  ApplyConditionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ApplyConditionRequest&& from) noexcept
      : ApplyConditionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTargetEntityIdFieldNumber = 1,
    kConditionTypeFieldNumber = 2,
    kSourceEntityIdFieldNumber = 4,
    kParametersFieldNumber = 3,
    kForceApplyFieldNumber = 5,
  };
  // string target_entity_id = 1 [json_name = "targetEntityId"];
  void clear_target_entity_id() ;
  const ::std::string& target_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_target_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_target_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_target_entity_id();
  void set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_target_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_target_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_target_entity_id();

  public:
  // string condition_type = 2 [json_name = "conditionType"];
  void clear_condition_type() ;
  const ::std::string& condition_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_condition_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_condition_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_condition_type();
  void set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_condition_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_condition_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_condition_type();

  public:
  // string source_entity_id = 4 [json_name = "sourceEntityId"];
  void clear_source_entity_id() ;
  const ::std::string& source_entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_source_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_source_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_source_entity_id();
  void set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_source_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_source_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_source_entity_id();

  public:
  // .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
  bool has_parameters() const;
  void clear_parameters() ;
  const ::seshat::ConditionParameters& parameters() const;
  [[nodiscard]] ::seshat::ConditionParameters* PROTOBUF_NULLABLE release_parameters();
  ::seshat::ConditionParameters* PROTOBUF_NONNULL mutable_parameters();
  void set_allocated_parameters(::seshat::ConditionParameters* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_parameters(::seshat::ConditionParameters* PROTOBUF_NULLABLE value);
  ::seshat::ConditionParameters* PROTOBUF_NULLABLE unsafe_arena_release_parameters();

  private:
  const ::seshat::ConditionParameters& _internal_parameters() const;
  ::seshat::ConditionParameters* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // bool force_apply = 5 [json_name = "forceApply"];
  void clear_force_apply() ;
  bool force_apply() const;
  void set_force_apply(bool value);

  private:
  bool _internal_force_apply() const;
  void _internal_set_force_apply(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ApplyConditionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 83,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ApplyConditionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr target_entity_id_;
    ::google::protobuf::internal::ArenaStringPtr condition_type_;
    ::google::protobuf::internal::ArenaStringPtr source_entity_id_;
    ::seshat::ConditionParameters* PROTOBUF_NULLABLE parameters_;
    bool force_apply_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ApplyConditionRequest_class_data_;
// -------------------------------------------------------------------

class GetConditionHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetConditionHistoryResponse) */ {
 public:
  inline GetConditionHistoryResponse() : GetConditionHistoryResponse(nullptr) {}
  ~GetConditionHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetConditionHistoryResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetConditionHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetConditionHistoryResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConditionHistoryResponse(const GetConditionHistoryResponse& from) : GetConditionHistoryResponse(nullptr, from) {}
  inline GetConditionHistoryResponse(GetConditionHistoryResponse&& from) noexcept
      : GetConditionHistoryResponse(nullptr, ::std::move(from)) {}
  inline GetConditionHistoryResponse& operator=(const GetConditionHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConditionHistoryResponse& operator=(GetConditionHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConditionHistoryResponse& default_instance() {
    return *reinterpret_cast<const GetConditionHistoryResponse*>(
        &_GetConditionHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(GetConditionHistoryResponse& a, GetConditionHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(GetConditionHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConditionHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConditionHistoryResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetConditionHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConditionHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetConditionHistoryResponse& from) { GetConditionHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetConditionHistoryResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetConditionHistoryResponse"; }

 protected:
  explicit GetConditionHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetConditionHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetConditionHistoryResponse& from);
  GetConditionHistoryResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetConditionHistoryResponse&& from) noexcept
      : GetConditionHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHistoryFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
  int history_size() const;
  private:
  int _internal_history_size() const;

  public:
  void clear_history() ;
  ::seshat::ConditionHistoryEntry* PROTOBUF_NONNULL mutable_history(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>* PROTOBUF_NONNULL mutable_history();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>& _internal_history() const;
  ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>* PROTOBUF_NONNULL _internal_mutable_history();
  public:
  const ::seshat::ConditionHistoryEntry& history(int index) const;
  ::seshat::ConditionHistoryEntry* PROTOBUF_NONNULL add_history();
  const ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>& history() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetConditionHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetConditionHistoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::ConditionHistoryEntry > history_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetConditionHistoryResponse_class_data_;
// -------------------------------------------------------------------

class GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, ::google::protobuf::Message,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fconditions_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 68,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class GetActiveConditionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetActiveConditionsResponse) */ {
 public:
  inline GetActiveConditionsResponse() : GetActiveConditionsResponse(nullptr) {}
  ~GetActiveConditionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetActiveConditionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetActiveConditionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveConditionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveConditionsResponse(const GetActiveConditionsResponse& from) : GetActiveConditionsResponse(nullptr, from) {}
  inline GetActiveConditionsResponse(GetActiveConditionsResponse&& from) noexcept
      : GetActiveConditionsResponse(nullptr, ::std::move(from)) {}
  inline GetActiveConditionsResponse& operator=(const GetActiveConditionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveConditionsResponse& operator=(GetActiveConditionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveConditionsResponse& default_instance() {
    return *reinterpret_cast<const GetActiveConditionsResponse*>(
        &_GetActiveConditionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(GetActiveConditionsResponse& a, GetActiveConditionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetActiveConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveConditionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveConditionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetActiveConditionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActiveConditionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetActiveConditionsResponse& from) { GetActiveConditionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetActiveConditionsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetActiveConditionsResponse"; }

 protected:
  explicit GetActiveConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetActiveConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetActiveConditionsResponse& from);
  GetActiveConditionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetActiveConditionsResponse&& from) noexcept
      : GetActiveConditionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityConditionsFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // map<string, .seshat.EntityConditions> entity_conditions = 1 [json_name = "entityConditions"];
  int entity_conditions_size() const;
  private:
  int _internal_entity_conditions_size() const;

  public:
  void clear_entity_conditions() ;
  const ::google::protobuf::Map<std::string, ::seshat::EntityConditions>& entity_conditions() const;
  ::google::protobuf::Map<std::string, ::seshat::EntityConditions>* PROTOBUF_NONNULL mutable_entity_conditions();

  private:
  const ::google::protobuf::Map<std::string, ::seshat::EntityConditions>& _internal_entity_conditions() const;
  ::google::protobuf::Map<std::string, ::seshat::EntityConditions>* PROTOBUF_NONNULL _internal_mutable_entity_conditions();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetActiveConditionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 2,
                                   3, 60,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetActiveConditionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, std::string, ::seshat::EntityConditions,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        entity_conditions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fconditions_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Condition

// string id = 1 [json_name = "id"];
inline void Condition::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& Condition::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.id)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.id)
  return _s;
}
inline const ::std::string& Condition::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void Condition::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.id)
}

// string type = 2 [json_name = "type"];
inline void Condition::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& Condition::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.type)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.type)
  return _s;
}
inline const ::std::string& Condition::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void Condition::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.type)
}

// string name = 3 [json_name = "name"];
inline void Condition::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& Condition::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.name)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.name)
  return _s;
}
inline const ::std::string& Condition::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Condition::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.name)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.name)
}

// string description = 4 [json_name = "description"];
inline void Condition::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& Condition::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.description)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.description)
  return _s;
}
inline const ::std::string& Condition::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Condition::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.description)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.description)
}

// string target_entity_id = 5 [json_name = "targetEntityId"];
inline void Condition::clear_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::std::string& Condition::target_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.target_entity_id)
  return _internal_target_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_target_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.target_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.target_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_target_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_target_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.target_entity_id)
  return _s;
}
inline const ::std::string& Condition::_internal_target_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_entity_id_.Get();
}
inline void Condition::_internal_set_target_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.target_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.target_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.target_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.target_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.target_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_entity_id_.IsDefault()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.target_entity_id)
}

// string source_entity_id = 6 [json_name = "sourceEntityId"];
inline void Condition::clear_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::std::string& Condition::source_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.source_entity_id)
  return _internal_source_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void Condition::set_source_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.source_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.Condition.source_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL Condition::mutable_source_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.source_entity_id)
  return _s;
}
inline const ::std::string& Condition::_internal_source_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_entity_id_.Get();
}
inline void Condition::_internal_set_source_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.source_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL Condition::_internal_mutable_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.source_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE Condition::release_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.source_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.source_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void Condition::set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.source_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_entity_id_.IsDefault()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.source_entity_id)
}

// .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
inline void Condition::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::seshat::ConditionSeverity Condition::severity() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.severity)
  return _internal_severity();
}
inline void Condition::set_severity(::seshat::ConditionSeverity value) {
  _internal_set_severity(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:seshat.Condition.severity)
}
inline ::seshat::ConditionSeverity Condition::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::ConditionSeverity>(_impl_.severity_);
}
inline void Condition::_internal_set_severity(::seshat::ConditionSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// .seshat.ConditionDuration duration = 8 [json_name = "duration"];
inline bool Condition::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline void Condition::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const ::seshat::ConditionDuration& Condition::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionDuration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionDuration&>(::seshat::_ConditionDuration_default_instance_);
}
inline const ::seshat::ConditionDuration& Condition::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.duration)
  return _internal_duration();
}
inline void Condition::unsafe_arena_set_allocated_duration(
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.Condition.duration)
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE Condition::release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::seshat::ConditionDuration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE Condition::unsafe_arena_release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.Condition.duration)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::seshat::ConditionDuration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL Condition::_internal_mutable_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionDuration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(p);
  }
  return _impl_.duration_;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL Condition::mutable_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000040u;
  ::seshat::ConditionDuration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:seshat.Condition.duration)
  return _msg;
}
inline void Condition::set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.Condition.duration)
}

// repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
inline int Condition::_internal_effects_size() const {
  return _internal_effects().size();
}
inline int Condition::effects_size() const {
  return _internal_effects_size();
}
inline void Condition::clear_effects() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.effects_.Clear();
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL Condition::mutable_effects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.Condition.effects)
  return _internal_mutable_effects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL Condition::mutable_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.Condition.effects)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_effects();
}
inline const ::seshat::ConditionEffect& Condition::effects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.Condition.effects)
  return _internal_effects().Get(index);
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL Condition::add_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionEffect* _add = _internal_mutable_effects()->Add();
  // @@protoc_insertion_point(field_add:seshat.Condition.effects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& Condition::effects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.Condition.effects)
  return _internal_effects();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>&
Condition::_internal_effects() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.effects_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL
Condition::_internal_mutable_effects() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.effects_;
}

// map<string, string> properties = 10 [json_name = "properties"];
inline int Condition::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int Condition::properties_size() const {
  return _internal_properties_size();
}
inline void Condition::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Condition::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Condition::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.Condition.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Condition::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL Condition::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.Condition.properties)
  return _internal_mutable_properties();
}

// int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
inline void Condition::clear_applied_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applied_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int64_t Condition::applied_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.applied_timestamp)
  return _internal_applied_timestamp();
}
inline void Condition::set_applied_timestamp(::int64_t value) {
  _internal_set_applied_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:seshat.Condition.applied_timestamp)
}
inline ::int64_t Condition::_internal_applied_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.applied_timestamp_;
}
inline void Condition::_internal_set_applied_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applied_timestamp_ = value;
}

// int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
inline void Condition::clear_expires_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int64_t Condition::expires_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.expires_timestamp)
  return _internal_expires_timestamp();
}
inline void Condition::set_expires_timestamp(::int64_t value) {
  _internal_set_expires_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:seshat.Condition.expires_timestamp)
}
inline ::int64_t Condition::_internal_expires_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_timestamp_;
}
inline void Condition::_internal_set_expires_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_timestamp_ = value;
}

// bool is_active = 13 [json_name = "isActive"];
inline void Condition::clear_is_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool Condition::is_active() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.is_active)
  return _internal_is_active();
}
inline void Condition::set_is_active(bool value) {
  _internal_set_is_active(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:seshat.Condition.is_active)
}
inline bool Condition::_internal_is_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_active_;
}
inline void Condition::_internal_set_is_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = value;
}

// int32 stack_count = 14 [json_name = "stackCount"];
inline void Condition::clear_stack_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stack_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline ::int32_t Condition::stack_count() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.stack_count)
  return _internal_stack_count();
}
inline void Condition::set_stack_count(::int32_t value) {
  _internal_set_stack_count(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:seshat.Condition.stack_count)
}
inline ::int32_t Condition::_internal_stack_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stack_count_;
}
inline void Condition::_internal_set_stack_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stack_count_ = value;
}

// int32 max_stacks = 15 [json_name = "maxStacks"];
inline void Condition::clear_max_stacks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_stacks_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline ::int32_t Condition::max_stacks() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.max_stacks)
  return _internal_max_stacks();
}
inline void Condition::set_max_stacks(::int32_t value) {
  _internal_set_max_stacks(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:seshat.Condition.max_stacks)
}
inline ::int32_t Condition::_internal_max_stacks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_stacks_;
}
inline void Condition::_internal_set_max_stacks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_stacks_ = value;
}

// .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
inline void Condition::clear_stacking_behavior() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stacking_behavior_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline ::seshat::StackingBehavior Condition::stacking_behavior() const {
  // @@protoc_insertion_point(field_get:seshat.Condition.stacking_behavior)
  return _internal_stacking_behavior();
}
inline void Condition::set_stacking_behavior(::seshat::StackingBehavior value) {
  _internal_set_stacking_behavior(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:seshat.Condition.stacking_behavior)
}
inline ::seshat::StackingBehavior Condition::_internal_stacking_behavior() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::StackingBehavior>(_impl_.stacking_behavior_);
}
inline void Condition::_internal_set_stacking_behavior(::seshat::StackingBehavior value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stacking_behavior_ = value;
}

// -------------------------------------------------------------------

// ConditionDuration

// .seshat.DurationType type = 1 [json_name = "type"];
inline void ConditionDuration::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::seshat::DurationType ConditionDuration::type() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionDuration.type)
  return _internal_type();
}
inline void ConditionDuration::set_type(::seshat::DurationType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.ConditionDuration.type)
}
inline ::seshat::DurationType ConditionDuration::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::DurationType>(_impl_.type_);
}
inline void ConditionDuration::_internal_set_type(::seshat::DurationType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// int32 value = 2 [json_name = "value"];
inline void ConditionDuration::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ConditionDuration::value() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionDuration.value)
  return _internal_value();
}
inline void ConditionDuration::set_value(::int32_t value) {
  _internal_set_value(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.ConditionDuration.value)
}
inline ::int32_t ConditionDuration::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void ConditionDuration::_internal_set_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// string trigger = 3 [json_name = "trigger"];
inline void ConditionDuration::clear_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConditionDuration::trigger() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionDuration.trigger)
  return _internal_trigger();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionDuration::set_trigger(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.trigger_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionDuration.trigger)
}
inline ::std::string* PROTOBUF_NONNULL ConditionDuration::mutable_trigger()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_trigger();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionDuration.trigger)
  return _s;
}
inline const ::std::string& ConditionDuration::_internal_trigger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trigger_.Get();
}
inline void ConditionDuration::_internal_set_trigger(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.trigger_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionDuration::_internal_mutable_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.trigger_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionDuration::release_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionDuration.trigger)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.trigger_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.trigger_.Set("", GetArena());
  }
  return released;
}
inline void ConditionDuration::set_allocated_trigger(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.trigger_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trigger_.IsDefault()) {
    _impl_.trigger_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionDuration.trigger)
}

// bool permanent = 4 [json_name = "permanent"];
inline void ConditionDuration::clear_permanent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permanent_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool ConditionDuration::permanent() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionDuration.permanent)
  return _internal_permanent();
}
inline void ConditionDuration::set_permanent(bool value) {
  _internal_set_permanent(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.ConditionDuration.permanent)
}
inline bool ConditionDuration::_internal_permanent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permanent_;
}
inline void ConditionDuration::_internal_set_permanent(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permanent_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConditionEffect

// string type = 1 [json_name = "type"];
inline void ConditionEffect::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConditionEffect::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionEffect.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionEffect::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionEffect.type)
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionEffect.type)
  return _s;
}
inline const ::std::string& ConditionEffect::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ConditionEffect::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionEffect::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionEffect.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void ConditionEffect::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionEffect.type)
}

// string target = 2 [json_name = "target"];
inline void ConditionEffect::clear_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ConditionEffect::target() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionEffect.target)
  return _internal_target();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionEffect::set_target(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionEffect.target)
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::mutable_target()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_target();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionEffect.target)
  return _s;
}
inline const ::std::string& ConditionEffect::_internal_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_.Get();
}
inline void ConditionEffect::_internal_set_target(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::_internal_mutable_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.target_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionEffect::release_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionEffect.target)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.target_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_.Set("", GetArena());
  }
  return released;
}
inline void ConditionEffect::set_allocated_target(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.target_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_.IsDefault()) {
    _impl_.target_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionEffect.target)
}

// .seshat.EffectOperation operation = 3 [json_name = "operation"];
inline void ConditionEffect::clear_operation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::seshat::EffectOperation ConditionEffect::operation() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionEffect.operation)
  return _internal_operation();
}
inline void ConditionEffect::set_operation(::seshat::EffectOperation value) {
  _internal_set_operation(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.ConditionEffect.operation)
}
inline ::seshat::EffectOperation ConditionEffect::_internal_operation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::EffectOperation>(_impl_.operation_);
}
inline void ConditionEffect::_internal_set_operation(::seshat::EffectOperation value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operation_ = value;
}

// int32 value = 4 [json_name = "value"];
inline void ConditionEffect::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t ConditionEffect::value() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionEffect.value)
  return _internal_value();
}
inline void ConditionEffect::set_value(::int32_t value) {
  _internal_set_value(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.ConditionEffect.value)
}
inline ::int32_t ConditionEffect::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void ConditionEffect::_internal_set_value(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// string description = 5 [json_name = "description"];
inline void ConditionEffect::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ConditionEffect::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionEffect.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionEffect::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionEffect.description)
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionEffect.description)
  return _s;
}
inline const ::std::string& ConditionEffect::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ConditionEffect::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionEffect::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionEffect::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionEffect.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void ConditionEffect::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionEffect.description)
}

// map<string, string> parameters = 6 [json_name = "parameters"];
inline int ConditionEffect::_internal_parameters_size() const {
  return _internal_parameters().size();
}
inline int ConditionEffect::parameters_size() const {
  return _internal_parameters_size();
}
inline void ConditionEffect::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionEffect::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionEffect::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.ConditionEffect.parameters)
  return _internal_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionEffect::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionEffect::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.ConditionEffect.parameters)
  return _internal_mutable_parameters();
}

// -------------------------------------------------------------------

// ApplyConditionRequest

// string target_entity_id = 1 [json_name = "targetEntityId"];
inline void ApplyConditionRequest::clear_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ApplyConditionRequest::target_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionRequest.target_entity_id)
  return _internal_target_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ApplyConditionRequest::set_target_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ApplyConditionRequest.target_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::mutable_target_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_target_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionRequest.target_entity_id)
  return _s;
}
inline const ::std::string& ApplyConditionRequest::_internal_target_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_entity_id_.Get();
}
inline void ApplyConditionRequest::_internal_set_target_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.target_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::_internal_mutable_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.target_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ApplyConditionRequest::release_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionRequest.target_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.target_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ApplyConditionRequest::set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.target_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_entity_id_.IsDefault()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionRequest.target_entity_id)
}

// string condition_type = 2 [json_name = "conditionType"];
inline void ApplyConditionRequest::clear_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ApplyConditionRequest::condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionRequest.condition_type)
  return _internal_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ApplyConditionRequest::set_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ApplyConditionRequest.condition_type)
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::mutable_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionRequest.condition_type)
  return _s;
}
inline const ::std::string& ApplyConditionRequest::_internal_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_type_.Get();
}
inline void ApplyConditionRequest::_internal_set_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::_internal_mutable_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ApplyConditionRequest::release_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionRequest.condition_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  return released;
}
inline void ApplyConditionRequest::set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_type_.IsDefault()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionRequest.condition_type)
}

// .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
inline bool ApplyConditionRequest::has_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parameters_ != nullptr);
  return value;
}
inline void ApplyConditionRequest::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ != nullptr) _impl_.parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::seshat::ConditionParameters& ApplyConditionRequest::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionParameters* p = _impl_.parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionParameters&>(::seshat::_ConditionParameters_default_instance_);
}
inline const ::seshat::ConditionParameters& ApplyConditionRequest::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionRequest.parameters)
  return _internal_parameters();
}
inline void ApplyConditionRequest::unsafe_arena_set_allocated_parameters(
    ::seshat::ConditionParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }
  _impl_.parameters_ = reinterpret_cast<::seshat::ConditionParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ApplyConditionRequest.parameters)
}
inline ::seshat::ConditionParameters* PROTOBUF_NULLABLE ApplyConditionRequest::release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::ConditionParameters* released = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionParameters* PROTOBUF_NULLABLE ApplyConditionRequest::unsafe_arena_release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionRequest.parameters)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::ConditionParameters* temp = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  return temp;
}
inline ::seshat::ConditionParameters* PROTOBUF_NONNULL ApplyConditionRequest::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionParameters>(GetArena());
    _impl_.parameters_ = reinterpret_cast<::seshat::ConditionParameters*>(p);
  }
  return _impl_.parameters_;
}
inline ::seshat::ConditionParameters* PROTOBUF_NONNULL ApplyConditionRequest::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::ConditionParameters* _msg = _internal_mutable_parameters();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionRequest.parameters)
  return _msg;
}
inline void ApplyConditionRequest::set_allocated_parameters(::seshat::ConditionParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.parameters_ = reinterpret_cast<::seshat::ConditionParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionRequest.parameters)
}

// string source_entity_id = 4 [json_name = "sourceEntityId"];
inline void ApplyConditionRequest::clear_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ApplyConditionRequest::source_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionRequest.source_entity_id)
  return _internal_source_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ApplyConditionRequest::set_source_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ApplyConditionRequest.source_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::mutable_source_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionRequest.source_entity_id)
  return _s;
}
inline const ::std::string& ApplyConditionRequest::_internal_source_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_entity_id_.Get();
}
inline void ApplyConditionRequest::_internal_set_source_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionRequest::_internal_mutable_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.source_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ApplyConditionRequest::release_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionRequest.source_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.source_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ApplyConditionRequest::set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.source_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_entity_id_.IsDefault()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionRequest.source_entity_id)
}

// bool force_apply = 5 [json_name = "forceApply"];
inline void ApplyConditionRequest::clear_force_apply() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_apply_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool ApplyConditionRequest::force_apply() const {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionRequest.force_apply)
  return _internal_force_apply();
}
inline void ApplyConditionRequest::set_force_apply(bool value) {
  _internal_set_force_apply(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.ApplyConditionRequest.force_apply)
}
inline bool ApplyConditionRequest::_internal_force_apply() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_apply_;
}
inline void ApplyConditionRequest::_internal_set_force_apply(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_apply_ = value;
}

// -------------------------------------------------------------------

// ApplyConditionResponse

// .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
inline bool ApplyConditionResponse::has_applied_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.applied_condition_ != nullptr);
  return value;
}
inline void ApplyConditionResponse::clear_applied_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.applied_condition_ != nullptr) _impl_.applied_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::Condition& ApplyConditionResponse::_internal_applied_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Condition* p = _impl_.applied_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Condition&>(::seshat::_Condition_default_instance_);
}
inline const ::seshat::Condition& ApplyConditionResponse::applied_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionResponse.applied_condition)
  return _internal_applied_condition();
}
inline void ApplyConditionResponse::unsafe_arena_set_allocated_applied_condition(
    ::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.applied_condition_);
  }
  _impl_.applied_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ApplyConditionResponse.applied_condition)
}
inline ::seshat::Condition* PROTOBUF_NULLABLE ApplyConditionResponse::release_applied_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* released = _impl_.applied_condition_;
  _impl_.applied_condition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Condition* PROTOBUF_NULLABLE ApplyConditionResponse::unsafe_arena_release_applied_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionResponse.applied_condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* temp = _impl_.applied_condition_;
  _impl_.applied_condition_ = nullptr;
  return temp;
}
inline ::seshat::Condition* PROTOBUF_NONNULL ApplyConditionResponse::_internal_mutable_applied_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.applied_condition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Condition>(GetArena());
    _impl_.applied_condition_ = reinterpret_cast<::seshat::Condition*>(p);
  }
  return _impl_.applied_condition_;
}
inline ::seshat::Condition* PROTOBUF_NONNULL ApplyConditionResponse::mutable_applied_condition()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Condition* _msg = _internal_mutable_applied_condition();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionResponse.applied_condition)
  return _msg;
}
inline void ApplyConditionResponse::set_allocated_applied_condition(::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.applied_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.applied_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionResponse.applied_condition)
}

// repeated string warnings = 2 [json_name = "warnings"];
inline int ApplyConditionResponse::_internal_warnings_size() const {
  return _internal_warnings().size();
}
inline int ApplyConditionResponse::warnings_size() const {
  return _internal_warnings_size();
}
inline void ApplyConditionResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionResponse::add_warnings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_warnings()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ApplyConditionResponse.warnings)
  return _s;
}
inline const ::std::string& ApplyConditionResponse::warnings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionResponse.warnings)
  return _internal_warnings().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ApplyConditionResponse::mutable_warnings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionResponse.warnings)
  return _internal_mutable_warnings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ApplyConditionResponse::set_warnings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_warnings()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ApplyConditionResponse.warnings)
}
template <typename Arg_, typename... Args_>
inline void ApplyConditionResponse::add_warnings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_warnings(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ApplyConditionResponse.warnings)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ApplyConditionResponse::warnings()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ApplyConditionResponse.warnings)
  return _internal_warnings();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ApplyConditionResponse::mutable_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ApplyConditionResponse.warnings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_warnings();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ApplyConditionResponse::_internal_warnings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warnings_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ApplyConditionResponse::_internal_mutable_warnings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.warnings_;
}

// repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
inline int ApplyConditionResponse::_internal_conflicting_conditions_size() const {
  return _internal_conflicting_conditions().size();
}
inline int ApplyConditionResponse::conflicting_conditions_size() const {
  return _internal_conflicting_conditions_size();
}
inline void ApplyConditionResponse::clear_conflicting_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflicting_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL ApplyConditionResponse::mutable_conflicting_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionResponse.conflicting_conditions)
  return _internal_mutable_conflicting_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL ApplyConditionResponse::mutable_conflicting_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ApplyConditionResponse.conflicting_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conflicting_conditions();
}
inline const ::seshat::Condition& ApplyConditionResponse::conflicting_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionResponse.conflicting_conditions)
  return _internal_conflicting_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL ApplyConditionResponse::add_conflicting_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_conflicting_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ApplyConditionResponse.conflicting_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& ApplyConditionResponse::conflicting_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ApplyConditionResponse.conflicting_conditions)
  return _internal_conflicting_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
ApplyConditionResponse::_internal_conflicting_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conflicting_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
ApplyConditionResponse::_internal_mutable_conflicting_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conflicting_conditions_;
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool ApplyConditionResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& ApplyConditionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& ApplyConditionResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ApplyConditionResponse.status)
  return _internal_status();
}
inline void ApplyConditionResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ApplyConditionResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE ApplyConditionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE ApplyConditionResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ApplyConditionResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL ApplyConditionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL ApplyConditionResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.ApplyConditionResponse.status)
  return _msg;
}
inline void ApplyConditionResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ApplyConditionResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConditionParameters

// .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
inline void ConditionParameters::clear_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::seshat::ConditionSeverity ConditionParameters::severity() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionParameters.severity)
  return _internal_severity();
}
inline void ConditionParameters::set_severity(::seshat::ConditionSeverity value) {
  _internal_set_severity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.ConditionParameters.severity)
}
inline ::seshat::ConditionSeverity ConditionParameters::_internal_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::ConditionSeverity>(_impl_.severity_);
}
inline void ConditionParameters::_internal_set_severity(::seshat::ConditionSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.severity_ = value;
}

// .seshat.ConditionDuration duration = 2 [json_name = "duration"];
inline bool ConditionParameters::has_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.duration_ != nullptr);
  return value;
}
inline void ConditionParameters::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ != nullptr) _impl_.duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::ConditionDuration& ConditionParameters::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionDuration* p = _impl_.duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionDuration&>(::seshat::_ConditionDuration_default_instance_);
}
inline const ::seshat::ConditionDuration& ConditionParameters::duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionParameters.duration)
  return _internal_duration();
}
inline void ConditionParameters::unsafe_arena_set_allocated_duration(
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }
  _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ConditionParameters.duration)
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE ConditionParameters::release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionDuration* released = _impl_.duration_;
  _impl_.duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE ConditionParameters::unsafe_arena_release_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionParameters.duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionDuration* temp = _impl_.duration_;
  _impl_.duration_ = nullptr;
  return temp;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL ConditionParameters::_internal_mutable_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionDuration>(GetArena());
    _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(p);
  }
  return _impl_.duration_;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL ConditionParameters::mutable_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::ConditionDuration* _msg = _internal_mutable_duration();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionParameters.duration)
  return _msg;
}
inline void ConditionParameters::set_allocated_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionParameters.duration)
}

// repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
inline int ConditionParameters::_internal_custom_effects_size() const {
  return _internal_custom_effects().size();
}
inline int ConditionParameters::custom_effects_size() const {
  return _internal_custom_effects_size();
}
inline void ConditionParameters::clear_custom_effects() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_effects_.Clear();
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ConditionParameters::mutable_custom_effects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConditionParameters.custom_effects)
  return _internal_mutable_custom_effects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL ConditionParameters::mutable_custom_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConditionParameters.custom_effects)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_custom_effects();
}
inline const ::seshat::ConditionEffect& ConditionParameters::custom_effects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionParameters.custom_effects)
  return _internal_custom_effects().Get(index);
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ConditionParameters::add_custom_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionEffect* _add = _internal_mutable_custom_effects()->Add();
  // @@protoc_insertion_point(field_add:seshat.ConditionParameters.custom_effects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& ConditionParameters::custom_effects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConditionParameters.custom_effects)
  return _internal_custom_effects();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>&
ConditionParameters::_internal_custom_effects() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_effects_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL
ConditionParameters::_internal_mutable_custom_effects() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.custom_effects_;
}

// map<string, string> properties = 4 [json_name = "properties"];
inline int ConditionParameters::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int ConditionParameters::properties_size() const {
  return _internal_properties_size();
}
inline void ConditionParameters::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionParameters::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionParameters::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.ConditionParameters.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionParameters::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionParameters::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.ConditionParameters.properties)
  return _internal_mutable_properties();
}

// int32 stack_count = 5 [json_name = "stackCount"];
inline void ConditionParameters::clear_stack_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stack_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t ConditionParameters::stack_count() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionParameters.stack_count)
  return _internal_stack_count();
}
inline void ConditionParameters::set_stack_count(::int32_t value) {
  _internal_set_stack_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.ConditionParameters.stack_count)
}
inline ::int32_t ConditionParameters::_internal_stack_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stack_count_;
}
inline void ConditionParameters::_internal_set_stack_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stack_count_ = value;
}

// -------------------------------------------------------------------

// RemoveConditionRequest

// string condition_id = 1 [json_name = "conditionId"];
inline void RemoveConditionRequest::clear_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RemoveConditionRequest::condition_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionRequest.condition_id)
  return _internal_condition_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoveConditionRequest::set_condition_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RemoveConditionRequest.condition_id)
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::mutable_condition_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_id();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveConditionRequest.condition_id)
  return _s;
}
inline const ::std::string& RemoveConditionRequest::_internal_condition_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_id_.Get();
}
inline void RemoveConditionRequest::_internal_set_condition_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::_internal_mutable_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.condition_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoveConditionRequest::release_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveConditionRequest.condition_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.condition_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_id_.Set("", GetArena());
  }
  return released;
}
inline void RemoveConditionRequest::set_allocated_condition_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.condition_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_id_.IsDefault()) {
    _impl_.condition_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveConditionRequest.condition_id)
}

// string target_entity_id = 2 [json_name = "targetEntityId"];
inline void RemoveConditionRequest::clear_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RemoveConditionRequest::target_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionRequest.target_entity_id)
  return _internal_target_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoveConditionRequest::set_target_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RemoveConditionRequest.target_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::mutable_target_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_target_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveConditionRequest.target_entity_id)
  return _s;
}
inline const ::std::string& RemoveConditionRequest::_internal_target_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_entity_id_.Get();
}
inline void RemoveConditionRequest::_internal_set_target_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.target_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::_internal_mutable_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.target_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoveConditionRequest::release_target_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveConditionRequest.target_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.target_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void RemoveConditionRequest::set_allocated_target_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.target_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.target_entity_id_.IsDefault()) {
    _impl_.target_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveConditionRequest.target_entity_id)
}

// string condition_type = 3 [json_name = "conditionType"];
inline void RemoveConditionRequest::clear_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& RemoveConditionRequest::condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionRequest.condition_type)
  return _internal_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoveConditionRequest::set_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RemoveConditionRequest.condition_type)
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::mutable_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveConditionRequest.condition_type)
  return _s;
}
inline const ::std::string& RemoveConditionRequest::_internal_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_type_.Get();
}
inline void RemoveConditionRequest::_internal_set_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoveConditionRequest::_internal_mutable_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoveConditionRequest::release_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveConditionRequest.condition_type)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  return released;
}
inline void RemoveConditionRequest::set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_type_.IsDefault()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveConditionRequest.condition_type)
}

// .seshat.RemovalReason reason = 4 [json_name = "reason"];
inline void RemoveConditionRequest::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::seshat::RemovalReason RemoveConditionRequest::reason() const {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionRequest.reason)
  return _internal_reason();
}
inline void RemoveConditionRequest::set_reason(::seshat::RemovalReason value) {
  _internal_set_reason(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.RemoveConditionRequest.reason)
}
inline ::seshat::RemovalReason RemoveConditionRequest::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::RemovalReason>(_impl_.reason_);
}
inline void RemoveConditionRequest::_internal_set_reason(::seshat::RemovalReason value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = value;
}

// -------------------------------------------------------------------

// RemoveConditionResponse

// .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
inline bool RemoveConditionResponse::has_removed_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.removed_condition_ != nullptr);
  return value;
}
inline void RemoveConditionResponse::clear_removed_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.removed_condition_ != nullptr) _impl_.removed_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::Condition& RemoveConditionResponse::_internal_removed_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Condition* p = _impl_.removed_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Condition&>(::seshat::_Condition_default_instance_);
}
inline const ::seshat::Condition& RemoveConditionResponse::removed_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionResponse.removed_condition)
  return _internal_removed_condition();
}
inline void RemoveConditionResponse::unsafe_arena_set_allocated_removed_condition(
    ::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.removed_condition_);
  }
  _impl_.removed_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.RemoveConditionResponse.removed_condition)
}
inline ::seshat::Condition* PROTOBUF_NULLABLE RemoveConditionResponse::release_removed_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* released = _impl_.removed_condition_;
  _impl_.removed_condition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Condition* PROTOBUF_NULLABLE RemoveConditionResponse::unsafe_arena_release_removed_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveConditionResponse.removed_condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* temp = _impl_.removed_condition_;
  _impl_.removed_condition_ = nullptr;
  return temp;
}
inline ::seshat::Condition* PROTOBUF_NONNULL RemoveConditionResponse::_internal_mutable_removed_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.removed_condition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Condition>(GetArena());
    _impl_.removed_condition_ = reinterpret_cast<::seshat::Condition*>(p);
  }
  return _impl_.removed_condition_;
}
inline ::seshat::Condition* PROTOBUF_NONNULL RemoveConditionResponse::mutable_removed_condition()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Condition* _msg = _internal_mutable_removed_condition();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveConditionResponse.removed_condition)
  return _msg;
}
inline void RemoveConditionResponse::set_allocated_removed_condition(::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.removed_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.removed_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveConditionResponse.removed_condition)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool RemoveConditionResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& RemoveConditionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& RemoveConditionResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveConditionResponse.status)
  return _internal_status();
}
inline void RemoveConditionResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.RemoveConditionResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE RemoveConditionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE RemoveConditionResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveConditionResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL RemoveConditionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL RemoveConditionResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveConditionResponse.status)
  return _msg;
}
inline void RemoveConditionResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveConditionResponse.status)
}

// -------------------------------------------------------------------

// UpdateConditionRequest

// string condition_id = 1 [json_name = "conditionId"];
inline void UpdateConditionRequest::clear_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UpdateConditionRequest::condition_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateConditionRequest.condition_id)
  return _internal_condition_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateConditionRequest::set_condition_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.UpdateConditionRequest.condition_id)
}
inline ::std::string* PROTOBUF_NONNULL UpdateConditionRequest::mutable_condition_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_id();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateConditionRequest.condition_id)
  return _s;
}
inline const ::std::string& UpdateConditionRequest::_internal_condition_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_id_.Get();
}
inline void UpdateConditionRequest::_internal_set_condition_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UpdateConditionRequest::_internal_mutable_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.condition_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UpdateConditionRequest::release_condition_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateConditionRequest.condition_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.condition_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_id_.Set("", GetArena());
  }
  return released;
}
inline void UpdateConditionRequest::set_allocated_condition_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.condition_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_id_.IsDefault()) {
    _impl_.condition_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateConditionRequest.condition_id)
}

// .seshat.ConditionParameters updates = 2 [json_name = "updates"];
inline bool UpdateConditionRequest::has_updates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updates_ != nullptr);
  return value;
}
inline void UpdateConditionRequest::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updates_ != nullptr) _impl_.updates_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seshat::ConditionParameters& UpdateConditionRequest::_internal_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionParameters* p = _impl_.updates_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionParameters&>(::seshat::_ConditionParameters_default_instance_);
}
inline const ::seshat::ConditionParameters& UpdateConditionRequest::updates() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateConditionRequest.updates)
  return _internal_updates();
}
inline void UpdateConditionRequest::unsafe_arena_set_allocated_updates(
    ::seshat::ConditionParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updates_);
  }
  _impl_.updates_ = reinterpret_cast<::seshat::ConditionParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateConditionRequest.updates)
}
inline ::seshat::ConditionParameters* PROTOBUF_NULLABLE UpdateConditionRequest::release_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::ConditionParameters* released = _impl_.updates_;
  _impl_.updates_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionParameters* PROTOBUF_NULLABLE UpdateConditionRequest::unsafe_arena_release_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateConditionRequest.updates)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::ConditionParameters* temp = _impl_.updates_;
  _impl_.updates_ = nullptr;
  return temp;
}
inline ::seshat::ConditionParameters* PROTOBUF_NONNULL UpdateConditionRequest::_internal_mutable_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updates_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionParameters>(GetArena());
    _impl_.updates_ = reinterpret_cast<::seshat::ConditionParameters*>(p);
  }
  return _impl_.updates_;
}
inline ::seshat::ConditionParameters* PROTOBUF_NONNULL UpdateConditionRequest::mutable_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::ConditionParameters* _msg = _internal_mutable_updates();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateConditionRequest.updates)
  return _msg;
}
inline void UpdateConditionRequest::set_allocated_updates(::seshat::ConditionParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updates_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updates_ = reinterpret_cast<::seshat::ConditionParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateConditionRequest.updates)
}

// -------------------------------------------------------------------

// UpdateConditionResponse

// .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
inline bool UpdateConditionResponse::has_updated_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_condition_ != nullptr);
  return value;
}
inline void UpdateConditionResponse::clear_updated_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_condition_ != nullptr) _impl_.updated_condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::Condition& UpdateConditionResponse::_internal_updated_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Condition* p = _impl_.updated_condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Condition&>(::seshat::_Condition_default_instance_);
}
inline const ::seshat::Condition& UpdateConditionResponse::updated_condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateConditionResponse.updated_condition)
  return _internal_updated_condition();
}
inline void UpdateConditionResponse::unsafe_arena_set_allocated_updated_condition(
    ::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_condition_);
  }
  _impl_.updated_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateConditionResponse.updated_condition)
}
inline ::seshat::Condition* PROTOBUF_NULLABLE UpdateConditionResponse::release_updated_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* released = _impl_.updated_condition_;
  _impl_.updated_condition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Condition* PROTOBUF_NULLABLE UpdateConditionResponse::unsafe_arena_release_updated_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateConditionResponse.updated_condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* temp = _impl_.updated_condition_;
  _impl_.updated_condition_ = nullptr;
  return temp;
}
inline ::seshat::Condition* PROTOBUF_NONNULL UpdateConditionResponse::_internal_mutable_updated_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_condition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Condition>(GetArena());
    _impl_.updated_condition_ = reinterpret_cast<::seshat::Condition*>(p);
  }
  return _impl_.updated_condition_;
}
inline ::seshat::Condition* PROTOBUF_NONNULL UpdateConditionResponse::mutable_updated_condition()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Condition* _msg = _internal_mutable_updated_condition();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateConditionResponse.updated_condition)
  return _msg;
}
inline void UpdateConditionResponse::set_allocated_updated_condition(::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_condition_ = reinterpret_cast<::seshat::Condition*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateConditionResponse.updated_condition)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool UpdateConditionResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& UpdateConditionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& UpdateConditionResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateConditionResponse.status)
  return _internal_status();
}
inline void UpdateConditionResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateConditionResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE UpdateConditionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE UpdateConditionResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateConditionResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL UpdateConditionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL UpdateConditionResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateConditionResponse.status)
  return _msg;
}
inline void UpdateConditionResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateConditionResponse.status)
}

// -------------------------------------------------------------------

// GetConditionsRequest

// string entity_id = 1 [json_name = "entityId"];
inline void GetConditionsRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetConditionsRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConditionsRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConditionsRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsRequest.entity_id)
  return _s;
}
inline const ::std::string& GetConditionsRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void GetConditionsRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConditionsRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionsRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void GetConditionsRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionsRequest.entity_id)
}

// bool active_only = 2 [json_name = "activeOnly"];
inline void GetConditionsRequest::clear_active_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool GetConditionsRequest::active_only() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsRequest.active_only)
  return _internal_active_only();
}
inline void GetConditionsRequest::set_active_only(bool value) {
  _internal_set_active_only(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionsRequest.active_only)
}
inline bool GetConditionsRequest::_internal_active_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_only_;
}
inline void GetConditionsRequest::_internal_set_active_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = value;
}

// repeated string condition_types = 3 [json_name = "conditionTypes"];
inline int GetConditionsRequest::_internal_condition_types_size() const {
  return _internal_condition_types().size();
}
inline int GetConditionsRequest::condition_types_size() const {
  return _internal_condition_types_size();
}
inline void GetConditionsRequest::clear_condition_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsRequest::add_condition_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_condition_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetConditionsRequest.condition_types)
  return _s;
}
inline const ::std::string& GetConditionsRequest::condition_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsRequest.condition_types)
  return _internal_condition_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsRequest::mutable_condition_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsRequest.condition_types)
  return _internal_mutable_condition_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetConditionsRequest::set_condition_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_condition_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetConditionsRequest.condition_types)
}
template <typename Arg_, typename... Args_>
inline void GetConditionsRequest::add_condition_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_condition_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetConditionsRequest.condition_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetConditionsRequest::condition_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionsRequest.condition_types)
  return _internal_condition_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetConditionsRequest::mutable_condition_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionsRequest.condition_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_condition_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetConditionsRequest::_internal_condition_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetConditionsRequest::_internal_mutable_condition_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.condition_types_;
}

// -------------------------------------------------------------------

// GetConditionsResponse

// repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
inline int GetConditionsResponse::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int GetConditionsResponse::conditions_size() const {
  return _internal_conditions_size();
}
inline void GetConditionsResponse::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConditionsResponse::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsResponse.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL GetConditionsResponse::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionsResponse.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::seshat::Condition& GetConditionsResponse::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsResponse.conditions)
  return _internal_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConditionsResponse::add_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConditionsResponse.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& GetConditionsResponse::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionsResponse.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
GetConditionsResponse::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
GetConditionsResponse::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void GetConditionsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GetConditionsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsResponse.total_count)
  return _internal_total_count();
}
inline void GetConditionsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionsResponse.total_count)
}
inline ::int32_t GetConditionsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetConditionsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool GetConditionsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetConditionsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetConditionsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsResponse.status)
  return _internal_status();
}
inline void GetConditionsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetConditionsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsResponse.status)
  return _msg;
}
inline void GetConditionsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionsResponse.status)
}

// -------------------------------------------------------------------

// HasConditionRequest

// string entity_id = 1 [json_name = "entityId"];
inline void HasConditionRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& HasConditionRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.HasConditionRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HasConditionRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.HasConditionRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL HasConditionRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.HasConditionRequest.entity_id)
  return _s;
}
inline const ::std::string& HasConditionRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void HasConditionRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL HasConditionRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE HasConditionRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.HasConditionRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void HasConditionRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.HasConditionRequest.entity_id)
}

// string condition_type = 2 [json_name = "conditionType"];
inline void HasConditionRequest::clear_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& HasConditionRequest::condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.HasConditionRequest.condition_type)
  return _internal_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void HasConditionRequest::set_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.HasConditionRequest.condition_type)
}
inline ::std::string* PROTOBUF_NONNULL HasConditionRequest::mutable_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.HasConditionRequest.condition_type)
  return _s;
}
inline const ::std::string& HasConditionRequest::_internal_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_type_.Get();
}
inline void HasConditionRequest::_internal_set_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL HasConditionRequest::_internal_mutable_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE HasConditionRequest::release_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.HasConditionRequest.condition_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  return released;
}
inline void HasConditionRequest::set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_type_.IsDefault()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.HasConditionRequest.condition_type)
}

// bool active_only = 3 [json_name = "activeOnly"];
inline void HasConditionRequest::clear_active_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool HasConditionRequest::active_only() const {
  // @@protoc_insertion_point(field_get:seshat.HasConditionRequest.active_only)
  return _internal_active_only();
}
inline void HasConditionRequest::set_active_only(bool value) {
  _internal_set_active_only(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.HasConditionRequest.active_only)
}
inline bool HasConditionRequest::_internal_active_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_only_;
}
inline void HasConditionRequest::_internal_set_active_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = value;
}

// -------------------------------------------------------------------

// HasConditionResponse

// bool has_condition = 1 [json_name = "hasCondition"];
inline void HasConditionResponse::clear_has_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_condition_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool HasConditionResponse::has_condition() const {
  // @@protoc_insertion_point(field_get:seshat.HasConditionResponse.has_condition)
  return _internal_has_condition();
}
inline void HasConditionResponse::set_has_condition(bool value) {
  _internal_set_has_condition(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.HasConditionResponse.has_condition)
}
inline bool HasConditionResponse::_internal_has_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.has_condition_;
}
inline void HasConditionResponse::_internal_set_has_condition(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.has_condition_ = value;
}

// .seshat.Condition condition = 2 [json_name = "condition"];
inline bool HasConditionResponse::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void HasConditionResponse::clear_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::Condition& HasConditionResponse::_internal_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Condition* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Condition&>(::seshat::_Condition_default_instance_);
}
inline const ::seshat::Condition& HasConditionResponse::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.HasConditionResponse.condition)
  return _internal_condition();
}
inline void HasConditionResponse::unsafe_arena_set_allocated_condition(
    ::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.HasConditionResponse.condition)
}
inline ::seshat::Condition* PROTOBUF_NULLABLE HasConditionResponse::release_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Condition* PROTOBUF_NULLABLE HasConditionResponse::unsafe_arena_release_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.HasConditionResponse.condition)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Condition* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::seshat::Condition* PROTOBUF_NONNULL HasConditionResponse::_internal_mutable_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.condition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Condition>(GetArena());
    _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(p);
  }
  return _impl_.condition_;
}
inline ::seshat::Condition* PROTOBUF_NONNULL HasConditionResponse::mutable_condition()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Condition* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:seshat.HasConditionResponse.condition)
  return _msg;
}
inline void HasConditionResponse::set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.HasConditionResponse.condition)
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool HasConditionResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& HasConditionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& HasConditionResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.HasConditionResponse.status)
  return _internal_status();
}
inline void HasConditionResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.HasConditionResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE HasConditionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE HasConditionResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.HasConditionResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL HasConditionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL HasConditionResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.HasConditionResponse.status)
  return _msg;
}
inline void HasConditionResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.HasConditionResponse.status)
}

// -------------------------------------------------------------------

// GetConditionsByTypeRequest

// string condition_type = 1 [json_name = "conditionType"];
inline void GetConditionsByTypeRequest::clear_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetConditionsByTypeRequest::condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeRequest.condition_type)
  return _internal_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConditionsByTypeRequest::set_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConditionsByTypeRequest.condition_type)
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsByTypeRequest::mutable_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsByTypeRequest.condition_type)
  return _s;
}
inline const ::std::string& GetConditionsByTypeRequest::_internal_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_type_.Get();
}
inline void GetConditionsByTypeRequest::_internal_set_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConditionsByTypeRequest::_internal_mutable_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConditionsByTypeRequest::release_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionsByTypeRequest.condition_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  return released;
}
inline void GetConditionsByTypeRequest::set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_type_.IsDefault()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionsByTypeRequest.condition_type)
}

// bool active_only = 2 [json_name = "activeOnly"];
inline void GetConditionsByTypeRequest::clear_active_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool GetConditionsByTypeRequest::active_only() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeRequest.active_only)
  return _internal_active_only();
}
inline void GetConditionsByTypeRequest::set_active_only(bool value) {
  _internal_set_active_only(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionsByTypeRequest.active_only)
}
inline bool GetConditionsByTypeRequest::_internal_active_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_only_;
}
inline void GetConditionsByTypeRequest::_internal_set_active_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = value;
}

// int32 limit = 3 [json_name = "limit"];
inline void GetConditionsByTypeRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GetConditionsByTypeRequest::limit() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeRequest.limit)
  return _internal_limit();
}
inline void GetConditionsByTypeRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionsByTypeRequest.limit)
}
inline ::int32_t GetConditionsByTypeRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetConditionsByTypeRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// -------------------------------------------------------------------

// GetConditionsByTypeResponse

// repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
inline int GetConditionsByTypeResponse::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int GetConditionsByTypeResponse::conditions_size() const {
  return _internal_conditions_size();
}
inline void GetConditionsByTypeResponse::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConditionsByTypeResponse::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsByTypeResponse.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL GetConditionsByTypeResponse::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionsByTypeResponse.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::seshat::Condition& GetConditionsByTypeResponse::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeResponse.conditions)
  return _internal_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConditionsByTypeResponse::add_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConditionsByTypeResponse.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& GetConditionsByTypeResponse::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionsByTypeResponse.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
GetConditionsByTypeResponse::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
GetConditionsByTypeResponse::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void GetConditionsByTypeResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GetConditionsByTypeResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeResponse.total_count)
  return _internal_total_count();
}
inline void GetConditionsByTypeResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionsByTypeResponse.total_count)
}
inline ::int32_t GetConditionsByTypeResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetConditionsByTypeResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool GetConditionsByTypeResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetConditionsByTypeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetConditionsByTypeResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionsByTypeResponse.status)
  return _internal_status();
}
inline void GetConditionsByTypeResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetConditionsByTypeResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionsByTypeResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionsByTypeResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionsByTypeResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionsByTypeResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionsByTypeResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionsByTypeResponse.status)
  return _msg;
}
inline void GetConditionsByTypeResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionsByTypeResponse.status)
}

// -------------------------------------------------------------------

// GetActiveConditionsRequest

// repeated string entity_ids = 1 [json_name = "entityIds"];
inline int GetActiveConditionsRequest::_internal_entity_ids_size() const {
  return _internal_entity_ids().size();
}
inline int GetActiveConditionsRequest::entity_ids_size() const {
  return _internal_entity_ids_size();
}
inline void GetActiveConditionsRequest::clear_entity_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_ids_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetActiveConditionsRequest::add_entity_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetActiveConditionsRequest.entity_ids)
  return _s;
}
inline const ::std::string& GetActiveConditionsRequest::entity_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveConditionsRequest.entity_ids)
  return _internal_entity_ids().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetActiveConditionsRequest::mutable_entity_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveConditionsRequest.entity_ids)
  return _internal_mutable_entity_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetActiveConditionsRequest::set_entity_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_ids()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetActiveConditionsRequest.entity_ids)
}
template <typename Arg_, typename... Args_>
inline void GetActiveConditionsRequest::add_entity_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_ids(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetActiveConditionsRequest.entity_ids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetActiveConditionsRequest::entity_ids()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetActiveConditionsRequest.entity_ids)
  return _internal_entity_ids();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetActiveConditionsRequest::mutable_entity_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetActiveConditionsRequest.entity_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_ids();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetActiveConditionsRequest::_internal_entity_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetActiveConditionsRequest::_internal_mutable_entity_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_ids_;
}

// int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
inline void GetActiveConditionsRequest::clear_as_of_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_of_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int64_t GetActiveConditionsRequest::as_of_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.GetActiveConditionsRequest.as_of_timestamp)
  return _internal_as_of_timestamp();
}
inline void GetActiveConditionsRequest::set_as_of_timestamp(::int64_t value) {
  _internal_set_as_of_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:seshat.GetActiveConditionsRequest.as_of_timestamp)
}
inline ::int64_t GetActiveConditionsRequest::_internal_as_of_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.as_of_timestamp_;
}
inline void GetActiveConditionsRequest::_internal_set_as_of_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.as_of_timestamp_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetActiveConditionsResponse

// map<string, .seshat.EntityConditions> entity_conditions = 1 [json_name = "entityConditions"];
inline int GetActiveConditionsResponse::_internal_entity_conditions_size() const {
  return _internal_entity_conditions().size();
}
inline int GetActiveConditionsResponse::entity_conditions_size() const {
  return _internal_entity_conditions_size();
}
inline void GetActiveConditionsResponse::clear_entity_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_conditions_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::seshat::EntityConditions>& GetActiveConditionsResponse::_internal_entity_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_conditions_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::seshat::EntityConditions>& GetActiveConditionsResponse::entity_conditions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.GetActiveConditionsResponse.entity_conditions)
  return _internal_entity_conditions();
}
inline ::google::protobuf::Map<std::string, ::seshat::EntityConditions>* PROTOBUF_NONNULL GetActiveConditionsResponse::_internal_mutable_entity_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_conditions_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::seshat::EntityConditions>* PROTOBUF_NONNULL GetActiveConditionsResponse::mutable_entity_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.GetActiveConditionsResponse.entity_conditions)
  return _internal_mutable_entity_conditions();
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetActiveConditionsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetActiveConditionsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetActiveConditionsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveConditionsResponse.status)
  return _internal_status();
}
inline void GetActiveConditionsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetActiveConditionsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetActiveConditionsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetActiveConditionsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetActiveConditionsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetActiveConditionsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetActiveConditionsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveConditionsResponse.status)
  return _msg;
}
inline void GetActiveConditionsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetActiveConditionsResponse.status)
}

// -------------------------------------------------------------------

// EntityConditions

// string entity_id = 1 [json_name = "entityId"];
inline void EntityConditions::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EntityConditions::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EntityConditions.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EntityConditions::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.EntityConditions.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL EntityConditions::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.EntityConditions.entity_id)
  return _s;
}
inline const ::std::string& EntityConditions::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void EntityConditions::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EntityConditions::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EntityConditions::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.EntityConditions.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void EntityConditions::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.EntityConditions.entity_id)
}

// repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
inline int EntityConditions::_internal_conditions_size() const {
  return _internal_conditions().size();
}
inline int EntityConditions::conditions_size() const {
  return _internal_conditions_size();
}
inline void EntityConditions::clear_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL EntityConditions::mutable_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.EntityConditions.conditions)
  return _internal_mutable_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL EntityConditions::mutable_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.EntityConditions.conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conditions();
}
inline const ::seshat::Condition& EntityConditions::conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EntityConditions.conditions)
  return _internal_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL EntityConditions::add_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.EntityConditions.conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& EntityConditions::conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.EntityConditions.conditions)
  return _internal_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
EntityConditions::_internal_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
EntityConditions::_internal_mutable_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conditions_;
}

// int32 total_conditions = 3 [json_name = "totalConditions"];
inline void EntityConditions::clear_total_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_conditions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t EntityConditions::total_conditions() const {
  // @@protoc_insertion_point(field_get:seshat.EntityConditions.total_conditions)
  return _internal_total_conditions();
}
inline void EntityConditions::set_total_conditions(::int32_t value) {
  _internal_set_total_conditions(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.EntityConditions.total_conditions)
}
inline ::int32_t EntityConditions::_internal_total_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_conditions_;
}
inline void EntityConditions::_internal_set_total_conditions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_conditions_ = value;
}

// -------------------------------------------------------------------

// CheckImmunityRequest

// string entity_id = 1 [json_name = "entityId"];
inline void CheckImmunityRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CheckImmunityRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CheckImmunityRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CheckImmunityRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CheckImmunityRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.CheckImmunityRequest.entity_id)
  return _s;
}
inline const ::std::string& CheckImmunityRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void CheckImmunityRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CheckImmunityRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CheckImmunityRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void CheckImmunityRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CheckImmunityRequest.entity_id)
}

// string condition_type = 2 [json_name = "conditionType"];
inline void CheckImmunityRequest::clear_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CheckImmunityRequest::condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CheckImmunityRequest.condition_type)
  return _internal_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CheckImmunityRequest::set_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CheckImmunityRequest.condition_type)
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityRequest::mutable_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.CheckImmunityRequest.condition_type)
  return _s;
}
inline const ::std::string& CheckImmunityRequest::_internal_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_type_.Get();
}
inline void CheckImmunityRequest::_internal_set_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityRequest::_internal_mutable_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CheckImmunityRequest::release_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CheckImmunityRequest.condition_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  return released;
}
inline void CheckImmunityRequest::set_allocated_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.condition_type_.IsDefault()) {
    _impl_.condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CheckImmunityRequest.condition_type)
}

// -------------------------------------------------------------------

// CheckImmunityResponse

// bool is_immune = 1 [json_name = "isImmune"];
inline void CheckImmunityResponse::clear_is_immune() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_immune_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool CheckImmunityResponse::is_immune() const {
  // @@protoc_insertion_point(field_get:seshat.CheckImmunityResponse.is_immune)
  return _internal_is_immune();
}
inline void CheckImmunityResponse::set_is_immune(bool value) {
  _internal_set_is_immune(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.CheckImmunityResponse.is_immune)
}
inline bool CheckImmunityResponse::_internal_is_immune() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_immune_;
}
inline void CheckImmunityResponse::_internal_set_is_immune(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_immune_ = value;
}

// repeated string immunity_sources = 2 [json_name = "immunitySources"];
inline int CheckImmunityResponse::_internal_immunity_sources_size() const {
  return _internal_immunity_sources().size();
}
inline int CheckImmunityResponse::immunity_sources_size() const {
  return _internal_immunity_sources_size();
}
inline void CheckImmunityResponse::clear_immunity_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunity_sources_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityResponse::add_immunity_sources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_immunity_sources()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.CheckImmunityResponse.immunity_sources)
  return _s;
}
inline const ::std::string& CheckImmunityResponse::immunity_sources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CheckImmunityResponse.immunity_sources)
  return _internal_immunity_sources().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL CheckImmunityResponse::mutable_immunity_sources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.CheckImmunityResponse.immunity_sources)
  return _internal_mutable_immunity_sources()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void CheckImmunityResponse::set_immunity_sources(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_immunity_sources()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.CheckImmunityResponse.immunity_sources)
}
template <typename Arg_, typename... Args_>
inline void CheckImmunityResponse::add_immunity_sources(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_immunity_sources(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.CheckImmunityResponse.immunity_sources)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& CheckImmunityResponse::immunity_sources()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.CheckImmunityResponse.immunity_sources)
  return _internal_immunity_sources();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
CheckImmunityResponse::mutable_immunity_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.CheckImmunityResponse.immunity_sources)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_immunity_sources();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
CheckImmunityResponse::_internal_immunity_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunity_sources_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
CheckImmunityResponse::_internal_mutable_immunity_sources() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.immunity_sources_;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool CheckImmunityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& CheckImmunityResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& CheckImmunityResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CheckImmunityResponse.status)
  return _internal_status();
}
inline void CheckImmunityResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CheckImmunityResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE CheckImmunityResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE CheckImmunityResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CheckImmunityResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL CheckImmunityResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL CheckImmunityResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.CheckImmunityResponse.status)
  return _msg;
}
inline void CheckImmunityResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CheckImmunityResponse.status)
}

// -------------------------------------------------------------------

// GetConflictingConditionsRequest

// string entity_id = 1 [json_name = "entityId"];
inline void GetConflictingConditionsRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetConflictingConditionsRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConflictingConditionsRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConflictingConditionsRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConflictingConditionsRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL GetConflictingConditionsRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetConflictingConditionsRequest.entity_id)
  return _s;
}
inline const ::std::string& GetConflictingConditionsRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void GetConflictingConditionsRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConflictingConditionsRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConflictingConditionsRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConflictingConditionsRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void GetConflictingConditionsRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConflictingConditionsRequest.entity_id)
}

// string new_condition_type = 2 [json_name = "newConditionType"];
inline void GetConflictingConditionsRequest::clear_new_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_condition_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetConflictingConditionsRequest::new_condition_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConflictingConditionsRequest.new_condition_type)
  return _internal_new_condition_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConflictingConditionsRequest::set_new_condition_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.new_condition_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConflictingConditionsRequest.new_condition_type)
}
inline ::std::string* PROTOBUF_NONNULL GetConflictingConditionsRequest::mutable_new_condition_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_new_condition_type();
  // @@protoc_insertion_point(field_mutable:seshat.GetConflictingConditionsRequest.new_condition_type)
  return _s;
}
inline const ::std::string& GetConflictingConditionsRequest::_internal_new_condition_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_condition_type_.Get();
}
inline void GetConflictingConditionsRequest::_internal_set_new_condition_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.new_condition_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConflictingConditionsRequest::_internal_mutable_new_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.new_condition_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConflictingConditionsRequest::release_new_condition_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConflictingConditionsRequest.new_condition_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.new_condition_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.new_condition_type_.Set("", GetArena());
  }
  return released;
}
inline void GetConflictingConditionsRequest::set_allocated_new_condition_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.new_condition_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.new_condition_type_.IsDefault()) {
    _impl_.new_condition_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConflictingConditionsRequest.new_condition_type)
}

// -------------------------------------------------------------------

// GetConflictingConditionsResponse

// repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
inline int GetConflictingConditionsResponse::_internal_conflicting_conditions_size() const {
  return _internal_conflicting_conditions().size();
}
inline int GetConflictingConditionsResponse::conflicting_conditions_size() const {
  return _internal_conflicting_conditions_size();
}
inline void GetConflictingConditionsResponse::clear_conflicting_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflicting_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConflictingConditionsResponse::mutable_conflicting_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConflictingConditionsResponse.conflicting_conditions)
  return _internal_mutable_conflicting_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL GetConflictingConditionsResponse::mutable_conflicting_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConflictingConditionsResponse.conflicting_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conflicting_conditions();
}
inline const ::seshat::Condition& GetConflictingConditionsResponse::conflicting_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConflictingConditionsResponse.conflicting_conditions)
  return _internal_conflicting_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL GetConflictingConditionsResponse::add_conflicting_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_conflicting_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConflictingConditionsResponse.conflicting_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& GetConflictingConditionsResponse::conflicting_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConflictingConditionsResponse.conflicting_conditions)
  return _internal_conflicting_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
GetConflictingConditionsResponse::_internal_conflicting_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conflicting_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
GetConflictingConditionsResponse::_internal_mutable_conflicting_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conflicting_conditions_;
}

// repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
inline int GetConflictingConditionsResponse::_internal_suggested_resolutions_size() const {
  return _internal_suggested_resolutions().size();
}
inline int GetConflictingConditionsResponse::suggested_resolutions_size() const {
  return _internal_suggested_resolutions_size();
}
inline void GetConflictingConditionsResponse::clear_suggested_resolutions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suggested_resolutions_.Clear();
}
inline ::seshat::ConflictResolution* PROTOBUF_NONNULL GetConflictingConditionsResponse::mutable_suggested_resolutions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConflictingConditionsResponse.suggested_resolutions)
  return _internal_mutable_suggested_resolutions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL GetConflictingConditionsResponse::mutable_suggested_resolutions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConflictingConditionsResponse.suggested_resolutions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suggested_resolutions();
}
inline const ::seshat::ConflictResolution& GetConflictingConditionsResponse::suggested_resolutions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConflictingConditionsResponse.suggested_resolutions)
  return _internal_suggested_resolutions().Get(index);
}
inline ::seshat::ConflictResolution* PROTOBUF_NONNULL GetConflictingConditionsResponse::add_suggested_resolutions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConflictResolution* _add = _internal_mutable_suggested_resolutions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConflictingConditionsResponse.suggested_resolutions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& GetConflictingConditionsResponse::suggested_resolutions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConflictingConditionsResponse.suggested_resolutions)
  return _internal_suggested_resolutions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>&
GetConflictingConditionsResponse::_internal_suggested_resolutions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suggested_resolutions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL
GetConflictingConditionsResponse::_internal_mutable_suggested_resolutions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suggested_resolutions_;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool GetConflictingConditionsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetConflictingConditionsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetConflictingConditionsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConflictingConditionsResponse.status)
  return _internal_status();
}
inline void GetConflictingConditionsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetConflictingConditionsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConflictingConditionsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConflictingConditionsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConflictingConditionsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConflictingConditionsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConflictingConditionsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetConflictingConditionsResponse.status)
  return _msg;
}
inline void GetConflictingConditionsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConflictingConditionsResponse.status)
}

// -------------------------------------------------------------------

// ConflictResolution

// string conflict_type = 1 [json_name = "conflictType"];
inline void ConflictResolution::clear_conflict_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflict_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConflictResolution::conflict_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConflictResolution.conflict_type)
  return _internal_conflict_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConflictResolution::set_conflict_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.conflict_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConflictResolution.conflict_type)
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::mutable_conflict_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_conflict_type();
  // @@protoc_insertion_point(field_mutable:seshat.ConflictResolution.conflict_type)
  return _s;
}
inline const ::std::string& ConflictResolution::_internal_conflict_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conflict_type_.Get();
}
inline void ConflictResolution::_internal_set_conflict_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.conflict_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::_internal_mutable_conflict_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.conflict_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConflictResolution::release_conflict_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConflictResolution.conflict_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.conflict_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.conflict_type_.Set("", GetArena());
  }
  return released;
}
inline void ConflictResolution::set_allocated_conflict_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.conflict_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.conflict_type_.IsDefault()) {
    _impl_.conflict_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConflictResolution.conflict_type)
}

// string action = 2 [json_name = "action"];
inline void ConflictResolution::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ConflictResolution::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConflictResolution.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConflictResolution::set_action(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConflictResolution.action)
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:seshat.ConflictResolution.action)
  return _s;
}
inline const ::std::string& ConflictResolution::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void ConflictResolution::_internal_set_action(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.action_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.action_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConflictResolution::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConflictResolution.action)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.action_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.action_.Set("", GetArena());
  }
  return released;
}
inline void ConflictResolution::set_allocated_action(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConflictResolution.action)
}

// repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
inline int ConflictResolution::_internal_affected_condition_ids_size() const {
  return _internal_affected_condition_ids().size();
}
inline int ConflictResolution::affected_condition_ids_size() const {
  return _internal_affected_condition_ids_size();
}
inline void ConflictResolution::clear_affected_condition_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.affected_condition_ids_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::add_affected_condition_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_affected_condition_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConflictResolution.affected_condition_ids)
  return _s;
}
inline const ::std::string& ConflictResolution::affected_condition_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConflictResolution.affected_condition_ids)
  return _internal_affected_condition_ids().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::mutable_affected_condition_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConflictResolution.affected_condition_ids)
  return _internal_mutable_affected_condition_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConflictResolution::set_affected_condition_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_affected_condition_ids()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConflictResolution.affected_condition_ids)
}
template <typename Arg_, typename... Args_>
inline void ConflictResolution::add_affected_condition_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_affected_condition_ids(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConflictResolution.affected_condition_ids)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConflictResolution::affected_condition_ids()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConflictResolution.affected_condition_ids)
  return _internal_affected_condition_ids();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConflictResolution::mutable_affected_condition_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConflictResolution.affected_condition_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_affected_condition_ids();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConflictResolution::_internal_affected_condition_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.affected_condition_ids_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConflictResolution::_internal_mutable_affected_condition_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.affected_condition_ids_;
}

// string reason = 4 [json_name = "reason"];
inline void ConflictResolution::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ConflictResolution::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConflictResolution.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConflictResolution::set_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConflictResolution.reason)
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::mutable_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:seshat.ConflictResolution.reason)
  return _s;
}
inline const ::std::string& ConflictResolution::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void ConflictResolution::_internal_set_reason(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.reason_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConflictResolution::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.reason_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConflictResolution::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConflictResolution.reason)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reason_.Set("", GetArena());
  }
  return released;
}
inline void ConflictResolution::set_allocated_reason(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConflictResolution.reason)
}

// -------------------------------------------------------------------

// ResolveConflictsRequest

// string entity_id = 1 [json_name = "entityId"];
inline void ResolveConflictsRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ResolveConflictsRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ResolveConflictsRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ResolveConflictsRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ResolveConflictsRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ResolveConflictsRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ResolveConflictsRequest.entity_id)
  return _s;
}
inline const ::std::string& ResolveConflictsRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void ResolveConflictsRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ResolveConflictsRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ResolveConflictsRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ResolveConflictsRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ResolveConflictsRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ResolveConflictsRequest.entity_id)
}

// repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
inline int ResolveConflictsRequest::_internal_resolutions_size() const {
  return _internal_resolutions().size();
}
inline int ResolveConflictsRequest::resolutions_size() const {
  return _internal_resolutions_size();
}
inline void ResolveConflictsRequest::clear_resolutions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolutions_.Clear();
}
inline ::seshat::ConflictResolution* PROTOBUF_NONNULL ResolveConflictsRequest::mutable_resolutions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ResolveConflictsRequest.resolutions)
  return _internal_mutable_resolutions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL ResolveConflictsRequest::mutable_resolutions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ResolveConflictsRequest.resolutions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_resolutions();
}
inline const ::seshat::ConflictResolution& ResolveConflictsRequest::resolutions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ResolveConflictsRequest.resolutions)
  return _internal_resolutions().Get(index);
}
inline ::seshat::ConflictResolution* PROTOBUF_NONNULL ResolveConflictsRequest::add_resolutions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConflictResolution* _add = _internal_mutable_resolutions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ResolveConflictsRequest.resolutions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>& ResolveConflictsRequest::resolutions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ResolveConflictsRequest.resolutions)
  return _internal_resolutions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>&
ResolveConflictsRequest::_internal_resolutions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolutions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConflictResolution>* PROTOBUF_NONNULL
ResolveConflictsRequest::_internal_mutable_resolutions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.resolutions_;
}

// -------------------------------------------------------------------

// ResolveConflictsResponse

// repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
inline int ResolveConflictsResponse::_internal_removed_conditions_size() const {
  return _internal_removed_conditions().size();
}
inline int ResolveConflictsResponse::removed_conditions_size() const {
  return _internal_removed_conditions_size();
}
inline void ResolveConflictsResponse::clear_removed_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.removed_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL ResolveConflictsResponse::mutable_removed_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ResolveConflictsResponse.removed_conditions)
  return _internal_mutable_removed_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL ResolveConflictsResponse::mutable_removed_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ResolveConflictsResponse.removed_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_removed_conditions();
}
inline const ::seshat::Condition& ResolveConflictsResponse::removed_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ResolveConflictsResponse.removed_conditions)
  return _internal_removed_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL ResolveConflictsResponse::add_removed_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_removed_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ResolveConflictsResponse.removed_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& ResolveConflictsResponse::removed_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ResolveConflictsResponse.removed_conditions)
  return _internal_removed_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
ResolveConflictsResponse::_internal_removed_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.removed_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
ResolveConflictsResponse::_internal_mutable_removed_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.removed_conditions_;
}

// repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
inline int ResolveConflictsResponse::_internal_modified_conditions_size() const {
  return _internal_modified_conditions().size();
}
inline int ResolveConflictsResponse::modified_conditions_size() const {
  return _internal_modified_conditions_size();
}
inline void ResolveConflictsResponse::clear_modified_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.modified_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL ResolveConflictsResponse::mutable_modified_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ResolveConflictsResponse.modified_conditions)
  return _internal_mutable_modified_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL ResolveConflictsResponse::mutable_modified_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ResolveConflictsResponse.modified_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_modified_conditions();
}
inline const ::seshat::Condition& ResolveConflictsResponse::modified_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ResolveConflictsResponse.modified_conditions)
  return _internal_modified_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL ResolveConflictsResponse::add_modified_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_modified_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ResolveConflictsResponse.modified_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& ResolveConflictsResponse::modified_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ResolveConflictsResponse.modified_conditions)
  return _internal_modified_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
ResolveConflictsResponse::_internal_modified_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.modified_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
ResolveConflictsResponse::_internal_mutable_modified_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.modified_conditions_;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool ResolveConflictsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& ResolveConflictsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& ResolveConflictsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ResolveConflictsResponse.status)
  return _internal_status();
}
inline void ResolveConflictsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ResolveConflictsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE ResolveConflictsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE ResolveConflictsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ResolveConflictsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL ResolveConflictsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL ResolveConflictsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.ResolveConflictsResponse.status)
  return _msg;
}
inline void ResolveConflictsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ResolveConflictsResponse.status)
}

// -------------------------------------------------------------------

// GetConditionTemplatesRequest

// string category = 1 [json_name = "category"];
inline void GetConditionTemplatesRequest::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetConditionTemplatesRequest::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionTemplatesRequest.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConditionTemplatesRequest::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConditionTemplatesRequest.category)
}
inline ::std::string* PROTOBUF_NONNULL GetConditionTemplatesRequest::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionTemplatesRequest.category)
  return _s;
}
inline const ::std::string& GetConditionTemplatesRequest::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void GetConditionTemplatesRequest::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConditionTemplatesRequest::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConditionTemplatesRequest::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionTemplatesRequest.category)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void GetConditionTemplatesRequest::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionTemplatesRequest.category)
}

// string system = 2 [json_name = "system"];
inline void GetConditionTemplatesRequest::clear_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.system_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetConditionTemplatesRequest::system() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionTemplatesRequest.system)
  return _internal_system();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConditionTemplatesRequest::set_system(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.system_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConditionTemplatesRequest.system)
}
inline ::std::string* PROTOBUF_NONNULL GetConditionTemplatesRequest::mutable_system()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_system();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionTemplatesRequest.system)
  return _s;
}
inline const ::std::string& GetConditionTemplatesRequest::_internal_system() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.system_.Get();
}
inline void GetConditionTemplatesRequest::_internal_set_system(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.system_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConditionTemplatesRequest::_internal_mutable_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.system_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConditionTemplatesRequest::release_system() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionTemplatesRequest.system)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.system_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.system_.Set("", GetArena());
  }
  return released;
}
inline void GetConditionTemplatesRequest::set_allocated_system(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.system_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.system_.IsDefault()) {
    _impl_.system_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionTemplatesRequest.system)
}

// -------------------------------------------------------------------

// GetConditionTemplatesResponse

// repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
inline int GetConditionTemplatesResponse::_internal_templates_size() const {
  return _internal_templates().size();
}
inline int GetConditionTemplatesResponse::templates_size() const {
  return _internal_templates_size();
}
inline void GetConditionTemplatesResponse::clear_templates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.templates_.Clear();
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL GetConditionTemplatesResponse::mutable_templates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionTemplatesResponse.templates)
  return _internal_mutable_templates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>* PROTOBUF_NONNULL GetConditionTemplatesResponse::mutable_templates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionTemplatesResponse.templates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_templates();
}
inline const ::seshat::ConditionTemplate& GetConditionTemplatesResponse::templates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionTemplatesResponse.templates)
  return _internal_templates().Get(index);
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL GetConditionTemplatesResponse::add_templates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionTemplate* _add = _internal_mutable_templates()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConditionTemplatesResponse.templates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>& GetConditionTemplatesResponse::templates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionTemplatesResponse.templates)
  return _internal_templates();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>&
GetConditionTemplatesResponse::_internal_templates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.templates_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionTemplate>* PROTOBUF_NONNULL
GetConditionTemplatesResponse::_internal_mutable_templates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.templates_;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetConditionTemplatesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetConditionTemplatesResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetConditionTemplatesResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionTemplatesResponse.status)
  return _internal_status();
}
inline void GetConditionTemplatesResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetConditionTemplatesResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionTemplatesResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionTemplatesResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionTemplatesResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionTemplatesResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionTemplatesResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionTemplatesResponse.status)
  return _msg;
}
inline void GetConditionTemplatesResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionTemplatesResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConditionTemplate

// string type = 1 [json_name = "type"];
inline void ConditionTemplate::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConditionTemplate::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionTemplate::set_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.type)
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.type)
  return _s;
}
inline const ::std::string& ConditionTemplate::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void ConditionTemplate::_internal_set_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionTemplate::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionTemplate.type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.type_.Set("", GetArena());
  }
  return released;
}
inline void ConditionTemplate::set_allocated_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.type_.IsDefault()) {
    _impl_.type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionTemplate.type)
}

// string name = 2 [json_name = "name"];
inline void ConditionTemplate::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ConditionTemplate::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionTemplate::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.name)
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.name)
  return _s;
}
inline const ::std::string& ConditionTemplate::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ConditionTemplate::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionTemplate::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionTemplate.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void ConditionTemplate::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionTemplate.name)
}

// string description = 3 [json_name = "description"];
inline void ConditionTemplate::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ConditionTemplate::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionTemplate::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.description)
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.description)
  return _s;
}
inline const ::std::string& ConditionTemplate::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void ConditionTemplate::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionTemplate::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionTemplate.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void ConditionTemplate::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionTemplate.description)
}

// string category = 4 [json_name = "category"];
inline void ConditionTemplate::clear_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.category_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& ConditionTemplate::category() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.category)
  return _internal_category();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionTemplate::set_category(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.category_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.category)
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_category()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_category();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.category)
  return _s;
}
inline const ::std::string& ConditionTemplate::_internal_category() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.category_.Get();
}
inline void ConditionTemplate::_internal_set_category(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.category_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.category_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionTemplate::release_category() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionTemplate.category)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.category_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.category_.Set("", GetArena());
  }
  return released;
}
inline void ConditionTemplate::set_allocated_category(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.category_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.category_.IsDefault()) {
    _impl_.category_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionTemplate.category)
}

// .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
inline void ConditionTemplate::clear_default_severity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_severity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::seshat::ConditionSeverity ConditionTemplate::default_severity() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.default_severity)
  return _internal_default_severity();
}
inline void ConditionTemplate::set_default_severity(::seshat::ConditionSeverity value) {
  _internal_set_default_severity(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.default_severity)
}
inline ::seshat::ConditionSeverity ConditionTemplate::_internal_default_severity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::ConditionSeverity>(_impl_.default_severity_);
}
inline void ConditionTemplate::_internal_set_default_severity(::seshat::ConditionSeverity value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_severity_ = value;
}

// .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
inline bool ConditionTemplate::has_default_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.default_duration_ != nullptr);
  return value;
}
inline void ConditionTemplate::clear_default_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default_duration_ != nullptr) _impl_.default_duration_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::seshat::ConditionDuration& ConditionTemplate::_internal_default_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionDuration* p = _impl_.default_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionDuration&>(::seshat::_ConditionDuration_default_instance_);
}
inline const ::seshat::ConditionDuration& ConditionTemplate::default_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.default_duration)
  return _internal_default_duration();
}
inline void ConditionTemplate::unsafe_arena_set_allocated_default_duration(
    ::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_duration_);
  }
  _impl_.default_duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ConditionTemplate.default_duration)
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE ConditionTemplate::release_default_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::ConditionDuration* released = _impl_.default_duration_;
  _impl_.default_duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionDuration* PROTOBUF_NULLABLE ConditionTemplate::unsafe_arena_release_default_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionTemplate.default_duration)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::ConditionDuration* temp = _impl_.default_duration_;
  _impl_.default_duration_ = nullptr;
  return temp;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_default_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.default_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionDuration>(GetArena());
    _impl_.default_duration_ = reinterpret_cast<::seshat::ConditionDuration*>(p);
  }
  return _impl_.default_duration_;
}
inline ::seshat::ConditionDuration* PROTOBUF_NONNULL ConditionTemplate::mutable_default_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::seshat::ConditionDuration* _msg = _internal_mutable_default_duration();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.default_duration)
  return _msg;
}
inline void ConditionTemplate::set_allocated_default_duration(::seshat::ConditionDuration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.default_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.default_duration_ = reinterpret_cast<::seshat::ConditionDuration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionTemplate.default_duration)
}

// repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
inline int ConditionTemplate::_internal_default_effects_size() const {
  return _internal_default_effects().size();
}
inline int ConditionTemplate::default_effects_size() const {
  return _internal_default_effects_size();
}
inline void ConditionTemplate::clear_default_effects() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_effects_.Clear();
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ConditionTemplate::mutable_default_effects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.default_effects)
  return _internal_mutable_default_effects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL ConditionTemplate::mutable_default_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConditionTemplate.default_effects)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_default_effects();
}
inline const ::seshat::ConditionEffect& ConditionTemplate::default_effects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.default_effects)
  return _internal_default_effects().Get(index);
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ConditionTemplate::add_default_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionEffect* _add = _internal_mutable_default_effects()->Add();
  // @@protoc_insertion_point(field_add:seshat.ConditionTemplate.default_effects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& ConditionTemplate::default_effects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConditionTemplate.default_effects)
  return _internal_default_effects();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>&
ConditionTemplate::_internal_default_effects() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_effects_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL
ConditionTemplate::_internal_mutable_default_effects() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.default_effects_;
}

// .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
inline void ConditionTemplate::clear_stacking_behavior() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stacking_behavior_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::seshat::StackingBehavior ConditionTemplate::stacking_behavior() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.stacking_behavior)
  return _internal_stacking_behavior();
}
inline void ConditionTemplate::set_stacking_behavior(::seshat::StackingBehavior value) {
  _internal_set_stacking_behavior(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.stacking_behavior)
}
inline ::seshat::StackingBehavior ConditionTemplate::_internal_stacking_behavior() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::StackingBehavior>(_impl_.stacking_behavior_);
}
inline void ConditionTemplate::_internal_set_stacking_behavior(::seshat::StackingBehavior value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stacking_behavior_ = value;
}

// repeated string conflicts_with = 9 [json_name = "conflictsWith"];
inline int ConditionTemplate::_internal_conflicts_with_size() const {
  return _internal_conflicts_with().size();
}
inline int ConditionTemplate::conflicts_with_size() const {
  return _internal_conflicts_with_size();
}
inline void ConditionTemplate::clear_conflicts_with() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conflicts_with_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::add_conflicts_with()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_conflicts_with()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConditionTemplate.conflicts_with)
  return _s;
}
inline const ::std::string& ConditionTemplate::conflicts_with(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.conflicts_with)
  return _internal_conflicts_with().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_conflicts_with(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.conflicts_with)
  return _internal_mutable_conflicts_with()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConditionTemplate::set_conflicts_with(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_conflicts_with()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.conflicts_with)
}
template <typename Arg_, typename... Args_>
inline void ConditionTemplate::add_conflicts_with(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_conflicts_with(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConditionTemplate.conflicts_with)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConditionTemplate::conflicts_with()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConditionTemplate.conflicts_with)
  return _internal_conflicts_with();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConditionTemplate::mutable_conflicts_with() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConditionTemplate.conflicts_with)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_conflicts_with();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConditionTemplate::_internal_conflicts_with() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conflicts_with_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConditionTemplate::_internal_mutable_conflicts_with() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.conflicts_with_;
}

// repeated string immunities = 10 [json_name = "immunities"];
inline int ConditionTemplate::_internal_immunities_size() const {
  return _internal_immunities().size();
}
inline int ConditionTemplate::immunities_size() const {
  return _internal_immunities_size();
}
inline void ConditionTemplate::clear_immunities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immunities_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::add_immunities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_immunities()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConditionTemplate.immunities)
  return _s;
}
inline const ::std::string& ConditionTemplate::immunities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionTemplate.immunities)
  return _internal_immunities().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConditionTemplate::mutable_immunities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConditionTemplate.immunities)
  return _internal_mutable_immunities()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConditionTemplate::set_immunities(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_immunities()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConditionTemplate.immunities)
}
template <typename Arg_, typename... Args_>
inline void ConditionTemplate::add_immunities(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_immunities(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConditionTemplate.immunities)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConditionTemplate::immunities()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConditionTemplate.immunities)
  return _internal_immunities();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConditionTemplate::mutable_immunities() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConditionTemplate.immunities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_immunities();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConditionTemplate::_internal_immunities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immunities_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConditionTemplate::_internal_mutable_immunities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.immunities_;
}

// map<string, string> properties = 11 [json_name = "properties"];
inline int ConditionTemplate::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int ConditionTemplate::properties_size() const {
  return _internal_properties_size();
}
inline void ConditionTemplate::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionTemplate::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionTemplate::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.ConditionTemplate.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionTemplate::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionTemplate::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.ConditionTemplate.properties)
  return _internal_mutable_properties();
}

// -------------------------------------------------------------------

// CreateConditionTemplateRequest

// .seshat.ConditionTemplate template = 1 [json_name = "template"];
inline bool CreateConditionTemplateRequest::has_template_() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.template__ != nullptr);
  return value;
}
inline void CreateConditionTemplateRequest::clear_template_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.template__ != nullptr) _impl_.template__->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::ConditionTemplate& CreateConditionTemplateRequest::_internal_template_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionTemplate* p = _impl_.template__;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionTemplate&>(::seshat::_ConditionTemplate_default_instance_);
}
inline const ::seshat::ConditionTemplate& CreateConditionTemplateRequest::template_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateConditionTemplateRequest.template)
  return _internal_template_();
}
inline void CreateConditionTemplateRequest::unsafe_arena_set_allocated_template_(
    ::seshat::ConditionTemplate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.template__);
  }
  _impl_.template__ = reinterpret_cast<::seshat::ConditionTemplate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateConditionTemplateRequest.template)
}
inline ::seshat::ConditionTemplate* PROTOBUF_NULLABLE CreateConditionTemplateRequest::release_template_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionTemplate* released = _impl_.template__;
  _impl_.template__ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NULLABLE CreateConditionTemplateRequest::unsafe_arena_release_template_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateConditionTemplateRequest.template)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionTemplate* temp = _impl_.template__;
  _impl_.template__ = nullptr;
  return temp;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL CreateConditionTemplateRequest::_internal_mutable_template_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.template__ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionTemplate>(GetArena());
    _impl_.template__ = reinterpret_cast<::seshat::ConditionTemplate*>(p);
  }
  return _impl_.template__;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL CreateConditionTemplateRequest::mutable_template_()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::ConditionTemplate* _msg = _internal_mutable_template_();
  // @@protoc_insertion_point(field_mutable:seshat.CreateConditionTemplateRequest.template)
  return _msg;
}
inline void CreateConditionTemplateRequest::set_allocated_template_(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.template__);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.template__ = reinterpret_cast<::seshat::ConditionTemplate*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateConditionTemplateRequest.template)
}

// -------------------------------------------------------------------

// CreateConditionTemplateResponse

// .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
inline bool CreateConditionTemplateResponse::has_created_template() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_template_ != nullptr);
  return value;
}
inline void CreateConditionTemplateResponse::clear_created_template() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_template_ != nullptr) _impl_.created_template_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::ConditionTemplate& CreateConditionTemplateResponse::_internal_created_template() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConditionTemplate* p = _impl_.created_template_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConditionTemplate&>(::seshat::_ConditionTemplate_default_instance_);
}
inline const ::seshat::ConditionTemplate& CreateConditionTemplateResponse::created_template() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateConditionTemplateResponse.created_template)
  return _internal_created_template();
}
inline void CreateConditionTemplateResponse::unsafe_arena_set_allocated_created_template(
    ::seshat::ConditionTemplate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_template_);
  }
  _impl_.created_template_ = reinterpret_cast<::seshat::ConditionTemplate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateConditionTemplateResponse.created_template)
}
inline ::seshat::ConditionTemplate* PROTOBUF_NULLABLE CreateConditionTemplateResponse::release_created_template() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionTemplate* released = _impl_.created_template_;
  _impl_.created_template_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NULLABLE CreateConditionTemplateResponse::unsafe_arena_release_created_template() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateConditionTemplateResponse.created_template)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::ConditionTemplate* temp = _impl_.created_template_;
  _impl_.created_template_ = nullptr;
  return temp;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL CreateConditionTemplateResponse::_internal_mutable_created_template() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_template_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConditionTemplate>(GetArena());
    _impl_.created_template_ = reinterpret_cast<::seshat::ConditionTemplate*>(p);
  }
  return _impl_.created_template_;
}
inline ::seshat::ConditionTemplate* PROTOBUF_NONNULL CreateConditionTemplateResponse::mutable_created_template()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::ConditionTemplate* _msg = _internal_mutable_created_template();
  // @@protoc_insertion_point(field_mutable:seshat.CreateConditionTemplateResponse.created_template)
  return _msg;
}
inline void CreateConditionTemplateResponse::set_allocated_created_template(::seshat::ConditionTemplate* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_template_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_template_ = reinterpret_cast<::seshat::ConditionTemplate*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateConditionTemplateResponse.created_template)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool CreateConditionTemplateResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& CreateConditionTemplateResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& CreateConditionTemplateResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateConditionTemplateResponse.status)
  return _internal_status();
}
inline void CreateConditionTemplateResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateConditionTemplateResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateConditionTemplateResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateConditionTemplateResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateConditionTemplateResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateConditionTemplateResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateConditionTemplateResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.CreateConditionTemplateResponse.status)
  return _msg;
}
inline void CreateConditionTemplateResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateConditionTemplateResponse.status)
}

// -------------------------------------------------------------------

// ProcessConditionTickRequest

// string entity_id = 1 [json_name = "entityId"];
inline void ProcessConditionTickRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ProcessConditionTickRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcessConditionTickRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ProcessConditionTickRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ProcessConditionTickRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickRequest.entity_id)
  return _s;
}
inline const ::std::string& ProcessConditionTickRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void ProcessConditionTickRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProcessConditionTickRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProcessConditionTickRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ProcessConditionTickRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ProcessConditionTickRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ProcessConditionTickRequest.entity_id)
}

// string trigger = 2 [json_name = "trigger"];
inline void ProcessConditionTickRequest::clear_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.trigger_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ProcessConditionTickRequest::trigger() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickRequest.trigger)
  return _internal_trigger();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ProcessConditionTickRequest::set_trigger(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.trigger_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ProcessConditionTickRequest.trigger)
}
inline ::std::string* PROTOBUF_NONNULL ProcessConditionTickRequest::mutable_trigger()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_trigger();
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickRequest.trigger)
  return _s;
}
inline const ::std::string& ProcessConditionTickRequest::_internal_trigger() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.trigger_.Get();
}
inline void ProcessConditionTickRequest::_internal_set_trigger(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.trigger_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ProcessConditionTickRequest::_internal_mutable_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.trigger_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ProcessConditionTickRequest::release_trigger() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ProcessConditionTickRequest.trigger)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.trigger_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.trigger_.Set("", GetArena());
  }
  return released;
}
inline void ProcessConditionTickRequest::set_allocated_trigger(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.trigger_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.trigger_.IsDefault()) {
    _impl_.trigger_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ProcessConditionTickRequest.trigger)
}

// int64 current_timestamp = 3 [json_name = "currentTimestamp"];
inline void ProcessConditionTickRequest::clear_current_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t ProcessConditionTickRequest::current_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickRequest.current_timestamp)
  return _internal_current_timestamp();
}
inline void ProcessConditionTickRequest::set_current_timestamp(::int64_t value) {
  _internal_set_current_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.ProcessConditionTickRequest.current_timestamp)
}
inline ::int64_t ProcessConditionTickRequest::_internal_current_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_timestamp_;
}
inline void ProcessConditionTickRequest::_internal_set_current_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_timestamp_ = value;
}

// -------------------------------------------------------------------

// ProcessConditionTickResponse

// repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
inline int ProcessConditionTickResponse::_internal_expired_conditions_size() const {
  return _internal_expired_conditions().size();
}
inline int ProcessConditionTickResponse::expired_conditions_size() const {
  return _internal_expired_conditions_size();
}
inline void ProcessConditionTickResponse::clear_expired_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expired_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_expired_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickResponse.expired_conditions)
  return _internal_mutable_expired_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_expired_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ProcessConditionTickResponse.expired_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_expired_conditions();
}
inline const ::seshat::Condition& ProcessConditionTickResponse::expired_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickResponse.expired_conditions)
  return _internal_expired_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL ProcessConditionTickResponse::add_expired_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_expired_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ProcessConditionTickResponse.expired_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& ProcessConditionTickResponse::expired_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ProcessConditionTickResponse.expired_conditions)
  return _internal_expired_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
ProcessConditionTickResponse::_internal_expired_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expired_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
ProcessConditionTickResponse::_internal_mutable_expired_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.expired_conditions_;
}

// repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
inline int ProcessConditionTickResponse::_internal_triggered_conditions_size() const {
  return _internal_triggered_conditions().size();
}
inline int ProcessConditionTickResponse::triggered_conditions_size() const {
  return _internal_triggered_conditions_size();
}
inline void ProcessConditionTickResponse::clear_triggered_conditions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.triggered_conditions_.Clear();
}
inline ::seshat::Condition* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_triggered_conditions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickResponse.triggered_conditions)
  return _internal_mutable_triggered_conditions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_triggered_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ProcessConditionTickResponse.triggered_conditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_triggered_conditions();
}
inline const ::seshat::Condition& ProcessConditionTickResponse::triggered_conditions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickResponse.triggered_conditions)
  return _internal_triggered_conditions().Get(index);
}
inline ::seshat::Condition* PROTOBUF_NONNULL ProcessConditionTickResponse::add_triggered_conditions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Condition* _add = _internal_mutable_triggered_conditions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ProcessConditionTickResponse.triggered_conditions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>& ProcessConditionTickResponse::triggered_conditions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ProcessConditionTickResponse.triggered_conditions)
  return _internal_triggered_conditions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Condition>&
ProcessConditionTickResponse::_internal_triggered_conditions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.triggered_conditions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Condition>* PROTOBUF_NONNULL
ProcessConditionTickResponse::_internal_mutable_triggered_conditions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.triggered_conditions_;
}

// repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
inline int ProcessConditionTickResponse::_internal_applied_effects_size() const {
  return _internal_applied_effects().size();
}
inline int ProcessConditionTickResponse::applied_effects_size() const {
  return _internal_applied_effects_size();
}
inline void ProcessConditionTickResponse::clear_applied_effects() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.applied_effects_.Clear();
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_applied_effects(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickResponse.applied_effects)
  return _internal_mutable_applied_effects()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_applied_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ProcessConditionTickResponse.applied_effects)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_applied_effects();
}
inline const ::seshat::ConditionEffect& ProcessConditionTickResponse::applied_effects(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickResponse.applied_effects)
  return _internal_applied_effects().Get(index);
}
inline ::seshat::ConditionEffect* PROTOBUF_NONNULL ProcessConditionTickResponse::add_applied_effects()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionEffect* _add = _internal_mutable_applied_effects()->Add();
  // @@protoc_insertion_point(field_add:seshat.ProcessConditionTickResponse.applied_effects)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>& ProcessConditionTickResponse::applied_effects() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ProcessConditionTickResponse.applied_effects)
  return _internal_applied_effects();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>&
ProcessConditionTickResponse::_internal_applied_effects() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.applied_effects_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionEffect>* PROTOBUF_NONNULL
ProcessConditionTickResponse::_internal_mutable_applied_effects() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.applied_effects_;
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool ProcessConditionTickResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& ProcessConditionTickResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& ProcessConditionTickResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ProcessConditionTickResponse.status)
  return _internal_status();
}
inline void ProcessConditionTickResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ProcessConditionTickResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE ProcessConditionTickResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE ProcessConditionTickResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ProcessConditionTickResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL ProcessConditionTickResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL ProcessConditionTickResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.ProcessConditionTickResponse.status)
  return _msg;
}
inline void ProcessConditionTickResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ProcessConditionTickResponse.status)
}

// -------------------------------------------------------------------

// GetConditionHistoryRequest

// string entity_id = 1 [json_name = "entityId"];
inline void GetConditionHistoryRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetConditionHistoryRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetConditionHistoryRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetConditionHistoryRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL GetConditionHistoryRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionHistoryRequest.entity_id)
  return _s;
}
inline const ::std::string& GetConditionHistoryRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void GetConditionHistoryRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetConditionHistoryRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetConditionHistoryRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionHistoryRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void GetConditionHistoryRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionHistoryRequest.entity_id)
}

// int32 limit = 2 [json_name = "limit"];
inline void GetConditionHistoryRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GetConditionHistoryRequest::limit() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryRequest.limit)
  return _internal_limit();
}
inline void GetConditionHistoryRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionHistoryRequest.limit)
}
inline ::int32_t GetConditionHistoryRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetConditionHistoryRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
inline void GetConditionHistoryRequest::clear_since_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int64_t GetConditionHistoryRequest::since_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryRequest.since_timestamp)
  return _internal_since_timestamp();
}
inline void GetConditionHistoryRequest::set_since_timestamp(::int64_t value) {
  _internal_set_since_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionHistoryRequest.since_timestamp)
}
inline ::int64_t GetConditionHistoryRequest::_internal_since_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.since_timestamp_;
}
inline void GetConditionHistoryRequest::_internal_set_since_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = value;
}

// repeated string condition_types = 4 [json_name = "conditionTypes"];
inline int GetConditionHistoryRequest::_internal_condition_types_size() const {
  return _internal_condition_types().size();
}
inline int GetConditionHistoryRequest::condition_types_size() const {
  return _internal_condition_types_size();
}
inline void GetConditionHistoryRequest::clear_condition_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.condition_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetConditionHistoryRequest::add_condition_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_condition_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetConditionHistoryRequest.condition_types)
  return _s;
}
inline const ::std::string& GetConditionHistoryRequest::condition_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryRequest.condition_types)
  return _internal_condition_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetConditionHistoryRequest::mutable_condition_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionHistoryRequest.condition_types)
  return _internal_mutable_condition_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetConditionHistoryRequest::set_condition_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_condition_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetConditionHistoryRequest.condition_types)
}
template <typename Arg_, typename... Args_>
inline void GetConditionHistoryRequest::add_condition_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_condition_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetConditionHistoryRequest.condition_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetConditionHistoryRequest::condition_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionHistoryRequest.condition_types)
  return _internal_condition_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetConditionHistoryRequest::mutable_condition_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionHistoryRequest.condition_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_condition_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetConditionHistoryRequest::_internal_condition_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.condition_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetConditionHistoryRequest::_internal_mutable_condition_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.condition_types_;
}

// -------------------------------------------------------------------

// GetConditionHistoryResponse

// repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
inline int GetConditionHistoryResponse::_internal_history_size() const {
  return _internal_history().size();
}
inline int GetConditionHistoryResponse::history_size() const {
  return _internal_history_size();
}
inline void GetConditionHistoryResponse::clear_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_.Clear();
}
inline ::seshat::ConditionHistoryEntry* PROTOBUF_NONNULL GetConditionHistoryResponse::mutable_history(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionHistoryResponse.history)
  return _internal_mutable_history()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>* PROTOBUF_NONNULL GetConditionHistoryResponse::mutable_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetConditionHistoryResponse.history)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_history();
}
inline const ::seshat::ConditionHistoryEntry& GetConditionHistoryResponse::history(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryResponse.history)
  return _internal_history().Get(index);
}
inline ::seshat::ConditionHistoryEntry* PROTOBUF_NONNULL GetConditionHistoryResponse::add_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::ConditionHistoryEntry* _add = _internal_mutable_history()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetConditionHistoryResponse.history)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>& GetConditionHistoryResponse::history() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetConditionHistoryResponse.history)
  return _internal_history();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>&
GetConditionHistoryResponse::_internal_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::ConditionHistoryEntry>* PROTOBUF_NONNULL
GetConditionHistoryResponse::_internal_mutable_history() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.history_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void GetConditionHistoryResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GetConditionHistoryResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryResponse.total_count)
  return _internal_total_count();
}
inline void GetConditionHistoryResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetConditionHistoryResponse.total_count)
}
inline ::int32_t GetConditionHistoryResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetConditionHistoryResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool GetConditionHistoryResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetConditionHistoryResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetConditionHistoryResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetConditionHistoryResponse.status)
  return _internal_status();
}
inline void GetConditionHistoryResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetConditionHistoryResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionHistoryResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetConditionHistoryResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetConditionHistoryResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionHistoryResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetConditionHistoryResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetConditionHistoryResponse.status)
  return _msg;
}
inline void GetConditionHistoryResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetConditionHistoryResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConditionHistoryEntry

// .seshat.Condition condition = 1 [json_name = "condition"];
inline bool ConditionHistoryEntry::has_condition() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.condition_ != nullptr);
  return value;
}
inline void ConditionHistoryEntry::clear_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.condition_ != nullptr) _impl_.condition_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::seshat::Condition& ConditionHistoryEntry::_internal_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Condition* p = _impl_.condition_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Condition&>(::seshat::_Condition_default_instance_);
}
inline const ::seshat::Condition& ConditionHistoryEntry::condition() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionHistoryEntry.condition)
  return _internal_condition();
}
inline void ConditionHistoryEntry::unsafe_arena_set_allocated_condition(
    ::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }
  _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ConditionHistoryEntry.condition)
}
inline ::seshat::Condition* PROTOBUF_NULLABLE ConditionHistoryEntry::release_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Condition* released = _impl_.condition_;
  _impl_.condition_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Condition* PROTOBUF_NULLABLE ConditionHistoryEntry::unsafe_arena_release_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionHistoryEntry.condition)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Condition* temp = _impl_.condition_;
  _impl_.condition_ = nullptr;
  return temp;
}
inline ::seshat::Condition* PROTOBUF_NONNULL ConditionHistoryEntry::_internal_mutable_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.condition_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Condition>(GetArena());
    _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(p);
  }
  return _impl_.condition_;
}
inline ::seshat::Condition* PROTOBUF_NONNULL ConditionHistoryEntry::mutable_condition()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::Condition* _msg = _internal_mutable_condition();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionHistoryEntry.condition)
  return _msg;
}
inline void ConditionHistoryEntry::set_allocated_condition(::seshat::Condition* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.condition_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.condition_ = reinterpret_cast<::seshat::Condition*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionHistoryEntry.condition)
}

// string action = 2 [json_name = "action"];
inline void ConditionHistoryEntry::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ConditionHistoryEntry::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionHistoryEntry.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionHistoryEntry::set_action(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionHistoryEntry.action)
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionHistoryEntry.action)
  return _s;
}
inline const ::std::string& ConditionHistoryEntry::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void ConditionHistoryEntry::_internal_set_action(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.action_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.action_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionHistoryEntry::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionHistoryEntry.action)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.action_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.action_.Set("", GetArena());
  }
  return released;
}
inline void ConditionHistoryEntry::set_allocated_action(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionHistoryEntry.action)
}

// int64 timestamp = 3 [json_name = "timestamp"];
inline void ConditionHistoryEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t ConditionHistoryEntry::timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.ConditionHistoryEntry.timestamp)
  return _internal_timestamp();
}
inline void ConditionHistoryEntry::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.ConditionHistoryEntry.timestamp)
}
inline ::int64_t ConditionHistoryEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ConditionHistoryEntry::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string reason = 4 [json_name = "reason"];
inline void ConditionHistoryEntry::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ConditionHistoryEntry::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionHistoryEntry.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionHistoryEntry::set_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionHistoryEntry.reason)
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::mutable_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionHistoryEntry.reason)
  return _s;
}
inline const ::std::string& ConditionHistoryEntry::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void ConditionHistoryEntry::_internal_set_reason(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.reason_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionHistoryEntry::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionHistoryEntry.reason)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reason_.Set("", GetArena());
  }
  return released;
}
inline void ConditionHistoryEntry::set_allocated_reason(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionHistoryEntry.reason)
}

// string source_entity_id = 5 [json_name = "sourceEntityId"];
inline void ConditionHistoryEntry::clear_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& ConditionHistoryEntry::source_entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConditionHistoryEntry.source_entity_id)
  return _internal_source_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConditionHistoryEntry::set_source_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ConditionHistoryEntry.source_entity_id)
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::mutable_source_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_source_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.ConditionHistoryEntry.source_entity_id)
  return _s;
}
inline const ::std::string& ConditionHistoryEntry::_internal_source_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_entity_id_.Get();
}
inline void ConditionHistoryEntry::_internal_set_source_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.source_entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConditionHistoryEntry::_internal_mutable_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.source_entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConditionHistoryEntry::release_source_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConditionHistoryEntry.source_entity_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.source_entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  return released;
}
inline void ConditionHistoryEntry::set_allocated_source_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.source_entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.source_entity_id_.IsDefault()) {
    _impl_.source_entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ConditionHistoryEntry.source_entity_id)
}

// map<string, string> details = 6 [json_name = "details"];
inline int ConditionHistoryEntry::_internal_details_size() const {
  return _internal_details().size();
}
inline int ConditionHistoryEntry::details_size() const {
  return _internal_details_size();
}
inline void ConditionHistoryEntry::clear_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.details_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionHistoryEntry::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.details_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConditionHistoryEntry::details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.ConditionHistoryEntry.details)
  return _internal_details();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionHistoryEntry::_internal_mutable_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.details_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConditionHistoryEntry::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.ConditionHistoryEntry.details)
  return _internal_mutable_details();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seshat::ConditionSeverity> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::ConditionSeverity>() {
  return ::seshat::ConditionSeverity_descriptor();
}
template <>
struct is_proto_enum<::seshat::DurationType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::DurationType>() {
  return ::seshat::DurationType_descriptor();
}
template <>
struct is_proto_enum<::seshat::StackingBehavior> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::StackingBehavior>() {
  return ::seshat::StackingBehavior_descriptor();
}
template <>
struct is_proto_enum<::seshat::EffectOperation> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::EffectOperation>() {
  return ::seshat::EffectOperation_descriptor();
}
template <>
struct is_proto_enum<::seshat::RemovalReason> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::RemovalReason>() {
  return ::seshat::RemovalReason_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // seshat_2fconditions_2eproto_2epb_2eh
