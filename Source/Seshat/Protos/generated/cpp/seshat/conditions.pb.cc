// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/conditions.proto
// Protobuf C++ Version: 6.31.1

#include "seshat/conditions.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace seshat {

inline constexpr RemoveConditionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_{static_cast< ::seshat::RemovalReason >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveConditionRequest::RemoveConditionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveConditionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveConditionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveConditionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveConditionRequestDefaultTypeInternal() {}
  union {
    RemoveConditionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveConditionRequestDefaultTypeInternal _RemoveConditionRequest_default_instance_;

inline constexpr ProcessConditionTickRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trigger_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        current_timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ProcessConditionTickRequest::ProcessConditionTickRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProcessConditionTickRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProcessConditionTickRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessConditionTickRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessConditionTickRequestDefaultTypeInternal() {}
  union {
    ProcessConditionTickRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessConditionTickRequestDefaultTypeInternal _ProcessConditionTickRequest_default_instance_;

inline constexpr HasConditionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        active_only_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HasConditionRequest::HasConditionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HasConditionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HasConditionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HasConditionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HasConditionRequestDefaultTypeInternal() {}
  union {
    HasConditionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HasConditionRequestDefaultTypeInternal _HasConditionRequest_default_instance_;

inline constexpr GetConflictingConditionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetConflictingConditionsRequest::GetConflictingConditionsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConflictingConditionsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConflictingConditionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConflictingConditionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConflictingConditionsRequestDefaultTypeInternal() {}
  union {
    GetConflictingConditionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConflictingConditionsRequestDefaultTypeInternal _GetConflictingConditionsRequest_default_instance_;

inline constexpr GetConditionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_types_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        active_only_{false} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionsRequest::GetConditionsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionsRequestDefaultTypeInternal() {}
  union {
    GetConditionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionsRequestDefaultTypeInternal _GetConditionsRequest_default_instance_;

inline constexpr GetConditionsByTypeRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        active_only_{false},
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionsByTypeRequest::GetConditionsByTypeRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionsByTypeRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionsByTypeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionsByTypeRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionsByTypeRequestDefaultTypeInternal() {}
  union {
    GetConditionsByTypeRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionsByTypeRequestDefaultTypeInternal _GetConditionsByTypeRequest_default_instance_;

inline constexpr GetConditionTemplatesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        system_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionTemplatesRequest::GetConditionTemplatesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionTemplatesRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionTemplatesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionTemplatesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionTemplatesRequestDefaultTypeInternal() {}
  union {
    GetConditionTemplatesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionTemplatesRequestDefaultTypeInternal _GetConditionTemplatesRequest_default_instance_;

inline constexpr GetConditionHistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_types_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        since_timestamp_{::int64_t{0}},
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionHistoryRequest::GetConditionHistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionHistoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionHistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionHistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionHistoryRequestDefaultTypeInternal() {}
  union {
    GetConditionHistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionHistoryRequestDefaultTypeInternal _GetConditionHistoryRequest_default_instance_;

inline constexpr GetActiveConditionsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_ids_{},
        as_of_timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR GetActiveConditionsRequest::GetActiveConditionsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetActiveConditionsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetActiveConditionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetActiveConditionsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetActiveConditionsRequestDefaultTypeInternal() {}
  union {
    GetActiveConditionsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetActiveConditionsRequestDefaultTypeInternal _GetActiveConditionsRequest_default_instance_;

inline constexpr ConflictResolution::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        affected_condition_ids_{},
        conflict_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ConflictResolution::ConflictResolution(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConflictResolution_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConflictResolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConflictResolutionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConflictResolutionDefaultTypeInternal() {}
  union {
    ConflictResolution _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConflictResolutionDefaultTypeInternal _ConflictResolution_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConditionTemplate_PropertiesEntry_DoNotUse::ConditionTemplate_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConditionTemplate_PropertiesEntry_DoNotUse::MapEntry(ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConditionTemplate_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConditionTemplate_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionTemplate_PropertiesEntry_DoNotUseDefaultTypeInternal _ConditionTemplate_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConditionParameters_PropertiesEntry_DoNotUse::ConditionParameters_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConditionParameters_PropertiesEntry_DoNotUse::MapEntry(ConditionParameters_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConditionParameters_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConditionParameters_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionParameters_PropertiesEntry_DoNotUseDefaultTypeInternal _ConditionParameters_PropertiesEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConditionHistoryEntry_DetailsEntry_DoNotUse::ConditionHistoryEntry_DetailsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConditionHistoryEntry_DetailsEntry_DoNotUse::MapEntry(ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConditionHistoryEntry_DetailsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConditionHistoryEntry_DetailsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal _ConditionHistoryEntry_DetailsEntry_DoNotUse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR ConditionEffect_ParametersEntry_DoNotUse::ConditionEffect_ParametersEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ConditionEffect_ParametersEntry_DoNotUse::MapEntry(ConditionEffect_ParametersEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ConditionEffect_ParametersEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal() {}
  union {
    ConditionEffect_ParametersEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionEffect_ParametersEntry_DoNotUseDefaultTypeInternal _ConditionEffect_ParametersEntry_DoNotUse_default_instance_;

inline constexpr ConditionDuration::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        trigger_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{static_cast< ::seshat::DurationType >(0)},
        value_{0},
        permanent_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionDuration::ConditionDuration(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConditionDuration_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionDurationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionDurationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionDurationDefaultTypeInternal() {}
  union {
    ConditionDuration _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionDurationDefaultTypeInternal _ConditionDuration_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR Condition_PropertiesEntry_DoNotUse::Condition_PropertiesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : Condition_PropertiesEntry_DoNotUse::MapEntry(Condition_PropertiesEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : Condition_PropertiesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct Condition_PropertiesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Condition_PropertiesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Condition_PropertiesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    Condition_PropertiesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Condition_PropertiesEntry_DoNotUseDefaultTypeInternal _Condition_PropertiesEntry_DoNotUse_default_instance_;

inline constexpr CheckImmunityRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR CheckImmunityRequest::CheckImmunityRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CheckImmunityRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CheckImmunityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckImmunityRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckImmunityRequestDefaultTypeInternal() {}
  union {
    CheckImmunityRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckImmunityRequestDefaultTypeInternal _CheckImmunityRequest_default_instance_;

inline constexpr ResolveConflictsRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        resolutions_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ResolveConflictsRequest::ResolveConflictsRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResolveConflictsRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResolveConflictsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveConflictsRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveConflictsRequestDefaultTypeInternal() {}
  union {
    ResolveConflictsRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveConflictsRequestDefaultTypeInternal _ResolveConflictsRequest_default_instance_;

inline constexpr ConditionEffect::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        parameters_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        operation_{static_cast< ::seshat::EffectOperation >(0)},
        value_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionEffect::ConditionEffect(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConditionEffect_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionEffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionEffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionEffectDefaultTypeInternal() {}
  union {
    ConditionEffect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionEffectDefaultTypeInternal _ConditionEffect_default_instance_;

inline constexpr ConditionTemplate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        default_effects_{},
        conflicts_with_{},
        immunities_{},
        properties_{},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        default_duration_{nullptr},
        default_severity_{static_cast< ::seshat::ConditionSeverity >(0)},
        stacking_behavior_{static_cast< ::seshat::StackingBehavior >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionTemplate::ConditionTemplate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConditionTemplate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionTemplateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionTemplateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionTemplateDefaultTypeInternal() {}
  union {
    ConditionTemplate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionTemplateDefaultTypeInternal _ConditionTemplate_default_instance_;

inline constexpr ConditionParameters::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        custom_effects_{},
        properties_{},
        duration_{nullptr},
        severity_{static_cast< ::seshat::ConditionSeverity >(0)},
        stack_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionParameters::ConditionParameters(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConditionParameters_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionParametersDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionParametersDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionParametersDefaultTypeInternal() {}
  union {
    ConditionParameters _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionParametersDefaultTypeInternal _ConditionParameters_default_instance_;

inline constexpr Condition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        effects_{},
        properties_{},
        id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        target_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_{nullptr},
        severity_{static_cast< ::seshat::ConditionSeverity >(0)},
        is_active_{false},
        applied_timestamp_{::int64_t{0}},
        expires_timestamp_{::int64_t{0}},
        stack_count_{0},
        max_stacks_{0},
        stacking_behavior_{static_cast< ::seshat::StackingBehavior >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Condition::Condition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Condition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionDefaultTypeInternal() {}
  union {
    Condition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionDefaultTypeInternal _Condition_default_instance_;

inline constexpr UpdateConditionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        updated_condition_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateConditionResponse::UpdateConditionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateConditionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateConditionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateConditionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateConditionResponseDefaultTypeInternal() {}
  union {
    UpdateConditionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateConditionResponseDefaultTypeInternal _UpdateConditionResponse_default_instance_;

inline constexpr UpdateConditionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        updates_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR UpdateConditionRequest::UpdateConditionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UpdateConditionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UpdateConditionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateConditionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateConditionRequestDefaultTypeInternal() {}
  union {
    UpdateConditionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateConditionRequestDefaultTypeInternal _UpdateConditionRequest_default_instance_;

inline constexpr ResolveConflictsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        removed_conditions_{},
        modified_conditions_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ResolveConflictsResponse::ResolveConflictsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ResolveConflictsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ResolveConflictsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResolveConflictsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResolveConflictsResponseDefaultTypeInternal() {}
  union {
    ResolveConflictsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResolveConflictsResponseDefaultTypeInternal _ResolveConflictsResponse_default_instance_;

inline constexpr RemoveConditionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        removed_condition_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR RemoveConditionResponse::RemoveConditionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RemoveConditionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RemoveConditionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveConditionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveConditionResponseDefaultTypeInternal() {}
  union {
    RemoveConditionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveConditionResponseDefaultTypeInternal _RemoveConditionResponse_default_instance_;

inline constexpr ProcessConditionTickResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        expired_conditions_{},
        triggered_conditions_{},
        applied_effects_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ProcessConditionTickResponse::ProcessConditionTickResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ProcessConditionTickResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ProcessConditionTickResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessConditionTickResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessConditionTickResponseDefaultTypeInternal() {}
  union {
    ProcessConditionTickResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessConditionTickResponseDefaultTypeInternal _ProcessConditionTickResponse_default_instance_;

inline constexpr HasConditionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        condition_{nullptr},
        status_{nullptr},
        has_condition_{false} {}

template <typename>
PROTOBUF_CONSTEXPR HasConditionResponse::HasConditionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HasConditionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HasConditionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HasConditionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HasConditionResponseDefaultTypeInternal() {}
  union {
    HasConditionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HasConditionResponseDefaultTypeInternal _HasConditionResponse_default_instance_;

inline constexpr GetConflictingConditionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conflicting_conditions_{},
        suggested_resolutions_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetConflictingConditionsResponse::GetConflictingConditionsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConflictingConditionsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConflictingConditionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConflictingConditionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConflictingConditionsResponseDefaultTypeInternal() {}
  union {
    GetConflictingConditionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConflictingConditionsResponseDefaultTypeInternal _GetConflictingConditionsResponse_default_instance_;

inline constexpr GetConditionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conditions_{},
        status_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionsResponse::GetConditionsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionsResponseDefaultTypeInternal() {}
  union {
    GetConditionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionsResponseDefaultTypeInternal _GetConditionsResponse_default_instance_;

inline constexpr GetConditionsByTypeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conditions_{},
        status_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionsByTypeResponse::GetConditionsByTypeResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionsByTypeResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionsByTypeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionsByTypeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionsByTypeResponseDefaultTypeInternal() {}
  union {
    GetConditionsByTypeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionsByTypeResponseDefaultTypeInternal _GetConditionsByTypeResponse_default_instance_;

inline constexpr GetConditionTemplatesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        templates_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionTemplatesResponse::GetConditionTemplatesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionTemplatesResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionTemplatesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionTemplatesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionTemplatesResponseDefaultTypeInternal() {}
  union {
    GetConditionTemplatesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionTemplatesResponseDefaultTypeInternal _GetConditionTemplatesResponse_default_instance_;

inline constexpr EntityConditions::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conditions_{},
        entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_conditions_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EntityConditions::EntityConditions(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EntityConditions_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EntityConditionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EntityConditionsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EntityConditionsDefaultTypeInternal() {}
  union {
    EntityConditions _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EntityConditionsDefaultTypeInternal _EntityConditions_default_instance_;

inline constexpr CreateConditionTemplateResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        created_template_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateConditionTemplateResponse::CreateConditionTemplateResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateConditionTemplateResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateConditionTemplateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateConditionTemplateResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateConditionTemplateResponseDefaultTypeInternal() {}
  union {
    CreateConditionTemplateResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateConditionTemplateResponseDefaultTypeInternal _CreateConditionTemplateResponse_default_instance_;

inline constexpr CreateConditionTemplateRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        template__{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR CreateConditionTemplateRequest::CreateConditionTemplateRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CreateConditionTemplateRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CreateConditionTemplateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateConditionTemplateRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateConditionTemplateRequestDefaultTypeInternal() {}
  union {
    CreateConditionTemplateRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateConditionTemplateRequestDefaultTypeInternal _CreateConditionTemplateRequest_default_instance_;

inline constexpr ConditionHistoryEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{},
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_{nullptr},
        timestamp_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR ConditionHistoryEntry::ConditionHistoryEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConditionHistoryEntry_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConditionHistoryEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConditionHistoryEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConditionHistoryEntryDefaultTypeInternal() {}
  union {
    ConditionHistoryEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConditionHistoryEntryDefaultTypeInternal _ConditionHistoryEntry_default_instance_;

inline constexpr CheckImmunityResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        immunity_sources_{},
        status_{nullptr},
        is_immune_{false} {}

template <typename>
PROTOBUF_CONSTEXPR CheckImmunityResponse::CheckImmunityResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CheckImmunityResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CheckImmunityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckImmunityResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckImmunityResponseDefaultTypeInternal() {}
  union {
    CheckImmunityResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckImmunityResponseDefaultTypeInternal _CheckImmunityResponse_default_instance_;

inline constexpr ApplyConditionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        warnings_{},
        conflicting_conditions_{},
        applied_condition_{nullptr},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ApplyConditionResponse::ApplyConditionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ApplyConditionResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ApplyConditionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApplyConditionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApplyConditionResponseDefaultTypeInternal() {}
  union {
    ApplyConditionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApplyConditionResponseDefaultTypeInternal _ApplyConditionResponse_default_instance_;

inline constexpr ApplyConditionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        target_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        condition_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        source_entity_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parameters_{nullptr},
        force_apply_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ApplyConditionRequest::ApplyConditionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ApplyConditionRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ApplyConditionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ApplyConditionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ApplyConditionRequestDefaultTypeInternal() {}
  union {
    ApplyConditionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ApplyConditionRequestDefaultTypeInternal _ApplyConditionRequest_default_instance_;

inline constexpr GetConditionHistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        history_{},
        status_{nullptr},
        total_count_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GetConditionHistoryResponse::GetConditionHistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetConditionHistoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetConditionHistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetConditionHistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetConditionHistoryResponseDefaultTypeInternal() {}
  union {
    GetConditionHistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetConditionHistoryResponseDefaultTypeInternal _GetConditionHistoryResponse_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::MapEntry(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetActiveConditionsResponse_EntityConditionsEntry_DoNotUseDefaultTypeInternal _GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_default_instance_;

inline constexpr GetActiveConditionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        entity_conditions_{},
        status_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR GetActiveConditionsResponse::GetActiveConditionsResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(GetActiveConditionsResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GetActiveConditionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetActiveConditionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetActiveConditionsResponseDefaultTypeInternal() {}
  union {
    GetActiveConditionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetActiveConditionsResponseDefaultTypeInternal _GetActiveConditionsResponse_default_instance_;
}  // namespace seshat
static const ::_pb::EnumDescriptor* PROTOBUF_NONNULL
    file_level_enum_descriptors_seshat_2fconditions_2eproto[5];
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_seshat_2fconditions_2eproto = nullptr;
const ::uint32_t
    TableStruct_seshat_2fconditions_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::Condition_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::Condition_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_._has_bits_),
        19, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.target_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.source_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.effects_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.applied_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.expires_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.is_active_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.stack_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.max_stacks_),
        PROTOBUF_FIELD_OFFSET(::seshat::Condition, _impl_.stacking_behavior_),
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        6,
        ~0u,
        ~0u,
        9,
        10,
        8,
        11,
        12,
        13,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionDuration, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionDuration, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionDuration, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionDuration, _impl_.trigger_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionDuration, _impl_.permanent_),
        1,
        2,
        0,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect_ParametersEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect_ParametersEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect_ParametersEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.target_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.operation_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionEffect, _impl_.parameters_),
        0,
        1,
        3,
        4,
        2,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_.target_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_.parameters_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_.source_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionRequest, _impl_.force_apply_),
        0,
        1,
        3,
        2,
        4,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionResponse, _impl_.applied_condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionResponse, _impl_.warnings_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionResponse, _impl_.conflicting_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::ApplyConditionResponse, _impl_.status_),
        0,
        ~0u,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_.severity_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_.duration_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_.custom_effects_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_.properties_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionParameters, _impl_.stack_count_),
        1,
        0,
        ~0u,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionRequest, _impl_.condition_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionRequest, _impl_.target_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionRequest, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionRequest, _impl_.reason_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionResponse, _impl_.removed_condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::RemoveConditionResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionRequest, _impl_.condition_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionRequest, _impl_.updates_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionResponse, _impl_.updated_condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::UpdateConditionResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsRequest, _impl_.active_only_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsRequest, _impl_.condition_types_),
        0,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsResponse, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsResponse, _impl_.status_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionRequest, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionRequest, _impl_.active_only_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionResponse, _impl_.has_condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionResponse, _impl_.condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::HasConditionResponse, _impl_.status_),
        2,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeRequest, _impl_.condition_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeRequest, _impl_.active_only_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeRequest, _impl_.limit_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeResponse, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionsByTypeResponse, _impl_.status_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsRequest, _impl_.entity_ids_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsRequest, _impl_.as_of_timestamp_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse, _impl_.entity_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetActiveConditionsResponse, _impl_.status_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::EntityConditions, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::EntityConditions, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::EntityConditions, _impl_.conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::EntityConditions, _impl_.total_conditions_),
        0,
        ~0u,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityRequest, _impl_.condition_type_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityResponse, _impl_.is_immune_),
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityResponse, _impl_.immunity_sources_),
        PROTOBUF_FIELD_OFFSET(::seshat::CheckImmunityResponse, _impl_.status_),
        1,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsRequest, _impl_.new_condition_type_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsResponse, _impl_.conflicting_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsResponse, _impl_.suggested_resolutions_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConflictingConditionsResponse, _impl_.status_),
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConflictResolution, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConflictResolution, _impl_.conflict_type_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConflictResolution, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConflictResolution, _impl_.affected_condition_ids_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConflictResolution, _impl_.reason_),
        0,
        1,
        ~0u,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsRequest, _impl_.resolutions_),
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsResponse, _impl_.removed_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsResponse, _impl_.modified_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::ResolveConflictsResponse, _impl_.status_),
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesRequest, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesRequest, _impl_.system_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesResponse, _impl_.templates_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionTemplatesResponse, _impl_.status_),
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate_PropertiesEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_._has_bits_),
        14, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.description_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.default_severity_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.default_duration_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.default_effects_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.stacking_behavior_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.conflicts_with_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.immunities_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionTemplate, _impl_.properties_),
        0,
        1,
        2,
        3,
        5,
        4,
        ~0u,
        6,
        ~0u,
        ~0u,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CreateConditionTemplateRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CreateConditionTemplateRequest, _impl_.template__),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::CreateConditionTemplateResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::CreateConditionTemplateResponse, _impl_.created_template_),
        PROTOBUF_FIELD_OFFSET(::seshat::CreateConditionTemplateResponse, _impl_.status_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickRequest, _impl_.trigger_),
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickRequest, _impl_.current_timestamp_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickResponse, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickResponse, _impl_.expired_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickResponse, _impl_.triggered_conditions_),
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickResponse, _impl_.applied_effects_),
        PROTOBUF_FIELD_OFFSET(::seshat::ProcessConditionTickResponse, _impl_.status_),
        ~0u,
        ~0u,
        ~0u,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryRequest, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryRequest, _impl_.entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryRequest, _impl_.limit_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryRequest, _impl_.since_timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryRequest, _impl_.condition_types_),
        0,
        2,
        1,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryResponse, _impl_.history_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryResponse, _impl_.total_count_),
        PROTOBUF_FIELD_OFFSET(::seshat::GetConditionHistoryResponse, _impl_.status_),
        ~0u,
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.condition_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.reason_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.source_entity_id_),
        PROTOBUF_FIELD_OFFSET(::seshat::ConditionHistoryEntry, _impl_.details_),
        3,
        0,
        4,
        1,
        2,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::seshat::Condition_PropertiesEntry_DoNotUse)},
        {7, sizeof(::seshat::Condition)},
        {42, sizeof(::seshat::ConditionDuration)},
        {53, sizeof(::seshat::ConditionEffect_ParametersEntry_DoNotUse)},
        {60, sizeof(::seshat::ConditionEffect)},
        {75, sizeof(::seshat::ApplyConditionRequest)},
        {88, sizeof(::seshat::ApplyConditionResponse)},
        {99, sizeof(::seshat::ConditionParameters_PropertiesEntry_DoNotUse)},
        {106, sizeof(::seshat::ConditionParameters)},
        {119, sizeof(::seshat::RemoveConditionRequest)},
        {130, sizeof(::seshat::RemoveConditionResponse)},
        {137, sizeof(::seshat::UpdateConditionRequest)},
        {144, sizeof(::seshat::UpdateConditionResponse)},
        {151, sizeof(::seshat::GetConditionsRequest)},
        {160, sizeof(::seshat::GetConditionsResponse)},
        {169, sizeof(::seshat::HasConditionRequest)},
        {178, sizeof(::seshat::HasConditionResponse)},
        {187, sizeof(::seshat::GetConditionsByTypeRequest)},
        {196, sizeof(::seshat::GetConditionsByTypeResponse)},
        {205, sizeof(::seshat::GetActiveConditionsRequest)},
        {212, sizeof(::seshat::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse)},
        {219, sizeof(::seshat::GetActiveConditionsResponse)},
        {226, sizeof(::seshat::EntityConditions)},
        {235, sizeof(::seshat::CheckImmunityRequest)},
        {242, sizeof(::seshat::CheckImmunityResponse)},
        {251, sizeof(::seshat::GetConflictingConditionsRequest)},
        {258, sizeof(::seshat::GetConflictingConditionsResponse)},
        {267, sizeof(::seshat::ConflictResolution)},
        {278, sizeof(::seshat::ResolveConflictsRequest)},
        {285, sizeof(::seshat::ResolveConflictsResponse)},
        {294, sizeof(::seshat::GetConditionTemplatesRequest)},
        {301, sizeof(::seshat::GetConditionTemplatesResponse)},
        {308, sizeof(::seshat::ConditionTemplate_PropertiesEntry_DoNotUse)},
        {315, sizeof(::seshat::ConditionTemplate)},
        {340, sizeof(::seshat::CreateConditionTemplateRequest)},
        {345, sizeof(::seshat::CreateConditionTemplateResponse)},
        {352, sizeof(::seshat::ProcessConditionTickRequest)},
        {361, sizeof(::seshat::ProcessConditionTickResponse)},
        {372, sizeof(::seshat::GetConditionHistoryRequest)},
        {383, sizeof(::seshat::GetConditionHistoryResponse)},
        {392, sizeof(::seshat::ConditionHistoryEntry_DetailsEntry_DoNotUse)},
        {399, sizeof(::seshat::ConditionHistoryEntry)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::seshat::_Condition_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::seshat::_Condition_default_instance_._instance,
    &::seshat::_ConditionDuration_default_instance_._instance,
    &::seshat::_ConditionEffect_ParametersEntry_DoNotUse_default_instance_._instance,
    &::seshat::_ConditionEffect_default_instance_._instance,
    &::seshat::_ApplyConditionRequest_default_instance_._instance,
    &::seshat::_ApplyConditionResponse_default_instance_._instance,
    &::seshat::_ConditionParameters_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::seshat::_ConditionParameters_default_instance_._instance,
    &::seshat::_RemoveConditionRequest_default_instance_._instance,
    &::seshat::_RemoveConditionResponse_default_instance_._instance,
    &::seshat::_UpdateConditionRequest_default_instance_._instance,
    &::seshat::_UpdateConditionResponse_default_instance_._instance,
    &::seshat::_GetConditionsRequest_default_instance_._instance,
    &::seshat::_GetConditionsResponse_default_instance_._instance,
    &::seshat::_HasConditionRequest_default_instance_._instance,
    &::seshat::_HasConditionResponse_default_instance_._instance,
    &::seshat::_GetConditionsByTypeRequest_default_instance_._instance,
    &::seshat::_GetConditionsByTypeResponse_default_instance_._instance,
    &::seshat::_GetActiveConditionsRequest_default_instance_._instance,
    &::seshat::_GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_default_instance_._instance,
    &::seshat::_GetActiveConditionsResponse_default_instance_._instance,
    &::seshat::_EntityConditions_default_instance_._instance,
    &::seshat::_CheckImmunityRequest_default_instance_._instance,
    &::seshat::_CheckImmunityResponse_default_instance_._instance,
    &::seshat::_GetConflictingConditionsRequest_default_instance_._instance,
    &::seshat::_GetConflictingConditionsResponse_default_instance_._instance,
    &::seshat::_ConflictResolution_default_instance_._instance,
    &::seshat::_ResolveConflictsRequest_default_instance_._instance,
    &::seshat::_ResolveConflictsResponse_default_instance_._instance,
    &::seshat::_GetConditionTemplatesRequest_default_instance_._instance,
    &::seshat::_GetConditionTemplatesResponse_default_instance_._instance,
    &::seshat::_ConditionTemplate_PropertiesEntry_DoNotUse_default_instance_._instance,
    &::seshat::_ConditionTemplate_default_instance_._instance,
    &::seshat::_CreateConditionTemplateRequest_default_instance_._instance,
    &::seshat::_CreateConditionTemplateResponse_default_instance_._instance,
    &::seshat::_ProcessConditionTickRequest_default_instance_._instance,
    &::seshat::_ProcessConditionTickResponse_default_instance_._instance,
    &::seshat::_GetConditionHistoryRequest_default_instance_._instance,
    &::seshat::_GetConditionHistoryResponse_default_instance_._instance,
    &::seshat::_ConditionHistoryEntry_DetailsEntry_DoNotUse_default_instance_._instance,
    &::seshat::_ConditionHistoryEntry_default_instance_._instance,
};
const char descriptor_table_protodef_seshat_2fconditions_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027seshat/conditions.proto\022\006seshat\032\023sesha"
    "t/common.proto\"\332\005\n\tCondition\022\016\n\002id\030\001 \001(\t"
    "R\002id\022\022\n\004type\030\002 \001(\tR\004type\022\022\n\004name\030\003 \001(\tR\004"
    "name\022 \n\013description\030\004 \001(\tR\013description\022("
    "\n\020target_entity_id\030\005 \001(\tR\016targetEntityId"
    "\022(\n\020source_entity_id\030\006 \001(\tR\016sourceEntity"
    "Id\0225\n\010severity\030\007 \001(\0162\031.seshat.ConditionS"
    "everityR\010severity\0225\n\010duration\030\010 \001(\0132\031.se"
    "shat.ConditionDurationR\010duration\0221\n\007effe"
    "cts\030\t \003(\0132\027.seshat.ConditionEffectR\007effe"
    "cts\022A\n\nproperties\030\n \003(\0132!.seshat.Conditi"
    "on.PropertiesEntryR\nproperties\022+\n\021applie"
    "d_timestamp\030\013 \001(\003R\020appliedTimestamp\022+\n\021e"
    "xpires_timestamp\030\014 \001(\003R\020expiresTimestamp"
    "\022\033\n\tis_active\030\r \001(\010R\010isActive\022\037\n\013stack_c"
    "ount\030\016 \001(\005R\nstackCount\022\035\n\nmax_stacks\030\017 \001"
    "(\005R\tmaxStacks\022E\n\021stacking_behavior\030\020 \001(\016"
    "2\030.seshat.StackingBehaviorR\020stackingBeha"
    "vior\032=\n\017PropertiesEntry\022\020\n\003key\030\001 \001(\tR\003ke"
    "y\022\024\n\005value\030\002 \001(\tR\005value:\0028\001\"\213\001\n\021Conditio"
    "nDuration\022(\n\004type\030\001 \001(\0162\024.seshat.Duratio"
    "nTypeR\004type\022\024\n\005value\030\002 \001(\005R\005value\022\030\n\007tri"
    "gger\030\003 \001(\tR\007trigger\022\034\n\tpermanent\030\004 \001(\010R\t"
    "permanent\"\264\002\n\017ConditionEffect\022\022\n\004type\030\001 "
    "\001(\tR\004type\022\026\n\006target\030\002 \001(\tR\006target\0225\n\tope"
    "ration\030\003 \001(\0162\027.seshat.EffectOperationR\to"
    "peration\022\024\n\005value\030\004 \001(\005R\005value\022 \n\013descri"
    "ption\030\005 \001(\tR\013description\022G\n\nparameters\030\006"
    " \003(\0132\'.seshat.ConditionEffect.Parameters"
    "EntryR\nparameters\032=\n\017ParametersEntry\022\020\n\003"
    "key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005value:\0028\001"
    "\"\360\001\n\025ApplyConditionRequest\022(\n\020target_ent"
    "ity_id\030\001 \001(\tR\016targetEntityId\022%\n\016conditio"
    "n_type\030\002 \001(\tR\rconditionType\022;\n\nparameter"
    "s\030\003 \001(\0132\033.seshat.ConditionParametersR\npa"
    "rameters\022(\n\020source_entity_id\030\004 \001(\tR\016sour"
    "ceEntityId\022\037\n\013force_apply\030\005 \001(\010R\nforceAp"
    "ply\"\346\001\n\026ApplyConditionResponse\022>\n\021applie"
    "d_condition\030\001 \001(\0132\021.seshat.ConditionR\020ap"
    "pliedCondition\022\032\n\010warnings\030\002 \003(\tR\010warnin"
    "gs\022H\n\026conflicting_conditions\030\003 \003(\0132\021.ses"
    "hat.ConditionR\025conflictingConditions\022&\n\006"
    "status\030\004 \001(\0132\016.seshat.ResultR\006status\"\360\002\n"
    "\023ConditionParameters\0225\n\010severity\030\001 \001(\0162\031"
    ".seshat.ConditionSeverityR\010severity\0225\n\010d"
    "uration\030\002 \001(\0132\031.seshat.ConditionDuration"
    "R\010duration\022>\n\016custom_effects\030\003 \003(\0132\027.ses"
    "hat.ConditionEffectR\rcustomEffects\022K\n\npr"
    "operties\030\004 \003(\0132+.seshat.ConditionParamet"
    "ers.PropertiesEntryR\nproperties\022\037\n\013stack"
    "_count\030\005 \001(\005R\nstackCount\032=\n\017PropertiesEn"
    "try\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005va"
    "lue:\0028\001\"\273\001\n\026RemoveConditionRequest\022!\n\014co"
    "ndition_id\030\001 \001(\tR\013conditionId\022(\n\020target_"
    "entity_id\030\002 \001(\tR\016targetEntityId\022%\n\016condi"
    "tion_type\030\003 \001(\tR\rconditionType\022-\n\006reason"
    "\030\004 \001(\0162\025.seshat.RemovalReasonR\006reason\"\201\001"
    "\n\027RemoveConditionResponse\022>\n\021removed_con"
    "dition\030\001 \001(\0132\021.seshat.ConditionR\020removed"
    "Condition\022&\n\006status\030\002 \001(\0132\016.seshat.Resul"
    "tR\006status\"r\n\026UpdateConditionRequest\022!\n\014c"
    "ondition_id\030\001 \001(\tR\013conditionId\0225\n\007update"
    "s\030\002 \001(\0132\033.seshat.ConditionParametersR\007up"
    "dates\"\201\001\n\027UpdateConditionResponse\022>\n\021upd"
    "ated_condition\030\001 \001(\0132\021.seshat.ConditionR"
    "\020updatedCondition\022&\n\006status\030\002 \001(\0132\016.sesh"
    "at.ResultR\006status\"}\n\024GetConditionsReques"
    "t\022\033\n\tentity_id\030\001 \001(\tR\010entityId\022\037\n\013active"
    "_only\030\002 \001(\010R\nactiveOnly\022\'\n\017condition_typ"
    "es\030\003 \003(\tR\016conditionTypes\"\223\001\n\025GetConditio"
    "nsResponse\0221\n\nconditions\030\001 \003(\0132\021.seshat."
    "ConditionR\nconditions\022\037\n\013total_count\030\002 \001"
    "(\005R\ntotalCount\022&\n\006status\030\003 \001(\0132\016.seshat."
    "ResultR\006status\"z\n\023HasConditionRequest\022\033\n"
    "\tentity_id\030\001 \001(\tR\010entityId\022%\n\016condition_"
    "type\030\002 \001(\tR\rconditionType\022\037\n\013active_only"
    "\030\003 \001(\010R\nactiveOnly\"\224\001\n\024HasConditionRespo"
    "nse\022#\n\rhas_condition\030\001 \001(\010R\014hasCondition"
    "\022/\n\tcondition\030\002 \001(\0132\021.seshat.ConditionR\t"
    "condition\022&\n\006status\030\003 \001(\0132\016.seshat.Resul"
    "tR\006status\"z\n\032GetConditionsByTypeRequest\022"
    "%\n\016condition_type\030\001 \001(\tR\rconditionType\022\037"
    "\n\013active_only\030\002 \001(\010R\nactiveOnly\022\024\n\005limit"
    "\030\003 \001(\005R\005limit\"\231\001\n\033GetConditionsByTypeRes"
    "ponse\0221\n\nconditions\030\001 \003(\0132\021.seshat.Condi"
    "tionR\nconditions\022\037\n\013total_count\030\002 \001(\005R\nt"
    "otalCount\022&\n\006status\030\003 \001(\0132\016.seshat.Resul"
    "tR\006status\"c\n\032GetActiveConditionsRequest\022"
    "\035\n\nentity_ids\030\001 \003(\tR\tentityIds\022&\n\017as_of_"
    "timestamp\030\002 \001(\003R\rasOfTimestamp\"\214\002\n\033GetAc"
    "tiveConditionsResponse\022f\n\021entity_conditi"
    "ons\030\001 \003(\01329.seshat.GetActiveConditionsRe"
    "sponse.EntityConditionsEntryR\020entityCond"
    "itions\022&\n\006status\030\002 \001(\0132\016.seshat.ResultR\006"
    "status\032]\n\025EntityConditionsEntry\022\020\n\003key\030\001"
    " \001(\tR\003key\022.\n\005value\030\002 \001(\0132\030.seshat.Entity"
    "ConditionsR\005value:\0028\001\"\215\001\n\020EntityConditio"
    "ns\022\033\n\tentity_id\030\001 \001(\tR\010entityId\0221\n\ncondi"
    "tions\030\002 \003(\0132\021.seshat.ConditionR\nconditio"
    "ns\022)\n\020total_conditions\030\003 \001(\005R\017totalCondi"
    "tions\"Z\n\024CheckImmunityRequest\022\033\n\tentity_"
    "id\030\001 \001(\tR\010entityId\022%\n\016condition_type\030\002 \001"
    "(\tR\rconditionType\"\207\001\n\025CheckImmunityRespo"
    "nse\022\033\n\tis_immune\030\001 \001(\010R\010isImmune\022)\n\020immu"
    "nity_sources\030\002 \003(\tR\017immunitySources\022&\n\006s"
    "tatus\030\003 \001(\0132\016.seshat.ResultR\006status\"l\n\037G"
    "etConflictingConditionsRequest\022\033\n\tentity"
    "_id\030\001 \001(\tR\010entityId\022,\n\022new_condition_typ"
    "e\030\002 \001(\tR\020newConditionType\"\345\001\n GetConflic"
    "tingConditionsResponse\022H\n\026conflicting_co"
    "nditions\030\001 \003(\0132\021.seshat.ConditionR\025confl"
    "ictingConditions\022O\n\025suggested_resolution"
    "s\030\002 \003(\0132\032.seshat.ConflictResolutionR\024sug"
    "gestedResolutions\022&\n\006status\030\003 \001(\0132\016.sesh"
    "at.ResultR\006status\"\237\001\n\022ConflictResolution"
    "\022#\n\rconflict_type\030\001 \001(\tR\014conflictType\022\026\n"
    "\006action\030\002 \001(\tR\006action\0224\n\026affected_condit"
    "ion_ids\030\003 \003(\tR\024affectedConditionIds\022\026\n\006r"
    "eason\030\004 \001(\tR\006reason\"t\n\027ResolveConflictsR"
    "equest\022\033\n\tentity_id\030\001 \001(\tR\010entityId\022<\n\013r"
    "esolutions\030\002 \003(\0132\032.seshat.ConflictResolu"
    "tionR\013resolutions\"\310\001\n\030ResolveConflictsRe"
    "sponse\022@\n\022removed_conditions\030\001 \003(\0132\021.ses"
    "hat.ConditionR\021removedConditions\022B\n\023modi"
    "fied_conditions\030\002 \003(\0132\021.seshat.Condition"
    "R\022modifiedConditions\022&\n\006status\030\003 \001(\0132\016.s"
    "eshat.ResultR\006status\"R\n\034GetConditionTemp"
    "latesRequest\022\032\n\010category\030\001 \001(\tR\010category"
    "\022\026\n\006system\030\002 \001(\tR\006system\"\200\001\n\035GetConditio"
    "nTemplatesResponse\0227\n\ttemplates\030\001 \003(\0132\031."
    "seshat.ConditionTemplateR\ttemplates\022&\n\006s"
    "tatus\030\002 \001(\0132\016.seshat.ResultR\006status\"\337\004\n\021"
    "ConditionTemplate\022\022\n\004type\030\001 \001(\tR\004type\022\022\n"
    "\004name\030\002 \001(\tR\004name\022 \n\013description\030\003 \001(\tR\013"
    "description\022\032\n\010category\030\004 \001(\tR\010category\022"
    "D\n\020default_severity\030\005 \001(\0162\031.seshat.Condi"
    "tionSeverityR\017defaultSeverity\022D\n\020default"
    "_duration\030\006 \001(\0132\031.seshat.ConditionDurati"
    "onR\017defaultDuration\022@\n\017default_effects\030\007"
    " \003(\0132\027.seshat.ConditionEffectR\016defaultEf"
    "fects\022E\n\021stacking_behavior\030\010 \001(\0162\030.sesha"
    "t.StackingBehaviorR\020stackingBehavior\022%\n\016"
    "conflicts_with\030\t \003(\tR\rconflictsWith\022\036\n\ni"
    "mmunities\030\n \003(\tR\nimmunities\022I\n\npropertie"
    "s\030\013 \003(\0132).seshat.ConditionTemplate.Prope"
    "rtiesEntryR\nproperties\032=\n\017PropertiesEntr"
    "y\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005value\030\002 \001(\tR\005valu"
    "e:\0028\001\"W\n\036CreateConditionTemplateRequest\022"
    "5\n\010template\030\001 \001(\0132\031.seshat.ConditionTemp"
    "lateR\010template\"\217\001\n\037CreateConditionTempla"
    "teResponse\022D\n\020created_template\030\001 \001(\0132\031.s"
    "eshat.ConditionTemplateR\017createdTemplate"
    "\022&\n\006status\030\002 \001(\0132\016.seshat.ResultR\006status"
    "\"\201\001\n\033ProcessConditionTickRequest\022\033\n\tenti"
    "ty_id\030\001 \001(\tR\010entityId\022\030\n\007trigger\030\002 \001(\tR\007"
    "trigger\022+\n\021current_timestamp\030\003 \001(\003R\020curr"
    "entTimestamp\"\220\002\n\034ProcessConditionTickRes"
    "ponse\022@\n\022expired_conditions\030\001 \003(\0132\021.sesh"
    "at.ConditionR\021expiredConditions\022D\n\024trigg"
    "ered_conditions\030\002 \003(\0132\021.seshat.Condition"
    "R\023triggeredConditions\022@\n\017applied_effects"
    "\030\003 \003(\0132\027.seshat.ConditionEffectR\016applied"
    "Effects\022&\n\006status\030\004 \001(\0132\016.seshat.ResultR"
    "\006status\"\241\001\n\032GetConditionHistoryRequest\022\033"
    "\n\tentity_id\030\001 \001(\tR\010entityId\022\024\n\005limit\030\002 \001"
    "(\005R\005limit\022\'\n\017since_timestamp\030\003 \001(\003R\016sinc"
    "eTimestamp\022\'\n\017condition_types\030\004 \003(\tR\016con"
    "ditionTypes\"\237\001\n\033GetConditionHistoryRespo"
    "nse\0227\n\007history\030\001 \003(\0132\035.seshat.ConditionH"
    "istoryEntryR\007history\022\037\n\013total_count\030\002 \001("
    "\005R\ntotalCount\022&\n\006status\030\003 \001(\0132\016.seshat.R"
    "esultR\006status\"\302\002\n\025ConditionHistoryEntry\022"
    "/\n\tcondition\030\001 \001(\0132\021.seshat.ConditionR\tc"
    "ondition\022\026\n\006action\030\002 \001(\tR\006action\022\034\n\ttime"
    "stamp\030\003 \001(\003R\ttimestamp\022\026\n\006reason\030\004 \001(\tR\006"
    "reason\022(\n\020source_entity_id\030\005 \001(\tR\016source"
    "EntityId\022D\n\007details\030\006 \003(\0132*.seshat.Condi"
    "tionHistoryEntry.DetailsEntryR\007details\032:"
    "\n\014DetailsEntry\022\020\n\003key\030\001 \001(\tR\003key\022\024\n\005valu"
    "e\030\002 \001(\tR\005value:\0028\001*\265\001\n\021ConditionSeverity"
    "\022\"\n\036CONDITION_SEVERITY_UNSPECIFIED\020\000\022\034\n\030"
    "CONDITION_SEVERITY_MINOR\020\001\022\037\n\033CONDITION_"
    "SEVERITY_MODERATE\020\002\022\034\n\030CONDITION_SEVERIT"
    "Y_MAJOR\020\003\022\037\n\033CONDITION_SEVERITY_CRITICAL"
    "\020\004*\362\001\n\014DurationType\022\035\n\031DURATION_TYPE_UNS"
    "PECIFIED\020\000\022\030\n\024DURATION_TYPE_ROUNDS\020\001\022\031\n\025"
    "DURATION_TYPE_MINUTES\020\002\022\027\n\023DURATION_TYPE"
    "_HOURS\020\003\022\026\n\022DURATION_TYPE_DAYS\020\004\022\037\n\033DURA"
    "TION_TYPE_UNTIL_TRIGGER\020\005\022\037\n\033DURATION_TY"
    "PE_CONCENTRATION\020\006\022\033\n\027DURATION_TYPE_PERM"
    "ANENT\020\007*\316\001\n\020StackingBehavior\022!\n\035STACKING"
    "_BEHAVIOR_UNSPECIFIED\020\000\022\032\n\026STACKING_BEHA"
    "VIOR_NONE\020\001\022\036\n\032STACKING_BEHAVIOR_DURATIO"
    "N\020\002\022\037\n\033STACKING_BEHAVIOR_INTENSITY\020\003\022\033\n\027"
    "STACKING_BEHAVIOR_COUNT\020\004\022\035\n\031STACKING_BE"
    "HAVIOR_REPLACE\020\005*\375\001\n\017EffectOperation\022 \n\034"
    "EFFECT_OPERATION_UNSPECIFIED\020\000\022\030\n\024EFFECT"
    "_OPERATION_ADD\020\001\022\035\n\031EFFECT_OPERATION_SUB"
    "TRACT\020\002\022\035\n\031EFFECT_OPERATION_MULTIPLY\020\003\022\033"
    "\n\027EFFECT_OPERATION_DIVIDE\020\004\022\030\n\024EFFECT_OP"
    "ERATION_SET\020\005\022\034\n\030EFFECT_OPERATION_DISABL"
    "E\020\006\022\033\n\027EFFECT_OPERATION_ENABLE\020\007*\327\001\n\rRem"
    "ovalReason\022\036\n\032REMOVAL_REASON_UNSPECIFIED"
    "\020\000\022\032\n\026REMOVAL_REASON_EXPIRED\020\001\022\034\n\030REMOVA"
    "L_REASON_DISPELLED\020\002\022\030\n\024REMOVAL_REASON_C"
    "URED\020\003\022\035\n\031REMOVAL_REASON_OVERRIDDEN\020\004\022\030\n"
    "\024REMOVAL_REASON_DEATH\020\005\022\031\n\025REMOVAL_REASO"
    "N_MANUAL\020\0062\216\n\n\021ConditionsService\022O\n\016Appl"
    "yCondition\022\035.seshat.ApplyConditionReques"
    "t\032\036.seshat.ApplyConditionResponse\022R\n\017Rem"
    "oveCondition\022\036.seshat.RemoveConditionReq"
    "uest\032\037.seshat.RemoveConditionResponse\022L\n"
    "\rGetConditions\022\034.seshat.GetConditionsReq"
    "uest\032\035.seshat.GetConditionsResponse\022R\n\017U"
    "pdateCondition\022\036.seshat.UpdateConditionR"
    "equest\032\037.seshat.UpdateConditionResponse\022"
    "I\n\014HasCondition\022\033.seshat.HasConditionReq"
    "uest\032\034.seshat.HasConditionResponse\022^\n\023Ge"
    "tConditionsByType\022\".seshat.GetConditions"
    "ByTypeRequest\032#.seshat.GetConditionsByTy"
    "peResponse\022^\n\023GetActiveConditions\022\".sesh"
    "at.GetActiveConditionsRequest\032#.seshat.G"
    "etActiveConditionsResponse\022L\n\rCheckImmun"
    "ity\022\034.seshat.CheckImmunityRequest\032\035.sesh"
    "at.CheckImmunityResponse\022m\n\030GetConflicti"
    "ngConditions\022\'.seshat.GetConflictingCond"
    "itionsRequest\032(.seshat.GetConflictingCon"
    "ditionsResponse\022U\n\020ResolveConflicts\022\037.se"
    "shat.ResolveConflictsRequest\032 .seshat.Re"
    "solveConflictsResponse\022d\n\025GetConditionTe"
    "mplates\022$.seshat.GetConditionTemplatesRe"
    "quest\032%.seshat.GetConditionTemplatesResp"
    "onse\022j\n\027CreateConditionTemplate\022&.seshat"
    ".CreateConditionTemplateRequest\032\'.seshat"
    ".CreateConditionTemplateResponse\022a\n\024Proc"
    "essConditionTick\022#.seshat.ProcessConditi"
    "onTickRequest\032$.seshat.ProcessConditionT"
    "ickResponse\022^\n\023GetConditionHistory\022\".ses"
    "hat.GetConditionHistoryRequest\032#.seshat."
    "GetConditionHistoryResponseB!Z\037github.co"
    "m/seshat/protos/seshatb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_seshat_2fconditions_2eproto_deps[1] = {
        &::descriptor_table_seshat_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_seshat_2fconditions_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_seshat_2fconditions_2eproto = {
    false,
    false,
    9630,
    descriptor_table_protodef_seshat_2fconditions_2eproto,
    "seshat/conditions.proto",
    &descriptor_table_seshat_2fconditions_2eproto_once,
    descriptor_table_seshat_2fconditions_2eproto_deps,
    1,
    42,
    schemas,
    file_default_instances,
    TableStruct_seshat_2fconditions_2eproto::offsets,
    file_level_enum_descriptors_seshat_2fconditions_2eproto,
    file_level_service_descriptors_seshat_2fconditions_2eproto,
};
namespace seshat {
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ConditionSeverity_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fconditions_2eproto);
  return file_level_enum_descriptors_seshat_2fconditions_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t ConditionSeverity_internal_data_[] = {
    327680u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL DurationType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fconditions_2eproto);
  return file_level_enum_descriptors_seshat_2fconditions_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t DurationType_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StackingBehavior_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fconditions_2eproto);
  return file_level_enum_descriptors_seshat_2fconditions_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t StackingBehavior_internal_data_[] = {
    393216u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL EffectOperation_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fconditions_2eproto);
  return file_level_enum_descriptors_seshat_2fconditions_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t EffectOperation_internal_data_[] = {
    524288u, 0u, };
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL RemovalReason_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_seshat_2fconditions_2eproto);
  return file_level_enum_descriptors_seshat_2fconditions_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t RemovalReason_internal_data_[] = {
    458752u, 0u, };
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
Condition_PropertiesEntry_DoNotUse::Condition_PropertiesEntry_DoNotUse()
    : SuperType(Condition_PropertiesEntry_DoNotUse_class_data_.base()) {}
Condition_PropertiesEntry_DoNotUse::Condition_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, Condition_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
Condition_PropertiesEntry_DoNotUse::Condition_PropertiesEntry_DoNotUse() : SuperType() {}
Condition_PropertiesEntry_DoNotUse::Condition_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL Condition_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Condition_PropertiesEntry_DoNotUse(arena);
}
constexpr auto Condition_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Condition_PropertiesEntry_DoNotUse),
                                            alignof(Condition_PropertiesEntry_DoNotUse));
}
constexpr auto Condition_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Condition_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Condition_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Condition_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Condition_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&Condition_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &Condition_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Condition_PropertiesEntry_DoNotUse_class_data_ =
        Condition_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Condition_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Condition_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Condition_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return Condition_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 49, 2>
Condition_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Condition_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::Condition_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(Condition_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\3\5\0\0\0\0\0"
    "seshat.Condition.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class Condition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Condition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Condition, _impl_._has_bits_);
};

Condition::Condition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Condition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.Condition)
}
PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::Condition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        effects_{visibility, arena, from.effects_},
        properties_{visibility, arena, from.properties_},
        id_(arena, from.id_),
        type_(arena, from.type_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        target_entity_id_(arena, from.target_entity_id_),
        source_entity_id_(arena, from.source_entity_id_) {}

Condition::Condition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Condition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Condition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Condition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = ((cached_has_bits & 0x00000040u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, severity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, severity_),
           offsetof(Impl_, stacking_behavior_) -
               offsetof(Impl_, severity_) +
               sizeof(Impl_::stacking_behavior_));

  // @@protoc_insertion_point(copy_constructor:seshat.Condition)
}
PROTOBUF_NDEBUG_INLINE Condition::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        effects_{visibility, arena},
        properties_{visibility, arena},
        id_(arena),
        type_(arena),
        name_(arena),
        description_(arena),
        target_entity_id_(arena),
        source_entity_id_(arena) {}

inline void Condition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, stacking_behavior_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::stacking_behavior_));
}
Condition::~Condition() {
  // @@protoc_insertion_point(destructor:seshat.Condition)
  SharedDtor(*this);
}
inline void Condition::SharedDtor(MessageLite& self) {
  Condition& this_ = static_cast<Condition&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.id_.Destroy();
  this_._impl_.type_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.target_entity_id_.Destroy();
  this_._impl_.source_entity_id_.Destroy();
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Condition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Condition(arena);
}
constexpr auto Condition::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Condition, _impl_.effects_) +
          decltype(Condition::_impl_.effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Condition, _impl_.properties_) +
          decltype(Condition::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(Condition, _impl_.properties_) +
          decltype(Condition::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(Condition), alignof(Condition), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Condition::PlacementNew_,
                                 sizeof(Condition),
                                 alignof(Condition));
  }
}
constexpr auto Condition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Condition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Condition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Condition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Condition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Condition>(), &Condition::ByteSizeLong,
              &Condition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Condition, _impl_._cached_size_),
          false,
      },
      &Condition::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Condition_class_data_ =
        Condition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Condition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Condition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Condition_class_data_.tc_table);
  return Condition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 16, 3, 104, 2>
Condition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Condition, _impl_._has_bits_),
    0, // no _extensions_
    16, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294901760,  // skipmap
    offsetof(decltype(_table_), field_entries),
    16,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Condition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::Condition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
    {::_pbi::TcParser::FastV32S2,
     {384, 13, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.stacking_behavior_)}},
    // string id = 1 [json_name = "id"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.id_)}},
    // string type = 2 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.type_)}},
    // string name = 3 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.name_)}},
    // string description = 4 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.description_)}},
    // string target_entity_id = 5 [json_name = "targetEntityId"];
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.target_entity_id_)}},
    // string source_entity_id = 6 [json_name = "sourceEntityId"];
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.source_entity_id_)}},
    // .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Condition, _impl_.severity_), 7>(),
     {56, 7, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.severity_)}},
    // .seshat.ConditionDuration duration = 8 [json_name = "duration"];
    {::_pbi::TcParser::FastMtS1,
     {66, 6, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.duration_)}},
    // repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(Condition, _impl_.effects_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Condition, _impl_.applied_timestamp_), 9>(),
     {88, 9, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.applied_timestamp_)}},
    // int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Condition, _impl_.expires_timestamp_), 10>(),
     {96, 10, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.expires_timestamp_)}},
    // bool is_active = 13 [json_name = "isActive"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Condition, _impl_.is_active_), 8>(),
     {104, 8, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.is_active_)}},
    // int32 stack_count = 14 [json_name = "stackCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Condition, _impl_.stack_count_), 11>(),
     {112, 11, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.stack_count_)}},
    // int32 max_stacks = 15 [json_name = "maxStacks"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Condition, _impl_.max_stacks_), 12>(),
     {120, 12, 0, PROTOBUF_FIELD_OFFSET(Condition, _impl_.max_stacks_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1 [json_name = "id"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string type = 2 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 3 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.name_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 4 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.description_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_entity_id = 5 [json_name = "targetEntityId"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.target_entity_id_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_entity_id = 6 [json_name = "sourceEntityId"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.source_entity_id_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.severity_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .seshat.ConditionDuration duration = 8 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.duration_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.effects_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> properties = 10 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.properties_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.applied_timestamp_), _Internal::kHasBitsOffset + 9, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.expires_timestamp_), _Internal::kHasBitsOffset + 10, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // bool is_active = 13 [json_name = "isActive"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.is_active_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 stack_count = 14 [json_name = "stackCount"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.stack_count_), _Internal::kHasBitsOffset + 11, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 max_stacks = 15 [json_name = "maxStacks"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.max_stacks_), _Internal::kHasBitsOffset + 12, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
    {PROTOBUF_FIELD_OFFSET(Condition, _impl_.stacking_behavior_), _Internal::kHasBitsOffset + 13, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionDuration>()},
      {::_pbi::TcParser::GetTable<::seshat::ConditionEffect>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\20\2\4\4\13\20\20\0\0\0\12\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "seshat.Condition"
    "id"
    "type"
    "name"
    "description"
    "target_entity_id"
    "source_entity_id"
    "properties"
  }},
};
PROTOBUF_NOINLINE void Condition::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.Condition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.effects_.Clear();
  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      _impl_.target_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      _impl_.source_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(_impl_.duration_ != nullptr);
      _impl_.duration_->Clear();
    }
  }
  _impl_.severity_ = 0;
  if ((cached_has_bits & 0x00003f00u) != 0) {
    ::memset(&_impl_.is_active_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stacking_behavior_) -
        reinterpret_cast<char*>(&_impl_.is_active_)) + sizeof(_impl_.stacking_behavior_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Condition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Condition& this_ = static_cast<const Condition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Condition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Condition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.Condition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string id = 1 [json_name = "id"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_id().empty()) {
      const ::std::string& _s = this_._internal_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string type = 2 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string name = 3 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.name");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string description = 4 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.description");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string target_entity_id = 5 [json_name = "targetEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (!this_._internal_target_entity_id().empty()) {
      const ::std::string& _s = this_._internal_target_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.target_entity_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string source_entity_id = 6 [json_name = "sourceEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (!this_._internal_source_entity_id().empty()) {
      const ::std::string& _s = this_._internal_source_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.source_entity_id");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
  if ((this_._impl_._has_bits_[0] & 0x00000080u) != 0) {
    if (this_._internal_severity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          7, this_._internal_severity(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionDuration duration = 8 [json_name = "duration"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        8, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
        stream);
  }

  // repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            9, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, string> properties = 10 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            10, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.Condition.properties");
      }
    }
  }

  // int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
  if ((cached_has_bits & 0x00000200u) != 0) {
    if (this_._internal_applied_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<11>(
              stream, this_._internal_applied_timestamp(), target);
    }
  }

  // int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
  if ((cached_has_bits & 0x00000400u) != 0) {
    if (this_._internal_expires_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<12>(
              stream, this_._internal_expires_timestamp(), target);
    }
  }

  // bool is_active = 13 [json_name = "isActive"];
  if ((cached_has_bits & 0x00000100u) != 0) {
    if (this_._internal_is_active() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          13, this_._internal_is_active(), target);
    }
  }

  // int32 stack_count = 14 [json_name = "stackCount"];
  if ((cached_has_bits & 0x00000800u) != 0) {
    if (this_._internal_stack_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<14>(
              stream, this_._internal_stack_count(), target);
    }
  }

  // int32 max_stacks = 15 [json_name = "maxStacks"];
  if ((cached_has_bits & 0x00001000u) != 0) {
    if (this_._internal_max_stacks() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<15>(
              stream, this_._internal_max_stacks(), target);
    }
  }

  // .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
  if ((cached_has_bits & 0x00002000u) != 0) {
    if (this_._internal_stacking_behavior() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          16, this_._internal_stacking_behavior(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.Condition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Condition::ByteSizeLong(const MessageLite& base) {
  const Condition& this_ = static_cast<const Condition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Condition::ByteSizeLong() const {
  const Condition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.Condition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConditionEffect effects = 9 [json_name = "effects"];
    {
      total_size += 1UL * this_._internal_effects_size();
      for (const auto& msg : this_._internal_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, string> properties = 10 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    // string id = 1 [json_name = "id"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_id());
      }
    }
    // string type = 2 [json_name = "type"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string name = 3 [json_name = "name"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 4 [json_name = "description"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string target_entity_id = 5 [json_name = "targetEntityId"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!this_._internal_target_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target_entity_id());
      }
    }
    // string source_entity_id = 6 [json_name = "sourceEntityId"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!this_._internal_source_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_entity_id());
      }
    }
    // .seshat.ConditionDuration duration = 8 [json_name = "duration"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
    }
    // .seshat.ConditionSeverity severity = 7 [json_name = "severity"];
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (this_._internal_severity() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
      }
    }
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    // bool is_active = 13 [json_name = "isActive"];
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (this_._internal_is_active() != 0) {
        total_size += 2;
      }
    }
    // int64 applied_timestamp = 11 [json_name = "appliedTimestamp"];
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (this_._internal_applied_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_applied_timestamp());
      }
    }
    // int64 expires_timestamp = 12 [json_name = "expiresTimestamp"];
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (this_._internal_expires_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_timestamp());
      }
    }
    // int32 stack_count = 14 [json_name = "stackCount"];
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (this_._internal_stack_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_stack_count());
      }
    }
    // int32 max_stacks = 15 [json_name = "maxStacks"];
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (this_._internal_max_stacks() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_max_stacks());
      }
    }
    // .seshat.StackingBehavior stacking_behavior = 16 [json_name = "stackingBehavior"];
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (this_._internal_stacking_behavior() != 0) {
        total_size += 2 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_stacking_behavior());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Condition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Condition*>(&to_msg);
  auto& from = static_cast<const Condition&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.Condition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_effects()->MergeFrom(
      from._internal_effects());
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_id().empty()) {
        _this->_internal_set_id(from._internal_id());
      } else {
        if (_this->_impl_.id_.IsDefault()) {
          _this->_internal_set_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (!from._internal_target_entity_id().empty()) {
        _this->_internal_set_target_entity_id(from._internal_target_entity_id());
      } else {
        if (_this->_impl_.target_entity_id_.IsDefault()) {
          _this->_internal_set_target_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (!from._internal_source_entity_id().empty()) {
        _this->_internal_set_source_entity_id(from._internal_source_entity_id());
      } else {
        if (_this->_impl_.source_entity_id_.IsDefault()) {
          _this->_internal_set_source_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      ABSL_DCHECK(from._impl_.duration_ != nullptr);
      if (_this->_impl_.duration_ == nullptr) {
        _this->_impl_.duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_);
      } else {
        _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
      }
    }
    if ((cached_has_bits & 0x00000080u) != 0) {
      if (from._internal_severity() != 0) {
        _this->_impl_.severity_ = from._impl_.severity_;
      }
    }
  }
  if ((cached_has_bits & 0x00003f00u) != 0) {
    if ((cached_has_bits & 0x00000100u) != 0) {
      if (from._internal_is_active() != 0) {
        _this->_impl_.is_active_ = from._impl_.is_active_;
      }
    }
    if ((cached_has_bits & 0x00000200u) != 0) {
      if (from._internal_applied_timestamp() != 0) {
        _this->_impl_.applied_timestamp_ = from._impl_.applied_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000400u) != 0) {
      if (from._internal_expires_timestamp() != 0) {
        _this->_impl_.expires_timestamp_ = from._impl_.expires_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000800u) != 0) {
      if (from._internal_stack_count() != 0) {
        _this->_impl_.stack_count_ = from._impl_.stack_count_;
      }
    }
    if ((cached_has_bits & 0x00001000u) != 0) {
      if (from._internal_max_stacks() != 0) {
        _this->_impl_.max_stacks_ = from._impl_.max_stacks_;
      }
    }
    if ((cached_has_bits & 0x00002000u) != 0) {
      if (from._internal_stacking_behavior() != 0) {
        _this->_impl_.stacking_behavior_ = from._impl_.stacking_behavior_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Condition::CopyFrom(const Condition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.Condition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Condition::InternalSwap(Condition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.effects_.InternalSwap(&other->_impl_.effects_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_entity_id_, &other->_impl_.target_entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_entity_id_, &other->_impl_.source_entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Condition, _impl_.stacking_behavior_)
      + sizeof(Condition::_impl_.stacking_behavior_)
      - PROTOBUF_FIELD_OFFSET(Condition, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConditionDuration::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConditionDuration>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_._has_bits_);
};

ConditionDuration::ConditionDuration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionDuration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConditionDuration)
}
PROTOBUF_NDEBUG_INLINE ConditionDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConditionDuration& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        trigger_(arena, from.trigger_) {}

ConditionDuration::ConditionDuration(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConditionDuration& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionDuration_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionDuration* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, permanent_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::permanent_));

  // @@protoc_insertion_point(copy_constructor:seshat.ConditionDuration)
}
PROTOBUF_NDEBUG_INLINE ConditionDuration::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        trigger_(arena) {}

inline void ConditionDuration::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, permanent_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::permanent_));
}
ConditionDuration::~ConditionDuration() {
  // @@protoc_insertion_point(destructor:seshat.ConditionDuration)
  SharedDtor(*this);
}
inline void ConditionDuration::SharedDtor(MessageLite& self) {
  ConditionDuration& this_ = static_cast<ConditionDuration&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.trigger_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConditionDuration::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionDuration(arena);
}
constexpr auto ConditionDuration::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConditionDuration),
                                            alignof(ConditionDuration));
}
constexpr auto ConditionDuration::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionDuration_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionDuration::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionDuration>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionDuration::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConditionDuration>(), &ConditionDuration::ByteSizeLong,
              &ConditionDuration::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_._cached_size_),
          false,
      },
      &ConditionDuration::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionDuration_class_data_ =
        ConditionDuration::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionDuration::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionDuration_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionDuration_class_data_.tc_table);
  return ConditionDuration_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 40, 2>
ConditionDuration::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConditionDuration_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionDuration>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool permanent = 4 [json_name = "permanent"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ConditionDuration, _impl_.permanent_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.permanent_)}},
    // .seshat.DurationType type = 1 [json_name = "type"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionDuration, _impl_.type_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.type_)}},
    // int32 value = 2 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionDuration, _impl_.value_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.value_)}},
    // string trigger = 3 [json_name = "trigger"];
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.trigger_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.DurationType type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.value_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string trigger = 3 [json_name = "trigger"];
    {PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.trigger_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool permanent = 4 [json_name = "permanent"];
    {PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.permanent_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\0\0\7\0\0\0\0"
    "seshat.ConditionDuration"
    "trigger"
  }},
};
PROTOBUF_NOINLINE void ConditionDuration::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConditionDuration)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.trigger_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eu) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.permanent_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.permanent_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConditionDuration::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConditionDuration& this_ = static_cast<const ConditionDuration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConditionDuration::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConditionDuration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConditionDuration)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .seshat.DurationType type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // int32 value = 2 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_value(), target);
    }
  }

  // string trigger = 3 [json_name = "trigger"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_trigger().empty()) {
      const ::std::string& _s = this_._internal_trigger();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionDuration.trigger");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bool permanent = 4 [json_name = "permanent"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_permanent() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          4, this_._internal_permanent(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConditionDuration)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConditionDuration::ByteSizeLong(const MessageLite& base) {
  const ConditionDuration& this_ = static_cast<const ConditionDuration&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConditionDuration::ByteSizeLong() const {
  const ConditionDuration& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConditionDuration)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string trigger = 3 [json_name = "trigger"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_trigger().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trigger());
      }
    }
    // .seshat.DurationType type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // int32 value = 2 [json_name = "value"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value());
      }
    }
    // bool permanent = 4 [json_name = "permanent"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_permanent() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConditionDuration::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionDuration*>(&to_msg);
  auto& from = static_cast<const ConditionDuration&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConditionDuration)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_trigger().empty()) {
        _this->_internal_set_trigger(from._internal_trigger());
      } else {
        if (_this->_impl_.trigger_.IsDefault()) {
          _this->_internal_set_trigger("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_permanent() != 0) {
        _this->_impl_.permanent_ = from._impl_.permanent_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionDuration::CopyFrom(const ConditionDuration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConditionDuration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionDuration::InternalSwap(ConditionDuration* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trigger_, &other->_impl_.trigger_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.permanent_)
      + sizeof(ConditionDuration::_impl_.permanent_)
      - PROTOBUF_FIELD_OFFSET(ConditionDuration, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata ConditionDuration::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ConditionEffect_ParametersEntry_DoNotUse::ConditionEffect_ParametersEntry_DoNotUse()
    : SuperType(ConditionEffect_ParametersEntry_DoNotUse_class_data_.base()) {}
ConditionEffect_ParametersEntry_DoNotUse::ConditionEffect_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ConditionEffect_ParametersEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ConditionEffect_ParametersEntry_DoNotUse::ConditionEffect_ParametersEntry_DoNotUse() : SuperType() {}
ConditionEffect_ParametersEntry_DoNotUse::ConditionEffect_ParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ConditionEffect_ParametersEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionEffect_ParametersEntry_DoNotUse(arena);
}
constexpr auto ConditionEffect_ParametersEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConditionEffect_ParametersEntry_DoNotUse),
                                            alignof(ConditionEffect_ParametersEntry_DoNotUse));
}
constexpr auto ConditionEffect_ParametersEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionEffect_ParametersEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionEffect_ParametersEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionEffect_ParametersEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionEffect_ParametersEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ConditionEffect_ParametersEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ConditionEffect_ParametersEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionEffect_ParametersEntry_DoNotUse_class_data_ =
        ConditionEffect_ParametersEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionEffect_ParametersEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionEffect_ParametersEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionEffect_ParametersEntry_DoNotUse_class_data_.tc_table);
  return ConditionEffect_ParametersEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 55, 2>
ConditionEffect_ParametersEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConditionEffect_ParametersEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionEffect_ParametersEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect_ParametersEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\3\5\0\0\0\0\0"
    "seshat.ConditionEffect.ParametersEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class ConditionEffect::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConditionEffect>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_._has_bits_);
};

ConditionEffect::ConditionEffect(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConditionEffect)
}
PROTOBUF_NDEBUG_INLINE ConditionEffect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConditionEffect& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        parameters_{visibility, arena, from.parameters_},
        type_(arena, from.type_),
        target_(arena, from.target_),
        description_(arena, from.description_) {}

ConditionEffect::ConditionEffect(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConditionEffect& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionEffect_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionEffect* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, operation_),
           offsetof(Impl_, value_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::value_));

  // @@protoc_insertion_point(copy_constructor:seshat.ConditionEffect)
}
PROTOBUF_NDEBUG_INLINE ConditionEffect::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        parameters_{visibility, arena},
        type_(arena),
        target_(arena),
        description_(arena) {}

inline void ConditionEffect::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, operation_),
           0,
           offsetof(Impl_, value_) -
               offsetof(Impl_, operation_) +
               sizeof(Impl_::value_));
}
ConditionEffect::~ConditionEffect() {
  // @@protoc_insertion_point(destructor:seshat.ConditionEffect)
  SharedDtor(*this);
}
inline void ConditionEffect::SharedDtor(MessageLite& self) {
  ConditionEffect& this_ = static_cast<ConditionEffect&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.target_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConditionEffect::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionEffect(arena);
}
constexpr auto ConditionEffect::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.parameters_) +
          decltype(ConditionEffect::_impl_.parameters_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.parameters_) +
          decltype(ConditionEffect::_impl_.parameters_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConditionEffect), alignof(ConditionEffect), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionEffect::PlacementNew_,
                                 sizeof(ConditionEffect),
                                 alignof(ConditionEffect));
  }
}
constexpr auto ConditionEffect::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionEffect_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionEffect::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionEffect>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionEffect::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConditionEffect>(), &ConditionEffect::ByteSizeLong,
              &ConditionEffect::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_._cached_size_),
          false,
      },
      &ConditionEffect::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionEffect_class_data_ =
        ConditionEffect::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionEffect::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionEffect_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionEffect_class_data_.tc_table);
  return ConditionEffect_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 62, 2>
ConditionEffect::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConditionEffect_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionEffect>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.type_)}},
    // string target = 2 [json_name = "target"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.target_)}},
    // .seshat.EffectOperation operation = 3 [json_name = "operation"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionEffect, _impl_.operation_), 3>(),
     {24, 3, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.operation_)}},
    // int32 value = 4 [json_name = "value"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionEffect, _impl_.value_), 4>(),
     {32, 4, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.value_)}},
    // string description = 5 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.description_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target = 2 [json_name = "target"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.target_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.EffectOperation operation = 3 [json_name = "operation"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.operation_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 value = 4 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.value_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string description = 5 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.description_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> parameters = 6 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.parameters_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\26\4\6\0\0\13\12\0"
    "seshat.ConditionEffect"
    "type"
    "target"
    "description"
    "parameters"
  }},
};
PROTOBUF_NOINLINE void ConditionEffect::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConditionEffect)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.parameters_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.target_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x00000018u) != 0) {
    ::memset(&_impl_.operation_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.value_) -
        reinterpret_cast<char*>(&_impl_.operation_)) + sizeof(_impl_.value_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConditionEffect::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConditionEffect& this_ = static_cast<const ConditionEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConditionEffect::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConditionEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConditionEffect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string target = 2 [json_name = "target"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_target().empty()) {
      const ::std::string& _s = this_._internal_target();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.target");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // .seshat.EffectOperation operation = 3 [json_name = "operation"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_operation() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          3, this_._internal_operation(), target);
    }
  }

  // int32 value = 4 [json_name = "value"];
  if ((this_._impl_._has_bits_[0] & 0x00000010u) != 0) {
    if (this_._internal_value() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
              stream, this_._internal_value(), target);
    }
  }

  // string description = 5 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.description");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // map<string, string> parameters = 6 [json_name = "parameters"];
  if (!this_._internal_parameters().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_parameters();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.parameters");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.parameters");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionEffect.parameters");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConditionEffect)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConditionEffect::ByteSizeLong(const MessageLite& base) {
  const ConditionEffect& this_ = static_cast<const ConditionEffect&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConditionEffect::ByteSizeLong() const {
  const ConditionEffect& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConditionEffect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> parameters = 6 [json_name = "parameters"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_parameters_size());
      for (const auto& entry : this_._internal_parameters()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string target = 2 [json_name = "target"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_target().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target());
      }
    }
    // string description = 5 [json_name = "description"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // .seshat.EffectOperation operation = 3 [json_name = "operation"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_operation() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_operation());
      }
    }
    // int32 value = 4 [json_name = "value"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_value() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_value());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConditionEffect::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionEffect*>(&to_msg);
  auto& from = static_cast<const ConditionEffect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConditionEffect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.parameters_.MergeFrom(from._impl_.parameters_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_target().empty()) {
        _this->_internal_set_target(from._internal_target());
      } else {
        if (_this->_impl_.target_.IsDefault()) {
          _this->_internal_set_target("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_operation() != 0) {
        _this->_impl_.operation_ = from._impl_.operation_;
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_value() != 0) {
        _this->_impl_.value_ = from._impl_.value_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionEffect::CopyFrom(const ConditionEffect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConditionEffect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionEffect::InternalSwap(ConditionEffect* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.parameters_.InternalSwap(&other->_impl_.parameters_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_, &other->_impl_.target_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.value_)
      + sizeof(ConditionEffect::_impl_.value_)
      - PROTOBUF_FIELD_OFFSET(ConditionEffect, _impl_.operation_)>(
          reinterpret_cast<char*>(&_impl_.operation_),
          reinterpret_cast<char*>(&other->_impl_.operation_));
}

::google::protobuf::Metadata ConditionEffect::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ApplyConditionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ApplyConditionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_._has_bits_);
};

ApplyConditionRequest::ApplyConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ApplyConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ApplyConditionRequest)
}
PROTOBUF_NDEBUG_INLINE ApplyConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ApplyConditionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        target_entity_id_(arena, from.target_entity_id_),
        condition_type_(arena, from.condition_type_),
        source_entity_id_(arena, from.source_entity_id_) {}

ApplyConditionRequest::ApplyConditionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ApplyConditionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ApplyConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ApplyConditionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.parameters_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parameters_)
                : nullptr;
  _impl_.force_apply_ = from._impl_.force_apply_;

  // @@protoc_insertion_point(copy_constructor:seshat.ApplyConditionRequest)
}
PROTOBUF_NDEBUG_INLINE ApplyConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        target_entity_id_(arena),
        condition_type_(arena),
        source_entity_id_(arena) {}

inline void ApplyConditionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, parameters_),
           0,
           offsetof(Impl_, force_apply_) -
               offsetof(Impl_, parameters_) +
               sizeof(Impl_::force_apply_));
}
ApplyConditionRequest::~ApplyConditionRequest() {
  // @@protoc_insertion_point(destructor:seshat.ApplyConditionRequest)
  SharedDtor(*this);
}
inline void ApplyConditionRequest::SharedDtor(MessageLite& self) {
  ApplyConditionRequest& this_ = static_cast<ApplyConditionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.target_entity_id_.Destroy();
  this_._impl_.condition_type_.Destroy();
  this_._impl_.source_entity_id_.Destroy();
  delete this_._impl_.parameters_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ApplyConditionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ApplyConditionRequest(arena);
}
constexpr auto ApplyConditionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ApplyConditionRequest),
                                            alignof(ApplyConditionRequest));
}
constexpr auto ApplyConditionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ApplyConditionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ApplyConditionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ApplyConditionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ApplyConditionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ApplyConditionRequest>(), &ApplyConditionRequest::ByteSizeLong,
              &ApplyConditionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_._cached_size_),
          false,
      },
      &ApplyConditionRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ApplyConditionRequest_class_data_ =
        ApplyConditionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ApplyConditionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ApplyConditionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ApplyConditionRequest_class_data_.tc_table);
  return ApplyConditionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 83, 2>
ApplyConditionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ApplyConditionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ApplyConditionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string target_entity_id = 1 [json_name = "targetEntityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.target_entity_id_)}},
    // string condition_type = 2 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.condition_type_)}},
    // .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
    {::_pbi::TcParser::FastMtS1,
     {26, 3, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.parameters_)}},
    // string source_entity_id = 4 [json_name = "sourceEntityId"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.source_entity_id_)}},
    // bool force_apply = 5 [json_name = "forceApply"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ApplyConditionRequest, _impl_.force_apply_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.force_apply_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string target_entity_id = 1 [json_name = "targetEntityId"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.target_entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string condition_type = 2 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.condition_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.parameters_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string source_entity_id = 4 [json_name = "sourceEntityId"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.source_entity_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool force_apply = 5 [json_name = "forceApply"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.force_apply_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionParameters>()},
  }},
  {{
    "\34\20\16\0\20\0\0\0"
    "seshat.ApplyConditionRequest"
    "target_entity_id"
    "condition_type"
    "source_entity_id"
  }},
};
PROTOBUF_NOINLINE void ApplyConditionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ApplyConditionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.target_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.condition_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.source_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.parameters_ != nullptr);
      _impl_.parameters_->Clear();
    }
  }
  _impl_.force_apply_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ApplyConditionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ApplyConditionRequest& this_ = static_cast<const ApplyConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ApplyConditionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ApplyConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ApplyConditionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string target_entity_id = 1 [json_name = "targetEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_target_entity_id().empty()) {
      const ::std::string& _s = this_._internal_target_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ApplyConditionRequest.target_entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string condition_type = 2 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ApplyConditionRequest.condition_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.parameters_, this_._impl_.parameters_->GetCachedSize(), target,
        stream);
  }

  // string source_entity_id = 4 [json_name = "sourceEntityId"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_source_entity_id().empty()) {
      const ::std::string& _s = this_._internal_source_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ApplyConditionRequest.source_entity_id");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // bool force_apply = 5 [json_name = "forceApply"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_force_apply() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          5, this_._internal_force_apply(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ApplyConditionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ApplyConditionRequest::ByteSizeLong(const MessageLite& base) {
  const ApplyConditionRequest& this_ = static_cast<const ApplyConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ApplyConditionRequest::ByteSizeLong() const {
  const ApplyConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ApplyConditionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string target_entity_id = 1 [json_name = "targetEntityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_target_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target_entity_id());
      }
    }
    // string condition_type = 2 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
    // string source_entity_id = 4 [json_name = "sourceEntityId"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_source_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_entity_id());
      }
    }
    // .seshat.ConditionParameters parameters = 3 [json_name = "parameters"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.parameters_);
    }
    // bool force_apply = 5 [json_name = "forceApply"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_force_apply() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ApplyConditionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ApplyConditionRequest*>(&to_msg);
  auto& from = static_cast<const ApplyConditionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ApplyConditionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_target_entity_id().empty()) {
        _this->_internal_set_target_entity_id(from._internal_target_entity_id());
      } else {
        if (_this->_impl_.target_entity_id_.IsDefault()) {
          _this->_internal_set_target_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_source_entity_id().empty()) {
        _this->_internal_set_source_entity_id(from._internal_source_entity_id());
      } else {
        if (_this->_impl_.source_entity_id_.IsDefault()) {
          _this->_internal_set_source_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.parameters_ != nullptr);
      if (_this->_impl_.parameters_ == nullptr) {
        _this->_impl_.parameters_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.parameters_);
      } else {
        _this->_impl_.parameters_->MergeFrom(*from._impl_.parameters_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_force_apply() != 0) {
        _this->_impl_.force_apply_ = from._impl_.force_apply_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApplyConditionRequest::CopyFrom(const ApplyConditionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ApplyConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ApplyConditionRequest::InternalSwap(ApplyConditionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_entity_id_, &other->_impl_.target_entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_entity_id_, &other->_impl_.source_entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.force_apply_)
      + sizeof(ApplyConditionRequest::_impl_.force_apply_)
      - PROTOBUF_FIELD_OFFSET(ApplyConditionRequest, _impl_.parameters_)>(
          reinterpret_cast<char*>(&_impl_.parameters_),
          reinterpret_cast<char*>(&other->_impl_.parameters_));
}

::google::protobuf::Metadata ApplyConditionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ApplyConditionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ApplyConditionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_._has_bits_);
};

void ApplyConditionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
ApplyConditionResponse::ApplyConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ApplyConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ApplyConditionResponse)
}
PROTOBUF_NDEBUG_INLINE ApplyConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ApplyConditionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        warnings_{visibility, arena, from.warnings_},
        conflicting_conditions_{visibility, arena, from.conflicting_conditions_} {}

ApplyConditionResponse::ApplyConditionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ApplyConditionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ApplyConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ApplyConditionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.applied_condition_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.applied_condition_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.ApplyConditionResponse)
}
PROTOBUF_NDEBUG_INLINE ApplyConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        warnings_{visibility, arena},
        conflicting_conditions_{visibility, arena} {}

inline void ApplyConditionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, applied_condition_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, applied_condition_) +
               sizeof(Impl_::status_));
}
ApplyConditionResponse::~ApplyConditionResponse() {
  // @@protoc_insertion_point(destructor:seshat.ApplyConditionResponse)
  SharedDtor(*this);
}
inline void ApplyConditionResponse::SharedDtor(MessageLite& self) {
  ApplyConditionResponse& this_ = static_cast<ApplyConditionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.applied_condition_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ApplyConditionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ApplyConditionResponse(arena);
}
constexpr auto ApplyConditionResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.warnings_) +
          decltype(ApplyConditionResponse::_impl_.warnings_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.conflicting_conditions_) +
          decltype(ApplyConditionResponse::_impl_.conflicting_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ApplyConditionResponse), alignof(ApplyConditionResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ApplyConditionResponse::PlacementNew_,
                                 sizeof(ApplyConditionResponse),
                                 alignof(ApplyConditionResponse));
  }
}
constexpr auto ApplyConditionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ApplyConditionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ApplyConditionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ApplyConditionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ApplyConditionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ApplyConditionResponse>(), &ApplyConditionResponse::ByteSizeLong,
              &ApplyConditionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_._cached_size_),
          false,
      },
      &ApplyConditionResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ApplyConditionResponse_class_data_ =
        ApplyConditionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ApplyConditionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ApplyConditionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ApplyConditionResponse_class_data_.tc_table);
  return ApplyConditionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 46, 2>
ApplyConditionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ApplyConditionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ApplyConditionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 4 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {34, 1, 2, PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.status_)}},
    // .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.applied_condition_)}},
    // repeated string warnings = 2 [json_name = "warnings"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.warnings_)}},
    // repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.conflicting_conditions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.applied_condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated string warnings = 2 [json_name = "warnings"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.warnings_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.conflicting_conditions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
    "\35\0\10\0\0\0\0\0"
    "seshat.ApplyConditionResponse"
    "warnings"
  }},
};
PROTOBUF_NOINLINE void ApplyConditionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ApplyConditionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.warnings_.Clear();
  _impl_.conflicting_conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.applied_condition_ != nullptr);
      _impl_.applied_condition_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ApplyConditionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ApplyConditionResponse& this_ = static_cast<const ApplyConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ApplyConditionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ApplyConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ApplyConditionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.applied_condition_, this_._impl_.applied_condition_->GetCachedSize(), target,
        stream);
  }

  // repeated string warnings = 2 [json_name = "warnings"];
  for (int i = 0, n = this_._internal_warnings_size(); i < n; ++i) {
    const auto& s = this_._internal_warnings().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ApplyConditionResponse.warnings");
    target = stream->WriteString(2, s, target);
  }

  // repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conflicting_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conflicting_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .seshat.Result status = 4 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ApplyConditionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ApplyConditionResponse::ByteSizeLong(const MessageLite& base) {
  const ApplyConditionResponse& this_ = static_cast<const ApplyConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ApplyConditionResponse::ByteSizeLong() const {
  const ApplyConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ApplyConditionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string warnings = 2 [json_name = "warnings"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_warnings().size());
      for (int i = 0, n = this_._internal_warnings().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_warnings().Get(i));
      }
    }
    // repeated .seshat.Condition conflicting_conditions = 3 [json_name = "conflictingConditions"];
    {
      total_size += 1UL * this_._internal_conflicting_conditions_size();
      for (const auto& msg : this_._internal_conflicting_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Condition applied_condition = 1 [json_name = "appliedCondition"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.applied_condition_);
    }
    // .seshat.Result status = 4 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ApplyConditionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ApplyConditionResponse*>(&to_msg);
  auto& from = static_cast<const ApplyConditionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ApplyConditionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_warnings()->MergeFrom(from._internal_warnings());
  _this->_internal_mutable_conflicting_conditions()->MergeFrom(
      from._internal_conflicting_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.applied_condition_ != nullptr);
      if (_this->_impl_.applied_condition_ == nullptr) {
        _this->_impl_.applied_condition_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.applied_condition_);
      } else {
        _this->_impl_.applied_condition_->MergeFrom(*from._impl_.applied_condition_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ApplyConditionResponse::CopyFrom(const ApplyConditionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ApplyConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ApplyConditionResponse::InternalSwap(ApplyConditionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.warnings_.InternalSwap(&other->_impl_.warnings_);
  _impl_.conflicting_conditions_.InternalSwap(&other->_impl_.conflicting_conditions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.status_)
      + sizeof(ApplyConditionResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(ApplyConditionResponse, _impl_.applied_condition_)>(
          reinterpret_cast<char*>(&_impl_.applied_condition_),
          reinterpret_cast<char*>(&other->_impl_.applied_condition_));
}

::google::protobuf::Metadata ApplyConditionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ConditionParameters_PropertiesEntry_DoNotUse::ConditionParameters_PropertiesEntry_DoNotUse()
    : SuperType(ConditionParameters_PropertiesEntry_DoNotUse_class_data_.base()) {}
ConditionParameters_PropertiesEntry_DoNotUse::ConditionParameters_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ConditionParameters_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ConditionParameters_PropertiesEntry_DoNotUse::ConditionParameters_PropertiesEntry_DoNotUse() : SuperType() {}
ConditionParameters_PropertiesEntry_DoNotUse::ConditionParameters_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ConditionParameters_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionParameters_PropertiesEntry_DoNotUse(arena);
}
constexpr auto ConditionParameters_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConditionParameters_PropertiesEntry_DoNotUse),
                                            alignof(ConditionParameters_PropertiesEntry_DoNotUse));
}
constexpr auto ConditionParameters_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionParameters_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionParameters_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionParameters_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionParameters_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ConditionParameters_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ConditionParameters_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionParameters_PropertiesEntry_DoNotUse_class_data_ =
        ConditionParameters_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionParameters_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionParameters_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionParameters_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return ConditionParameters_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
ConditionParameters_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConditionParameters_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionParameters_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\3\5\0\0\0\0\0"
    "seshat.ConditionParameters.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class ConditionParameters::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConditionParameters>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_._has_bits_);
};

ConditionParameters::ConditionParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConditionParameters)
}
PROTOBUF_NDEBUG_INLINE ConditionParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConditionParameters& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        custom_effects_{visibility, arena, from.custom_effects_},
        properties_{visibility, arena, from.properties_} {}

ConditionParameters::ConditionParameters(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConditionParameters& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionParameters_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionParameters* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.duration_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, severity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, severity_),
           offsetof(Impl_, stack_count_) -
               offsetof(Impl_, severity_) +
               sizeof(Impl_::stack_count_));

  // @@protoc_insertion_point(copy_constructor:seshat.ConditionParameters)
}
PROTOBUF_NDEBUG_INLINE ConditionParameters::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        custom_effects_{visibility, arena},
        properties_{visibility, arena} {}

inline void ConditionParameters::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, duration_),
           0,
           offsetof(Impl_, stack_count_) -
               offsetof(Impl_, duration_) +
               sizeof(Impl_::stack_count_));
}
ConditionParameters::~ConditionParameters() {
  // @@protoc_insertion_point(destructor:seshat.ConditionParameters)
  SharedDtor(*this);
}
inline void ConditionParameters::SharedDtor(MessageLite& self) {
  ConditionParameters& this_ = static_cast<ConditionParameters&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConditionParameters::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionParameters(arena);
}
constexpr auto ConditionParameters::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.custom_effects_) +
          decltype(ConditionParameters::_impl_.custom_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.properties_) +
          decltype(ConditionParameters::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.properties_) +
          decltype(ConditionParameters::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConditionParameters), alignof(ConditionParameters), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionParameters::PlacementNew_,
                                 sizeof(ConditionParameters),
                                 alignof(ConditionParameters));
  }
}
constexpr auto ConditionParameters::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionParameters_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionParameters::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionParameters>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionParameters::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConditionParameters>(), &ConditionParameters::ByteSizeLong,
              &ConditionParameters::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_._cached_size_),
          false,
      },
      &ConditionParameters::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionParameters_class_data_ =
        ConditionParameters::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionParameters::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionParameters_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionParameters_class_data_.tc_table);
  return ConditionParameters_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 3, 45, 2>
ConditionParameters::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConditionParameters_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionParameters>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionParameters, _impl_.severity_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.severity_)}},
    // .seshat.ConditionDuration duration = 2 [json_name = "duration"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.duration_)}},
    // repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.custom_effects_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int32 stack_count = 5 [json_name = "stackCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionParameters, _impl_.stack_count_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.stack_count_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.severity_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .seshat.ConditionDuration duration = 2 [json_name = "duration"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.duration_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.custom_effects_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, string> properties = 4 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.properties_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int32 stack_count = 5 [json_name = "stackCount"];
    {PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.stack_count_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionDuration>()},
      {::_pbi::TcParser::GetTable<::seshat::ConditionEffect>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\32\0\0\0\12\0\0\0"
    "seshat.ConditionParameters"
    "properties"
  }},
};
PROTOBUF_NOINLINE void ConditionParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConditionParameters)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.custom_effects_.Clear();
  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.duration_ != nullptr);
    _impl_.duration_->Clear();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.severity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stack_count_) -
        reinterpret_cast<char*>(&_impl_.severity_)) + sizeof(_impl_.stack_count_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConditionParameters::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConditionParameters& this_ = static_cast<const ConditionParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConditionParameters::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConditionParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConditionParameters)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_severity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_severity(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionDuration duration = 2 [json_name = "duration"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.duration_, this_._impl_.duration_->GetCachedSize(), target,
        stream);
  }

  // repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_custom_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_custom_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // map<string, string> properties = 4 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionParameters.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionParameters.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            4, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionParameters.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionParameters.properties");
      }
    }
  }

  // int32 stack_count = 5 [json_name = "stackCount"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (this_._internal_stack_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<5>(
              stream, this_._internal_stack_count(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConditionParameters)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConditionParameters::ByteSizeLong(const MessageLite& base) {
  const ConditionParameters& this_ = static_cast<const ConditionParameters&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConditionParameters::ByteSizeLong() const {
  const ConditionParameters& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConditionParameters)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConditionEffect custom_effects = 3 [json_name = "customEffects"];
    {
      total_size += 1UL * this_._internal_custom_effects_size();
      for (const auto& msg : this_._internal_custom_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // map<string, string> properties = 4 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.ConditionDuration duration = 2 [json_name = "duration"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.duration_);
    }
    // .seshat.ConditionSeverity severity = 1 [json_name = "severity"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_severity() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_severity());
      }
    }
    // int32 stack_count = 5 [json_name = "stackCount"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_stack_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_stack_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConditionParameters::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionParameters*>(&to_msg);
  auto& from = static_cast<const ConditionParameters&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConditionParameters)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_custom_effects()->MergeFrom(
      from._internal_custom_effects());
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.duration_ != nullptr);
      if (_this->_impl_.duration_ == nullptr) {
        _this->_impl_.duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.duration_);
      } else {
        _this->_impl_.duration_->MergeFrom(*from._impl_.duration_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_severity() != 0) {
        _this->_impl_.severity_ = from._impl_.severity_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_stack_count() != 0) {
        _this->_impl_.stack_count_ = from._impl_.stack_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionParameters::CopyFrom(const ConditionParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConditionParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionParameters::InternalSwap(ConditionParameters* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.custom_effects_.InternalSwap(&other->_impl_.custom_effects_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.stack_count_)
      + sizeof(ConditionParameters::_impl_.stack_count_)
      - PROTOBUF_FIELD_OFFSET(ConditionParameters, _impl_.duration_)>(
          reinterpret_cast<char*>(&_impl_.duration_),
          reinterpret_cast<char*>(&other->_impl_.duration_));
}

::google::protobuf::Metadata ConditionParameters::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveConditionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveConditionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_._has_bits_);
};

RemoveConditionRequest::RemoveConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.RemoveConditionRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::RemoveConditionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_id_(arena, from.condition_id_),
        target_entity_id_(arena, from.target_entity_id_),
        condition_type_(arena, from.condition_type_) {}

RemoveConditionRequest::RemoveConditionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveConditionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveConditionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.reason_ = from._impl_.reason_;

  // @@protoc_insertion_point(copy_constructor:seshat.RemoveConditionRequest)
}
PROTOBUF_NDEBUG_INLINE RemoveConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_id_(arena),
        target_entity_id_(arena),
        condition_type_(arena) {}

inline void RemoveConditionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.reason_ = {};
}
RemoveConditionRequest::~RemoveConditionRequest() {
  // @@protoc_insertion_point(destructor:seshat.RemoveConditionRequest)
  SharedDtor(*this);
}
inline void RemoveConditionRequest::SharedDtor(MessageLite& self) {
  RemoveConditionRequest& this_ = static_cast<RemoveConditionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.condition_id_.Destroy();
  this_._impl_.target_entity_id_.Destroy();
  this_._impl_.condition_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoveConditionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveConditionRequest(arena);
}
constexpr auto RemoveConditionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RemoveConditionRequest),
                                            alignof(RemoveConditionRequest));
}
constexpr auto RemoveConditionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveConditionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveConditionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveConditionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveConditionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveConditionRequest>(), &RemoveConditionRequest::ByteSizeLong,
              &RemoveConditionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_._cached_size_),
          false,
      },
      &RemoveConditionRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveConditionRequest_class_data_ =
        RemoveConditionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveConditionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveConditionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveConditionRequest_class_data_.tc_table);
  return RemoveConditionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 80, 2>
RemoveConditionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RemoveConditionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::RemoveConditionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.RemovalReason reason = 4 [json_name = "reason"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(RemoveConditionRequest, _impl_.reason_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.reason_)}},
    // string condition_id = 1 [json_name = "conditionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.condition_id_)}},
    // string target_entity_id = 2 [json_name = "targetEntityId"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.target_entity_id_)}},
    // string condition_type = 3 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.condition_type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string condition_id = 1 [json_name = "conditionId"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.condition_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string target_entity_id = 2 [json_name = "targetEntityId"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.target_entity_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string condition_type = 3 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.condition_type_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.RemovalReason reason = 4 [json_name = "reason"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionRequest, _impl_.reason_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\35\14\20\16\0\0\0\0"
    "seshat.RemoveConditionRequest"
    "condition_id"
    "target_entity_id"
    "condition_type"
  }},
};
PROTOBUF_NOINLINE void RemoveConditionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.RemoveConditionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.condition_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.target_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.condition_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.reason_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveConditionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveConditionRequest& this_ = static_cast<const RemoveConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveConditionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.RemoveConditionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string condition_id = 1 [json_name = "conditionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_condition_id().empty()) {
      const ::std::string& _s = this_._internal_condition_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.RemoveConditionRequest.condition_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string target_entity_id = 2 [json_name = "targetEntityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_target_entity_id().empty()) {
      const ::std::string& _s = this_._internal_target_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.RemoveConditionRequest.target_entity_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string condition_type = 3 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.RemoveConditionRequest.condition_type");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // .seshat.RemovalReason reason = 4 [json_name = "reason"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (this_._internal_reason() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          4, this_._internal_reason(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.RemoveConditionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveConditionRequest::ByteSizeLong(const MessageLite& base) {
  const RemoveConditionRequest& this_ = static_cast<const RemoveConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveConditionRequest::ByteSizeLong() const {
  const RemoveConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.RemoveConditionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    // string condition_id = 1 [json_name = "conditionId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_condition_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_id());
      }
    }
    // string target_entity_id = 2 [json_name = "targetEntityId"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_target_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_target_entity_id());
      }
    }
    // string condition_type = 3 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
    // .seshat.RemovalReason reason = 4 [json_name = "reason"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (this_._internal_reason() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_reason());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveConditionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveConditionRequest*>(&to_msg);
  auto& from = static_cast<const RemoveConditionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.RemoveConditionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_condition_id().empty()) {
        _this->_internal_set_condition_id(from._internal_condition_id());
      } else {
        if (_this->_impl_.condition_id_.IsDefault()) {
          _this->_internal_set_condition_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_target_entity_id().empty()) {
        _this->_internal_set_target_entity_id(from._internal_target_entity_id());
      } else {
        if (_this->_impl_.target_entity_id_.IsDefault()) {
          _this->_internal_set_target_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (from._internal_reason() != 0) {
        _this->_impl_.reason_ = from._impl_.reason_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveConditionRequest::CopyFrom(const RemoveConditionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.RemoveConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveConditionRequest::InternalSwap(RemoveConditionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_id_, &other->_impl_.condition_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.target_entity_id_, &other->_impl_.target_entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
  swap(_impl_.reason_, other->_impl_.reason_);
}

::google::protobuf::Metadata RemoveConditionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RemoveConditionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RemoveConditionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_._has_bits_);
};

void RemoveConditionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
RemoveConditionResponse::RemoveConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.RemoveConditionResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::RemoveConditionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

RemoveConditionResponse::RemoveConditionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RemoveConditionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RemoveConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RemoveConditionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.removed_condition_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.removed_condition_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.RemoveConditionResponse)
}
PROTOBUF_NDEBUG_INLINE RemoveConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RemoveConditionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, removed_condition_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, removed_condition_) +
               sizeof(Impl_::status_));
}
RemoveConditionResponse::~RemoveConditionResponse() {
  // @@protoc_insertion_point(destructor:seshat.RemoveConditionResponse)
  SharedDtor(*this);
}
inline void RemoveConditionResponse::SharedDtor(MessageLite& self) {
  RemoveConditionResponse& this_ = static_cast<RemoveConditionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.removed_condition_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RemoveConditionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RemoveConditionResponse(arena);
}
constexpr auto RemoveConditionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RemoveConditionResponse),
                                            alignof(RemoveConditionResponse));
}
constexpr auto RemoveConditionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RemoveConditionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RemoveConditionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RemoveConditionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RemoveConditionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RemoveConditionResponse>(), &RemoveConditionResponse::ByteSizeLong,
              &RemoveConditionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_._cached_size_),
          false,
      },
      &RemoveConditionResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RemoveConditionResponse_class_data_ =
        RemoveConditionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RemoveConditionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RemoveConditionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RemoveConditionResponse_class_data_.tc_table);
  return RemoveConditionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
RemoveConditionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    RemoveConditionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::RemoveConditionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.status_)}},
    // .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.removed_condition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.removed_condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void RemoveConditionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.RemoveConditionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.removed_condition_ != nullptr);
      _impl_.removed_condition_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RemoveConditionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RemoveConditionResponse& this_ = static_cast<const RemoveConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RemoveConditionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RemoveConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.RemoveConditionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.removed_condition_, this_._impl_.removed_condition_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.RemoveConditionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RemoveConditionResponse::ByteSizeLong(const MessageLite& base) {
  const RemoveConditionResponse& this_ = static_cast<const RemoveConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RemoveConditionResponse::ByteSizeLong() const {
  const RemoveConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.RemoveConditionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Condition removed_condition = 1 [json_name = "removedCondition"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.removed_condition_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RemoveConditionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RemoveConditionResponse*>(&to_msg);
  auto& from = static_cast<const RemoveConditionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.RemoveConditionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.removed_condition_ != nullptr);
      if (_this->_impl_.removed_condition_ == nullptr) {
        _this->_impl_.removed_condition_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.removed_condition_);
      } else {
        _this->_impl_.removed_condition_->MergeFrom(*from._impl_.removed_condition_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveConditionResponse::CopyFrom(const RemoveConditionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.RemoveConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RemoveConditionResponse::InternalSwap(RemoveConditionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.status_)
      + sizeof(RemoveConditionResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(RemoveConditionResponse, _impl_.removed_condition_)>(
          reinterpret_cast<char*>(&_impl_.removed_condition_),
          reinterpret_cast<char*>(&other->_impl_.removed_condition_));
}

::google::protobuf::Metadata RemoveConditionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateConditionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateConditionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_._has_bits_);
};

UpdateConditionRequest::UpdateConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UpdateConditionRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UpdateConditionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_id_(arena, from.condition_id_) {}

UpdateConditionRequest::UpdateConditionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateConditionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateConditionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.updates_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updates_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.UpdateConditionRequest)
}
PROTOBUF_NDEBUG_INLINE UpdateConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_id_(arena) {}

inline void UpdateConditionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.updates_ = {};
}
UpdateConditionRequest::~UpdateConditionRequest() {
  // @@protoc_insertion_point(destructor:seshat.UpdateConditionRequest)
  SharedDtor(*this);
}
inline void UpdateConditionRequest::SharedDtor(MessageLite& self) {
  UpdateConditionRequest& this_ = static_cast<UpdateConditionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.condition_id_.Destroy();
  delete this_._impl_.updates_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateConditionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateConditionRequest(arena);
}
constexpr auto UpdateConditionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UpdateConditionRequest),
                                            alignof(UpdateConditionRequest));
}
constexpr auto UpdateConditionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateConditionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateConditionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateConditionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateConditionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateConditionRequest>(), &UpdateConditionRequest::ByteSizeLong,
              &UpdateConditionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_._cached_size_),
          false,
      },
      &UpdateConditionRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateConditionRequest_class_data_ =
        UpdateConditionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateConditionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateConditionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateConditionRequest_class_data_.tc_table);
  return UpdateConditionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 50, 2>
UpdateConditionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateConditionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UpdateConditionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.ConditionParameters updates = 2 [json_name = "updates"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_.updates_)}},
    // string condition_id = 1 [json_name = "conditionId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_.condition_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string condition_id = 1 [json_name = "conditionId"];
    {PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_.condition_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.ConditionParameters updates = 2 [json_name = "updates"];
    {PROTOBUF_FIELD_OFFSET(UpdateConditionRequest, _impl_.updates_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionParameters>()},
  }},
  {{
    "\35\14\0\0\0\0\0\0"
    "seshat.UpdateConditionRequest"
    "condition_id"
  }},
};
PROTOBUF_NOINLINE void UpdateConditionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UpdateConditionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.condition_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.updates_ != nullptr);
      _impl_.updates_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateConditionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateConditionRequest& this_ = static_cast<const UpdateConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateConditionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UpdateConditionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string condition_id = 1 [json_name = "conditionId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_condition_id().empty()) {
      const ::std::string& _s = this_._internal_condition_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.UpdateConditionRequest.condition_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionParameters updates = 2 [json_name = "updates"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.updates_, this_._impl_.updates_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UpdateConditionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateConditionRequest::ByteSizeLong(const MessageLite& base) {
  const UpdateConditionRequest& this_ = static_cast<const UpdateConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateConditionRequest::ByteSizeLong() const {
  const UpdateConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UpdateConditionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string condition_id = 1 [json_name = "conditionId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_condition_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_id());
      }
    }
    // .seshat.ConditionParameters updates = 2 [json_name = "updates"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updates_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateConditionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateConditionRequest*>(&to_msg);
  auto& from = static_cast<const UpdateConditionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UpdateConditionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_condition_id().empty()) {
        _this->_internal_set_condition_id(from._internal_condition_id());
      } else {
        if (_this->_impl_.condition_id_.IsDefault()) {
          _this->_internal_set_condition_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.updates_ != nullptr);
      if (_this->_impl_.updates_ == nullptr) {
        _this->_impl_.updates_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updates_);
      } else {
        _this->_impl_.updates_->MergeFrom(*from._impl_.updates_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateConditionRequest::CopyFrom(const UpdateConditionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UpdateConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateConditionRequest::InternalSwap(UpdateConditionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_id_, &other->_impl_.condition_id_, arena);
  swap(_impl_.updates_, other->_impl_.updates_);
}

::google::protobuf::Metadata UpdateConditionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UpdateConditionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UpdateConditionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_._has_bits_);
};

void UpdateConditionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
UpdateConditionResponse::UpdateConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.UpdateConditionResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::UpdateConditionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

UpdateConditionResponse::UpdateConditionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UpdateConditionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UpdateConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UpdateConditionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.updated_condition_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updated_condition_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.UpdateConditionResponse)
}
PROTOBUF_NDEBUG_INLINE UpdateConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void UpdateConditionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, updated_condition_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, updated_condition_) +
               sizeof(Impl_::status_));
}
UpdateConditionResponse::~UpdateConditionResponse() {
  // @@protoc_insertion_point(destructor:seshat.UpdateConditionResponse)
  SharedDtor(*this);
}
inline void UpdateConditionResponse::SharedDtor(MessageLite& self) {
  UpdateConditionResponse& this_ = static_cast<UpdateConditionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.updated_condition_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UpdateConditionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UpdateConditionResponse(arena);
}
constexpr auto UpdateConditionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(UpdateConditionResponse),
                                            alignof(UpdateConditionResponse));
}
constexpr auto UpdateConditionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UpdateConditionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UpdateConditionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UpdateConditionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UpdateConditionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UpdateConditionResponse>(), &UpdateConditionResponse::ByteSizeLong,
              &UpdateConditionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_._cached_size_),
          false,
      },
      &UpdateConditionResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UpdateConditionResponse_class_data_ =
        UpdateConditionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UpdateConditionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UpdateConditionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UpdateConditionResponse_class_data_.tc_table);
  return UpdateConditionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
UpdateConditionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    UpdateConditionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::UpdateConditionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.status_)}},
    // .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.updated_condition_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
    {PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.updated_condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void UpdateConditionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.UpdateConditionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.updated_condition_ != nullptr);
      _impl_.updated_condition_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UpdateConditionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UpdateConditionResponse& this_ = static_cast<const UpdateConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UpdateConditionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UpdateConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.UpdateConditionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.updated_condition_, this_._impl_.updated_condition_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.UpdateConditionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UpdateConditionResponse::ByteSizeLong(const MessageLite& base) {
  const UpdateConditionResponse& this_ = static_cast<const UpdateConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UpdateConditionResponse::ByteSizeLong() const {
  const UpdateConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.UpdateConditionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Condition updated_condition = 1 [json_name = "updatedCondition"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.updated_condition_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UpdateConditionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UpdateConditionResponse*>(&to_msg);
  auto& from = static_cast<const UpdateConditionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.UpdateConditionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.updated_condition_ != nullptr);
      if (_this->_impl_.updated_condition_ == nullptr) {
        _this->_impl_.updated_condition_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.updated_condition_);
      } else {
        _this->_impl_.updated_condition_->MergeFrom(*from._impl_.updated_condition_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateConditionResponse::CopyFrom(const UpdateConditionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.UpdateConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UpdateConditionResponse::InternalSwap(UpdateConditionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.status_)
      + sizeof(UpdateConditionResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(UpdateConditionResponse, _impl_.updated_condition_)>(
          reinterpret_cast<char*>(&_impl_.updated_condition_),
          reinterpret_cast<char*>(&other->_impl_.updated_condition_));
}

::google::protobuf::Metadata UpdateConditionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_._has_bits_);
};

GetConditionsRequest::GetConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_types_{visibility, arena, from.condition_types_},
        entity_id_(arena, from.entity_id_) {}

GetConditionsRequest::GetConditionsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.active_only_ = from._impl_.active_only_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_types_{visibility, arena},
        entity_id_(arena) {}

inline void GetConditionsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.active_only_ = {};
}
GetConditionsRequest::~GetConditionsRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionsRequest)
  SharedDtor(*this);
}
inline void GetConditionsRequest::SharedDtor(MessageLite& self) {
  GetConditionsRequest& this_ = static_cast<GetConditionsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionsRequest(arena);
}
constexpr auto GetConditionsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.condition_types_) +
          decltype(GetConditionsRequest::_impl_.condition_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetConditionsRequest), alignof(GetConditionsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionsRequest::PlacementNew_,
                                 sizeof(GetConditionsRequest),
                                 alignof(GetConditionsRequest));
  }
}
constexpr auto GetConditionsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionsRequest>(), &GetConditionsRequest::ByteSizeLong,
              &GetConditionsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_._cached_size_),
          false,
      },
      &GetConditionsRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionsRequest_class_data_ =
        GetConditionsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionsRequest_class_data_.tc_table);
  return GetConditionsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 60, 2>
GetConditionsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetConditionsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.entity_id_)}},
    // bool active_only = 2 [json_name = "activeOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetConditionsRequest, _impl_.active_only_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.active_only_)}},
    // repeated string condition_types = 3 [json_name = "conditionTypes"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.condition_types_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active_only = 2 [json_name = "activeOnly"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.active_only_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string condition_types = 3 [json_name = "conditionTypes"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsRequest, _impl_.condition_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\33\11\0\17\0\0\0\0"
    "seshat.GetConditionsRequest"
    "entity_id"
    "condition_types"
  }},
};
PROTOBUF_NOINLINE void GetConditionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.condition_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  _impl_.active_only_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionsRequest& this_ = static_cast<const GetConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionsRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool active_only = 2 [json_name = "activeOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_active_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_active_only(), target);
    }
  }

  // repeated string condition_types = 3 [json_name = "conditionTypes"];
  for (int i = 0, n = this_._internal_condition_types_size(); i < n; ++i) {
    const auto& s = this_._internal_condition_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionsRequest.condition_types");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionsRequest::ByteSizeLong(const MessageLite& base) {
  const GetConditionsRequest& this_ = static_cast<const GetConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionsRequest::ByteSizeLong() const {
  const GetConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string condition_types = 3 [json_name = "conditionTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_condition_types().size());
      for (int i = 0, n = this_._internal_condition_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_condition_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // bool active_only = 2 [json_name = "activeOnly"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_active_only() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionsRequest*>(&to_msg);
  auto& from = static_cast<const GetConditionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_condition_types()->MergeFrom(from._internal_condition_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_active_only() != 0) {
        _this->_impl_.active_only_ = from._impl_.active_only_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionsRequest::CopyFrom(const GetConditionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionsRequest::InternalSwap(GetConditionsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.condition_types_.InternalSwap(&other->_impl_.condition_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  swap(_impl_.active_only_, other->_impl_.active_only_);
}

::google::protobuf::Metadata GetConditionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_._has_bits_);
};

void GetConditionsResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetConditionsResponse::GetConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conditions_{visibility, arena, from.conditions_} {}

GetConditionsResponse::GetConditionsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conditions_{visibility, arena} {}

inline void GetConditionsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_count_));
}
GetConditionsResponse::~GetConditionsResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionsResponse)
  SharedDtor(*this);
}
inline void GetConditionsResponse::SharedDtor(MessageLite& self) {
  GetConditionsResponse& this_ = static_cast<GetConditionsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionsResponse(arena);
}
constexpr auto GetConditionsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.conditions_) +
          decltype(GetConditionsResponse::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetConditionsResponse), alignof(GetConditionsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionsResponse::PlacementNew_,
                                 sizeof(GetConditionsResponse),
                                 alignof(GetConditionsResponse));
  }
}
constexpr auto GetConditionsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionsResponse>(), &GetConditionsResponse::ByteSizeLong,
              &GetConditionsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_._cached_size_),
          false,
      },
      &GetConditionsResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionsResponse_class_data_ =
        GetConditionsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionsResponse_class_data_.tc_table);
  return GetConditionsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
GetConditionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetConditionsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.conditions_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetConditionsResponse, _impl_.total_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.total_count_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetConditionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionsResponse& this_ = static_cast<const GetConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionsResponse::ByteSizeLong(const MessageLite& base) {
  const GetConditionsResponse& this_ = static_cast<const GetConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionsResponse::ByteSizeLong() const {
  const GetConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {
      total_size += 1UL * this_._internal_conditions_size();
      for (const auto& msg : this_._internal_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_count = 2 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionsResponse*>(&to_msg);
  auto& from = static_cast<const GetConditionsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionsResponse::CopyFrom(const GetConditionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionsResponse::InternalSwap(GetConditionsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.total_count_)
      + sizeof(GetConditionsResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(GetConditionsResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata GetConditionsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HasConditionRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HasConditionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_._has_bits_);
};

HasConditionRequest::HasConditionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HasConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.HasConditionRequest)
}
PROTOBUF_NDEBUG_INLINE HasConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::HasConditionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        condition_type_(arena, from.condition_type_) {}

HasConditionRequest::HasConditionRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HasConditionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HasConditionRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HasConditionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.active_only_ = from._impl_.active_only_;

  // @@protoc_insertion_point(copy_constructor:seshat.HasConditionRequest)
}
PROTOBUF_NDEBUG_INLINE HasConditionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_id_(arena),
        condition_type_(arena) {}

inline void HasConditionRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.active_only_ = {};
}
HasConditionRequest::~HasConditionRequest() {
  // @@protoc_insertion_point(destructor:seshat.HasConditionRequest)
  SharedDtor(*this);
}
inline void HasConditionRequest::SharedDtor(MessageLite& self) {
  HasConditionRequest& this_ = static_cast<HasConditionRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.condition_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HasConditionRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HasConditionRequest(arena);
}
constexpr auto HasConditionRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HasConditionRequest),
                                            alignof(HasConditionRequest));
}
constexpr auto HasConditionRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HasConditionRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HasConditionRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HasConditionRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HasConditionRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HasConditionRequest>(), &HasConditionRequest::ByteSizeLong,
              &HasConditionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_._cached_size_),
          false,
      },
      &HasConditionRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HasConditionRequest_class_data_ =
        HasConditionRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HasConditionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HasConditionRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HasConditionRequest_class_data_.tc_table);
  return HasConditionRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 58, 2>
HasConditionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HasConditionRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::HasConditionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.entity_id_)}},
    // string condition_type = 2 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.condition_type_)}},
    // bool active_only = 3 [json_name = "activeOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HasConditionRequest, _impl_.active_only_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.active_only_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string condition_type = 2 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.condition_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active_only = 3 [json_name = "activeOnly"];
    {PROTOBUF_FIELD_OFFSET(HasConditionRequest, _impl_.active_only_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\32\11\16\0\0\0\0\0"
    "seshat.HasConditionRequest"
    "entity_id"
    "condition_type"
  }},
};
PROTOBUF_NOINLINE void HasConditionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.HasConditionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.condition_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.active_only_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HasConditionRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HasConditionRequest& this_ = static_cast<const HasConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HasConditionRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HasConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.HasConditionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.HasConditionRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string condition_type = 2 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.HasConditionRequest.condition_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // bool active_only = 3 [json_name = "activeOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_active_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          3, this_._internal_active_only(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.HasConditionRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HasConditionRequest::ByteSizeLong(const MessageLite& base) {
  const HasConditionRequest& this_ = static_cast<const HasConditionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HasConditionRequest::ByteSizeLong() const {
  const HasConditionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.HasConditionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string condition_type = 2 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
    // bool active_only = 3 [json_name = "activeOnly"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_active_only() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HasConditionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HasConditionRequest*>(&to_msg);
  auto& from = static_cast<const HasConditionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.HasConditionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_active_only() != 0) {
        _this->_impl_.active_only_ = from._impl_.active_only_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HasConditionRequest::CopyFrom(const HasConditionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.HasConditionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HasConditionRequest::InternalSwap(HasConditionRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
  swap(_impl_.active_only_, other->_impl_.active_only_);
}

::google::protobuf::Metadata HasConditionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HasConditionResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HasConditionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_._has_bits_);
};

void HasConditionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
HasConditionResponse::HasConditionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HasConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.HasConditionResponse)
}
PROTOBUF_NDEBUG_INLINE HasConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::HasConditionResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HasConditionResponse::HasConditionResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HasConditionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HasConditionResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HasConditionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.condition_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.condition_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.has_condition_ = from._impl_.has_condition_;

  // @@protoc_insertion_point(copy_constructor:seshat.HasConditionResponse)
}
PROTOBUF_NDEBUG_INLINE HasConditionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HasConditionResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, condition_),
           0,
           offsetof(Impl_, has_condition_) -
               offsetof(Impl_, condition_) +
               sizeof(Impl_::has_condition_));
}
HasConditionResponse::~HasConditionResponse() {
  // @@protoc_insertion_point(destructor:seshat.HasConditionResponse)
  SharedDtor(*this);
}
inline void HasConditionResponse::SharedDtor(MessageLite& self) {
  HasConditionResponse& this_ = static_cast<HasConditionResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.condition_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HasConditionResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HasConditionResponse(arena);
}
constexpr auto HasConditionResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HasConditionResponse),
                                            alignof(HasConditionResponse));
}
constexpr auto HasConditionResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HasConditionResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HasConditionResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HasConditionResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HasConditionResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HasConditionResponse>(), &HasConditionResponse::ByteSizeLong,
              &HasConditionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_._cached_size_),
          false,
      },
      &HasConditionResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HasConditionResponse_class_data_ =
        HasConditionResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HasConditionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HasConditionResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HasConditionResponse_class_data_.tc_table);
  return HasConditionResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
HasConditionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HasConditionResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::HasConditionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool has_condition = 1 [json_name = "hasCondition"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(HasConditionResponse, _impl_.has_condition_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.has_condition_)}},
    // .seshat.Condition condition = 2 [json_name = "condition"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.condition_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool has_condition = 1 [json_name = "hasCondition"];
    {PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.has_condition_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // .seshat.Condition condition = 2 [json_name = "condition"];
    {PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.condition_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HasConditionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.HasConditionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.condition_ != nullptr);
      _impl_.condition_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_.has_condition_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HasConditionResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HasConditionResponse& this_ = static_cast<const HasConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HasConditionResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HasConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.HasConditionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool has_condition = 1 [json_name = "hasCondition"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_has_condition() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_has_condition(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Condition condition = 2 [json_name = "condition"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.condition_, this_._impl_.condition_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.HasConditionResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HasConditionResponse::ByteSizeLong(const MessageLite& base) {
  const HasConditionResponse& this_ = static_cast<const HasConditionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HasConditionResponse::ByteSizeLong() const {
  const HasConditionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.HasConditionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .seshat.Condition condition = 2 [json_name = "condition"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.condition_);
    }
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // bool has_condition = 1 [json_name = "hasCondition"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_has_condition() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HasConditionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HasConditionResponse*>(&to_msg);
  auto& from = static_cast<const HasConditionResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.HasConditionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.condition_ != nullptr);
      if (_this->_impl_.condition_ == nullptr) {
        _this->_impl_.condition_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.condition_);
      } else {
        _this->_impl_.condition_->MergeFrom(*from._impl_.condition_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_has_condition() != 0) {
        _this->_impl_.has_condition_ = from._impl_.has_condition_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HasConditionResponse::CopyFrom(const HasConditionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.HasConditionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HasConditionResponse::InternalSwap(HasConditionResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.has_condition_)
      + sizeof(HasConditionResponse::_impl_.has_condition_)
      - PROTOBUF_FIELD_OFFSET(HasConditionResponse, _impl_.condition_)>(
          reinterpret_cast<char*>(&_impl_.condition_),
          reinterpret_cast<char*>(&other->_impl_.condition_));
}

::google::protobuf::Metadata HasConditionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionsByTypeRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionsByTypeRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_._has_bits_);
};

GetConditionsByTypeRequest::GetConditionsByTypeRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsByTypeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionsByTypeRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionsByTypeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionsByTypeRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_type_(arena, from.condition_type_) {}

GetConditionsByTypeRequest::GetConditionsByTypeRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionsByTypeRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsByTypeRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionsByTypeRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, active_only_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, active_only_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, active_only_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionsByTypeRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionsByTypeRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_type_(arena) {}

inline void GetConditionsByTypeRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, active_only_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, active_only_) +
               sizeof(Impl_::limit_));
}
GetConditionsByTypeRequest::~GetConditionsByTypeRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionsByTypeRequest)
  SharedDtor(*this);
}
inline void GetConditionsByTypeRequest::SharedDtor(MessageLite& self) {
  GetConditionsByTypeRequest& this_ = static_cast<GetConditionsByTypeRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.condition_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionsByTypeRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionsByTypeRequest(arena);
}
constexpr auto GetConditionsByTypeRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetConditionsByTypeRequest),
                                            alignof(GetConditionsByTypeRequest));
}
constexpr auto GetConditionsByTypeRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionsByTypeRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionsByTypeRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionsByTypeRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionsByTypeRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionsByTypeRequest>(), &GetConditionsByTypeRequest::ByteSizeLong,
              &GetConditionsByTypeRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_._cached_size_),
          false,
      },
      &GetConditionsByTypeRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionsByTypeRequest_class_data_ =
        GetConditionsByTypeRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionsByTypeRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionsByTypeRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionsByTypeRequest_class_data_.tc_table);
  return GetConditionsByTypeRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 56, 2>
GetConditionsByTypeRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetConditionsByTypeRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionsByTypeRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string condition_type = 1 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.condition_type_)}},
    // bool active_only = 2 [json_name = "activeOnly"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(GetConditionsByTypeRequest, _impl_.active_only_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.active_only_)}},
    // int32 limit = 3 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetConditionsByTypeRequest, _impl_.limit_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string condition_type = 1 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.condition_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool active_only = 2 [json_name = "activeOnly"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.active_only_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // int32 limit = 3 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\41\16\0\0\0\0\0\0"
    "seshat.GetConditionsByTypeRequest"
    "condition_type"
  }},
};
PROTOBUF_NOINLINE void GetConditionsByTypeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionsByTypeRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.condition_type_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.active_only_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.limit_) -
        reinterpret_cast<char*>(&_impl_.active_only_)) + sizeof(_impl_.limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionsByTypeRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionsByTypeRequest& this_ = static_cast<const GetConditionsByTypeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionsByTypeRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionsByTypeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionsByTypeRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string condition_type = 1 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionsByTypeRequest.condition_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool active_only = 2 [json_name = "activeOnly"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_active_only() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_active_only(), target);
    }
  }

  // int32 limit = 3 [json_name = "limit"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_limit(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionsByTypeRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionsByTypeRequest::ByteSizeLong(const MessageLite& base) {
  const GetConditionsByTypeRequest& this_ = static_cast<const GetConditionsByTypeRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionsByTypeRequest::ByteSizeLong() const {
  const GetConditionsByTypeRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionsByTypeRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string condition_type = 1 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
    // bool active_only = 2 [json_name = "activeOnly"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_active_only() != 0) {
        total_size += 2;
      }
    }
    // int32 limit = 3 [json_name = "limit"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_limit());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionsByTypeRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionsByTypeRequest*>(&to_msg);
  auto& from = static_cast<const GetConditionsByTypeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionsByTypeRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_active_only() != 0) {
        _this->_impl_.active_only_ = from._impl_.active_only_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionsByTypeRequest::CopyFrom(const GetConditionsByTypeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionsByTypeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionsByTypeRequest::InternalSwap(GetConditionsByTypeRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.limit_)
      + sizeof(GetConditionsByTypeRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(GetConditionsByTypeRequest, _impl_.active_only_)>(
          reinterpret_cast<char*>(&_impl_.active_only_),
          reinterpret_cast<char*>(&other->_impl_.active_only_));
}

::google::protobuf::Metadata GetConditionsByTypeRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionsByTypeResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionsByTypeResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_._has_bits_);
};

void GetConditionsByTypeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetConditionsByTypeResponse::GetConditionsByTypeResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsByTypeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionsByTypeResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionsByTypeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionsByTypeResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conditions_{visibility, arena, from.conditions_} {}

GetConditionsByTypeResponse::GetConditionsByTypeResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionsByTypeResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionsByTypeResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionsByTypeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionsByTypeResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionsByTypeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conditions_{visibility, arena} {}

inline void GetConditionsByTypeResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_count_));
}
GetConditionsByTypeResponse::~GetConditionsByTypeResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionsByTypeResponse)
  SharedDtor(*this);
}
inline void GetConditionsByTypeResponse::SharedDtor(MessageLite& self) {
  GetConditionsByTypeResponse& this_ = static_cast<GetConditionsByTypeResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionsByTypeResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionsByTypeResponse(arena);
}
constexpr auto GetConditionsByTypeResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.conditions_) +
          decltype(GetConditionsByTypeResponse::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetConditionsByTypeResponse), alignof(GetConditionsByTypeResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionsByTypeResponse::PlacementNew_,
                                 sizeof(GetConditionsByTypeResponse),
                                 alignof(GetConditionsByTypeResponse));
  }
}
constexpr auto GetConditionsByTypeResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionsByTypeResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionsByTypeResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionsByTypeResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionsByTypeResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionsByTypeResponse>(), &GetConditionsByTypeResponse::ByteSizeLong,
              &GetConditionsByTypeResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_._cached_size_),
          false,
      },
      &GetConditionsByTypeResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionsByTypeResponse_class_data_ =
        GetConditionsByTypeResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionsByTypeResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionsByTypeResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionsByTypeResponse_class_data_.tc_table);
  return GetConditionsByTypeResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
GetConditionsByTypeResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetConditionsByTypeResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionsByTypeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.conditions_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetConditionsByTypeResponse, _impl_.total_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.total_count_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetConditionsByTypeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionsByTypeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionsByTypeResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionsByTypeResponse& this_ = static_cast<const GetConditionsByTypeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionsByTypeResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionsByTypeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionsByTypeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionsByTypeResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionsByTypeResponse::ByteSizeLong(const MessageLite& base) {
  const GetConditionsByTypeResponse& this_ = static_cast<const GetConditionsByTypeResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionsByTypeResponse::ByteSizeLong() const {
  const GetConditionsByTypeResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionsByTypeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition conditions = 1 [json_name = "conditions"];
    {
      total_size += 1UL * this_._internal_conditions_size();
      for (const auto& msg : this_._internal_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_count = 2 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionsByTypeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionsByTypeResponse*>(&to_msg);
  auto& from = static_cast<const GetConditionsByTypeResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionsByTypeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionsByTypeResponse::CopyFrom(const GetConditionsByTypeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionsByTypeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionsByTypeResponse::InternalSwap(GetConditionsByTypeResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.total_count_)
      + sizeof(GetConditionsByTypeResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(GetConditionsByTypeResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata GetConditionsByTypeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetActiveConditionsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetActiveConditionsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_._has_bits_);
};

GetActiveConditionsRequest::GetActiveConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetActiveConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetActiveConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetActiveConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetActiveConditionsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_ids_{visibility, arena, from.entity_ids_} {}

GetActiveConditionsRequest::GetActiveConditionsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetActiveConditionsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetActiveConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetActiveConditionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.as_of_timestamp_ = from._impl_.as_of_timestamp_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetActiveConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetActiveConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_ids_{visibility, arena} {}

inline void GetActiveConditionsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.as_of_timestamp_ = {};
}
GetActiveConditionsRequest::~GetActiveConditionsRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetActiveConditionsRequest)
  SharedDtor(*this);
}
inline void GetActiveConditionsRequest::SharedDtor(MessageLite& self) {
  GetActiveConditionsRequest& this_ = static_cast<GetActiveConditionsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetActiveConditionsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetActiveConditionsRequest(arena);
}
constexpr auto GetActiveConditionsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_.entity_ids_) +
          decltype(GetActiveConditionsRequest::_impl_.entity_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetActiveConditionsRequest), alignof(GetActiveConditionsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetActiveConditionsRequest::PlacementNew_,
                                 sizeof(GetActiveConditionsRequest),
                                 alignof(GetActiveConditionsRequest));
  }
}
constexpr auto GetActiveConditionsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetActiveConditionsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetActiveConditionsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetActiveConditionsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetActiveConditionsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetActiveConditionsRequest>(), &GetActiveConditionsRequest::ByteSizeLong,
              &GetActiveConditionsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_._cached_size_),
          false,
      },
      &GetActiveConditionsRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetActiveConditionsRequest_class_data_ =
        GetActiveConditionsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetActiveConditionsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetActiveConditionsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetActiveConditionsRequest_class_data_.tc_table);
  return GetActiveConditionsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 52, 2>
GetActiveConditionsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetActiveConditionsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetActiveConditionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetActiveConditionsRequest, _impl_.as_of_timestamp_), 0>(),
     {16, 0, 0, PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_.as_of_timestamp_)}},
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_.entity_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_.entity_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsRequest, _impl_.as_of_timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\41\12\0\0\0\0\0\0"
    "seshat.GetActiveConditionsRequest"
    "entity_ids"
  }},
};
PROTOBUF_NOINLINE void GetActiveConditionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetActiveConditionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_ids_.Clear();
  _impl_.as_of_timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetActiveConditionsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetActiveConditionsRequest& this_ = static_cast<const GetActiveConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetActiveConditionsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetActiveConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetActiveConditionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string entity_ids = 1 [json_name = "entityIds"];
  for (int i = 0, n = this_._internal_entity_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_entity_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetActiveConditionsRequest.entity_ids");
    target = stream->WriteString(1, s, target);
  }

  // int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_as_of_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_as_of_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetActiveConditionsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetActiveConditionsRequest::ByteSizeLong(const MessageLite& base) {
  const GetActiveConditionsRequest& this_ = static_cast<const GetActiveConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetActiveConditionsRequest::ByteSizeLong() const {
  const GetActiveConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetActiveConditionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string entity_ids = 1 [json_name = "entityIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entity_ids().size());
      for (int i = 0, n = this_._internal_entity_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_entity_ids().Get(i));
      }
    }
  }
   {
    // int64 as_of_timestamp = 2 [json_name = "asOfTimestamp"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_as_of_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_as_of_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetActiveConditionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetActiveConditionsRequest*>(&to_msg);
  auto& from = static_cast<const GetActiveConditionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetActiveConditionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entity_ids()->MergeFrom(from._internal_entity_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_as_of_timestamp() != 0) {
      _this->_impl_.as_of_timestamp_ = from._impl_.as_of_timestamp_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetActiveConditionsRequest::CopyFrom(const GetActiveConditionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetActiveConditionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetActiveConditionsRequest::InternalSwap(GetActiveConditionsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entity_ids_.InternalSwap(&other->_impl_.entity_ids_);
  swap(_impl_.as_of_timestamp_, other->_impl_.as_of_timestamp_);
}

::google::protobuf::Metadata GetActiveConditionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse()
    : SuperType(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.base()) {}
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse() : SuperType() {}
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse(arena);
}
constexpr auto GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse),
                                            alignof(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse));
}
constexpr auto GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_ =
        GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.tc_table);
  return GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 68, 2>
GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.EntityConditions value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.EntityConditions value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse_EntityConditionsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::EntityConditions>()},
  }},
  {{
    "\70\3\0\0\0\0\0\0"
    "seshat.GetActiveConditionsResponse.EntityConditionsEntry"
    "key"
  }},
};
// ===================================================================

class GetActiveConditionsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetActiveConditionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_._has_bits_);
};

void GetActiveConditionsResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetActiveConditionsResponse::GetActiveConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetActiveConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetActiveConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetActiveConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetActiveConditionsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_conditions_{visibility, arena, from.entity_conditions_} {}

GetActiveConditionsResponse::GetActiveConditionsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetActiveConditionsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetActiveConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetActiveConditionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetActiveConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetActiveConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_conditions_{visibility, arena} {}

inline void GetActiveConditionsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
GetActiveConditionsResponse::~GetActiveConditionsResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetActiveConditionsResponse)
  SharedDtor(*this);
}
inline void GetActiveConditionsResponse::SharedDtor(MessageLite& self) {
  GetActiveConditionsResponse& this_ = static_cast<GetActiveConditionsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetActiveConditionsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetActiveConditionsResponse(arena);
}
constexpr auto GetActiveConditionsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_.entity_conditions_) +
          decltype(GetActiveConditionsResponse::_impl_.entity_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_.entity_conditions_) +
          decltype(GetActiveConditionsResponse::_impl_.entity_conditions_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetActiveConditionsResponse), alignof(GetActiveConditionsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetActiveConditionsResponse::PlacementNew_,
                                 sizeof(GetActiveConditionsResponse),
                                 alignof(GetActiveConditionsResponse));
  }
}
constexpr auto GetActiveConditionsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetActiveConditionsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetActiveConditionsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetActiveConditionsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetActiveConditionsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetActiveConditionsResponse>(), &GetActiveConditionsResponse::ByteSizeLong,
              &GetActiveConditionsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_._cached_size_),
          false,
      },
      &GetActiveConditionsResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetActiveConditionsResponse_class_data_ =
        GetActiveConditionsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetActiveConditionsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetActiveConditionsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetActiveConditionsResponse_class_data_.tc_table);
  return GetActiveConditionsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 3, 60, 2>
GetActiveConditionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetActiveConditionsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetActiveConditionsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .seshat.EntityConditions> entity_conditions = 1 [json_name = "entityConditions"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_.entity_conditions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetActiveConditionsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 11,
                                       0)},
      {::_pbi::TcParser::GetTable<::seshat::EntityConditions>()},
  }},
  {{
    "\42\21\0\0\0\0\0\0"
    "seshat.GetActiveConditionsResponse"
    "entity_conditions"
  }},
};
PROTOBUF_NOINLINE void GetActiveConditionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetActiveConditionsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetActiveConditionsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetActiveConditionsResponse& this_ = static_cast<const GetActiveConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetActiveConditionsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetActiveConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetActiveConditionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // map<string, .seshat.EntityConditions> entity_conditions = 1 [json_name = "entityConditions"];
  if (!this_._internal_entity_conditions().empty()) {
    using MapType = ::google::protobuf::Map<std::string, ::seshat::EntityConditions>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, ::seshat::EntityConditions,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_MESSAGE>;
    const auto& field = this_._internal_entity_conditions();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetActiveConditionsResponse.entity_conditions");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            1, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetActiveConditionsResponse.entity_conditions");
      }
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetActiveConditionsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetActiveConditionsResponse::ByteSizeLong(const MessageLite& base) {
  const GetActiveConditionsResponse& this_ = static_cast<const GetActiveConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetActiveConditionsResponse::ByteSizeLong() const {
  const GetActiveConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetActiveConditionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, .seshat.EntityConditions> entity_conditions = 1 [json_name = "entityConditions"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_entity_conditions_size());
      for (const auto& entry : this_._internal_entity_conditions()) {
        total_size += _pbi::MapEntryFuncs<std::string, ::seshat::EntityConditions,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
   {
    // .seshat.Result status = 2 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetActiveConditionsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetActiveConditionsResponse*>(&to_msg);
  auto& from = static_cast<const GetActiveConditionsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetActiveConditionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.entity_conditions_.MergeFrom(from._impl_.entity_conditions_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetActiveConditionsResponse::CopyFrom(const GetActiveConditionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetActiveConditionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetActiveConditionsResponse::InternalSwap(GetActiveConditionsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.entity_conditions_.InternalSwap(&other->_impl_.entity_conditions_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata GetActiveConditionsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class EntityConditions::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EntityConditions>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_._has_bits_);
};

EntityConditions::EntityConditions(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityConditions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.EntityConditions)
}
PROTOBUF_NDEBUG_INLINE EntityConditions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::EntityConditions& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conditions_{visibility, arena, from.conditions_},
        entity_id_(arena, from.entity_id_) {}

EntityConditions::EntityConditions(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EntityConditions& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EntityConditions_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EntityConditions* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.total_conditions_ = from._impl_.total_conditions_;

  // @@protoc_insertion_point(copy_constructor:seshat.EntityConditions)
}
PROTOBUF_NDEBUG_INLINE EntityConditions::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conditions_{visibility, arena},
        entity_id_(arena) {}

inline void EntityConditions::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.total_conditions_ = {};
}
EntityConditions::~EntityConditions() {
  // @@protoc_insertion_point(destructor:seshat.EntityConditions)
  SharedDtor(*this);
}
inline void EntityConditions::SharedDtor(MessageLite& self) {
  EntityConditions& this_ = static_cast<EntityConditions&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EntityConditions::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EntityConditions(arena);
}
constexpr auto EntityConditions::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.conditions_) +
          decltype(EntityConditions::_impl_.conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(EntityConditions), alignof(EntityConditions), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&EntityConditions::PlacementNew_,
                                 sizeof(EntityConditions),
                                 alignof(EntityConditions));
  }
}
constexpr auto EntityConditions::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EntityConditions_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EntityConditions::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EntityConditions>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EntityConditions::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EntityConditions>(), &EntityConditions::ByteSizeLong,
              &EntityConditions::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_._cached_size_),
          false,
      },
      &EntityConditions::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EntityConditions_class_data_ =
        EntityConditions::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EntityConditions::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EntityConditions_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EntityConditions_class_data_.tc_table);
  return EntityConditions_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 41, 2>
EntityConditions::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    EntityConditions_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::EntityConditions>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.entity_id_)}},
    // repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.conditions_)}},
    // int32 total_conditions = 3 [json_name = "totalConditions"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EntityConditions, _impl_.total_conditions_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.total_conditions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
    {PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_conditions = 3 [json_name = "totalConditions"];
    {PROTOBUF_FIELD_OFFSET(EntityConditions, _impl_.total_conditions_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
  }},
  {{
    "\27\11\0\0\0\0\0\0"
    "seshat.EntityConditions"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void EntityConditions::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.EntityConditions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  _impl_.total_conditions_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EntityConditions::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EntityConditions& this_ = static_cast<const EntityConditions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EntityConditions::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EntityConditions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.EntityConditions)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.EntityConditions.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_conditions = 3 [json_name = "totalConditions"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_conditions() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_total_conditions(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.EntityConditions)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EntityConditions::ByteSizeLong(const MessageLite& base) {
  const EntityConditions& this_ = static_cast<const EntityConditions&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EntityConditions::ByteSizeLong() const {
  const EntityConditions& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.EntityConditions)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition conditions = 2 [json_name = "conditions"];
    {
      total_size += 1UL * this_._internal_conditions_size();
      for (const auto& msg : this_._internal_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // int32 total_conditions = 3 [json_name = "totalConditions"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_conditions() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_conditions());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EntityConditions::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EntityConditions*>(&to_msg);
  auto& from = static_cast<const EntityConditions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.EntityConditions)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conditions()->MergeFrom(
      from._internal_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_conditions() != 0) {
        _this->_impl_.total_conditions_ = from._impl_.total_conditions_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EntityConditions::CopyFrom(const EntityConditions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.EntityConditions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EntityConditions::InternalSwap(EntityConditions* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conditions_.InternalSwap(&other->_impl_.conditions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  swap(_impl_.total_conditions_, other->_impl_.total_conditions_);
}

::google::protobuf::Metadata EntityConditions::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckImmunityRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CheckImmunityRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_._has_bits_);
};

CheckImmunityRequest::CheckImmunityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CheckImmunityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CheckImmunityRequest)
}
PROTOBUF_NDEBUG_INLINE CheckImmunityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CheckImmunityRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        condition_type_(arena, from.condition_type_) {}

CheckImmunityRequest::CheckImmunityRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CheckImmunityRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CheckImmunityRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CheckImmunityRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.CheckImmunityRequest)
}
PROTOBUF_NDEBUG_INLINE CheckImmunityRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_id_(arena),
        condition_type_(arena) {}

inline void CheckImmunityRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
CheckImmunityRequest::~CheckImmunityRequest() {
  // @@protoc_insertion_point(destructor:seshat.CheckImmunityRequest)
  SharedDtor(*this);
}
inline void CheckImmunityRequest::SharedDtor(MessageLite& self) {
  CheckImmunityRequest& this_ = static_cast<CheckImmunityRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.condition_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CheckImmunityRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CheckImmunityRequest(arena);
}
constexpr auto CheckImmunityRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(CheckImmunityRequest),
                                            alignof(CheckImmunityRequest));
}
constexpr auto CheckImmunityRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CheckImmunityRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CheckImmunityRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CheckImmunityRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CheckImmunityRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CheckImmunityRequest>(), &CheckImmunityRequest::ByteSizeLong,
              &CheckImmunityRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_._cached_size_),
          false,
      },
      &CheckImmunityRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CheckImmunityRequest_class_data_ =
        CheckImmunityRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CheckImmunityRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CheckImmunityRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CheckImmunityRequest_class_data_.tc_table);
  return CheckImmunityRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 59, 2>
CheckImmunityRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CheckImmunityRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CheckImmunityRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string condition_type = 2 [json_name = "conditionType"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_.condition_type_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string condition_type = 2 [json_name = "conditionType"];
    {PROTOBUF_FIELD_OFFSET(CheckImmunityRequest, _impl_.condition_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\11\16\0\0\0\0\0"
    "seshat.CheckImmunityRequest"
    "entity_id"
    "condition_type"
  }},
};
PROTOBUF_NOINLINE void CheckImmunityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CheckImmunityRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.condition_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CheckImmunityRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CheckImmunityRequest& this_ = static_cast<const CheckImmunityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CheckImmunityRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CheckImmunityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CheckImmunityRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CheckImmunityRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string condition_type = 2 [json_name = "conditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_condition_type().empty()) {
      const ::std::string& _s = this_._internal_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CheckImmunityRequest.condition_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CheckImmunityRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CheckImmunityRequest::ByteSizeLong(const MessageLite& base) {
  const CheckImmunityRequest& this_ = static_cast<const CheckImmunityRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CheckImmunityRequest::ByteSizeLong() const {
  const CheckImmunityRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CheckImmunityRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string condition_type = 2 [json_name = "conditionType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_condition_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CheckImmunityRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckImmunityRequest*>(&to_msg);
  auto& from = static_cast<const CheckImmunityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CheckImmunityRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_condition_type().empty()) {
        _this->_internal_set_condition_type(from._internal_condition_type());
      } else {
        if (_this->_impl_.condition_type_.IsDefault()) {
          _this->_internal_set_condition_type("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckImmunityRequest::CopyFrom(const CheckImmunityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CheckImmunityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CheckImmunityRequest::InternalSwap(CheckImmunityRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.condition_type_, &other->_impl_.condition_type_, arena);
}

::google::protobuf::Metadata CheckImmunityRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CheckImmunityResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CheckImmunityResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_._has_bits_);
};

void CheckImmunityResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
CheckImmunityResponse::CheckImmunityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CheckImmunityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CheckImmunityResponse)
}
PROTOBUF_NDEBUG_INLINE CheckImmunityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CheckImmunityResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        immunity_sources_{visibility, arena, from.immunity_sources_} {}

CheckImmunityResponse::CheckImmunityResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CheckImmunityResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CheckImmunityResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CheckImmunityResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.is_immune_ = from._impl_.is_immune_;

  // @@protoc_insertion_point(copy_constructor:seshat.CheckImmunityResponse)
}
PROTOBUF_NDEBUG_INLINE CheckImmunityResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        immunity_sources_{visibility, arena} {}

inline void CheckImmunityResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, is_immune_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::is_immune_));
}
CheckImmunityResponse::~CheckImmunityResponse() {
  // @@protoc_insertion_point(destructor:seshat.CheckImmunityResponse)
  SharedDtor(*this);
}
inline void CheckImmunityResponse::SharedDtor(MessageLite& self) {
  CheckImmunityResponse& this_ = static_cast<CheckImmunityResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CheckImmunityResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CheckImmunityResponse(arena);
}
constexpr auto CheckImmunityResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.immunity_sources_) +
          decltype(CheckImmunityResponse::_impl_.immunity_sources_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(CheckImmunityResponse), alignof(CheckImmunityResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&CheckImmunityResponse::PlacementNew_,
                                 sizeof(CheckImmunityResponse),
                                 alignof(CheckImmunityResponse));
  }
}
constexpr auto CheckImmunityResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CheckImmunityResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CheckImmunityResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CheckImmunityResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CheckImmunityResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CheckImmunityResponse>(), &CheckImmunityResponse::ByteSizeLong,
              &CheckImmunityResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_._cached_size_),
          false,
      },
      &CheckImmunityResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CheckImmunityResponse_class_data_ =
        CheckImmunityResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CheckImmunityResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CheckImmunityResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CheckImmunityResponse_class_data_.tc_table);
  return CheckImmunityResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 53, 2>
CheckImmunityResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CheckImmunityResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CheckImmunityResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool is_immune = 1 [json_name = "isImmune"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(CheckImmunityResponse, _impl_.is_immune_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.is_immune_)}},
    // repeated string immunity_sources = 2 [json_name = "immunitySources"];
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.immunity_sources_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_immune = 1 [json_name = "isImmune"];
    {PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.is_immune_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // repeated string immunity_sources = 2 [json_name = "immunitySources"];
    {PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.immunity_sources_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
    "\34\0\20\0\0\0\0\0"
    "seshat.CheckImmunityResponse"
    "immunity_sources"
  }},
};
PROTOBUF_NOINLINE void CheckImmunityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CheckImmunityResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.immunity_sources_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.is_immune_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CheckImmunityResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CheckImmunityResponse& this_ = static_cast<const CheckImmunityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CheckImmunityResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CheckImmunityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CheckImmunityResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_immune = 1 [json_name = "isImmune"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_is_immune() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_is_immune(), target);
    }
  }

  // repeated string immunity_sources = 2 [json_name = "immunitySources"];
  for (int i = 0, n = this_._internal_immunity_sources_size(); i < n; ++i) {
    const auto& s = this_._internal_immunity_sources().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.CheckImmunityResponse.immunity_sources");
    target = stream->WriteString(2, s, target);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CheckImmunityResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CheckImmunityResponse::ByteSizeLong(const MessageLite& base) {
  const CheckImmunityResponse& this_ = static_cast<const CheckImmunityResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CheckImmunityResponse::ByteSizeLong() const {
  const CheckImmunityResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CheckImmunityResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string immunity_sources = 2 [json_name = "immunitySources"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_immunity_sources().size());
      for (int i = 0, n = this_._internal_immunity_sources().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_immunity_sources().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // bool is_immune = 1 [json_name = "isImmune"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_is_immune() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CheckImmunityResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CheckImmunityResponse*>(&to_msg);
  auto& from = static_cast<const CheckImmunityResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CheckImmunityResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_immunity_sources()->MergeFrom(from._internal_immunity_sources());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_is_immune() != 0) {
        _this->_impl_.is_immune_ = from._impl_.is_immune_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CheckImmunityResponse::CopyFrom(const CheckImmunityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CheckImmunityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CheckImmunityResponse::InternalSwap(CheckImmunityResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.immunity_sources_.InternalSwap(&other->_impl_.immunity_sources_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.is_immune_)
      + sizeof(CheckImmunityResponse::_impl_.is_immune_)
      - PROTOBUF_FIELD_OFFSET(CheckImmunityResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata CheckImmunityResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConflictingConditionsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConflictingConditionsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_._has_bits_);
};

GetConflictingConditionsRequest::GetConflictingConditionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConflictingConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConflictingConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetConflictingConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConflictingConditionsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        new_condition_type_(arena, from.new_condition_type_) {}

GetConflictingConditionsRequest::GetConflictingConditionsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConflictingConditionsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConflictingConditionsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConflictingConditionsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.GetConflictingConditionsRequest)
}
PROTOBUF_NDEBUG_INLINE GetConflictingConditionsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_id_(arena),
        new_condition_type_(arena) {}

inline void GetConflictingConditionsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetConflictingConditionsRequest::~GetConflictingConditionsRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetConflictingConditionsRequest)
  SharedDtor(*this);
}
inline void GetConflictingConditionsRequest::SharedDtor(MessageLite& self) {
  GetConflictingConditionsRequest& this_ = static_cast<GetConflictingConditionsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.new_condition_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConflictingConditionsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConflictingConditionsRequest(arena);
}
constexpr auto GetConflictingConditionsRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetConflictingConditionsRequest),
                                            alignof(GetConflictingConditionsRequest));
}
constexpr auto GetConflictingConditionsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConflictingConditionsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConflictingConditionsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConflictingConditionsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConflictingConditionsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConflictingConditionsRequest>(), &GetConflictingConditionsRequest::ByteSizeLong,
              &GetConflictingConditionsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_._cached_size_),
          false,
      },
      &GetConflictingConditionsRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConflictingConditionsRequest_class_data_ =
        GetConflictingConditionsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConflictingConditionsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConflictingConditionsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConflictingConditionsRequest_class_data_.tc_table);
  return GetConflictingConditionsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 74, 2>
GetConflictingConditionsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetConflictingConditionsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConflictingConditionsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string new_condition_type = 2 [json_name = "newConditionType"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_.new_condition_type_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string new_condition_type = 2 [json_name = "newConditionType"];
    {PROTOBUF_FIELD_OFFSET(GetConflictingConditionsRequest, _impl_.new_condition_type_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\11\22\0\0\0\0\0"
    "seshat.GetConflictingConditionsRequest"
    "entity_id"
    "new_condition_type"
  }},
};
PROTOBUF_NOINLINE void GetConflictingConditionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConflictingConditionsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.new_condition_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConflictingConditionsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConflictingConditionsRequest& this_ = static_cast<const GetConflictingConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConflictingConditionsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConflictingConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConflictingConditionsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConflictingConditionsRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string new_condition_type = 2 [json_name = "newConditionType"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_new_condition_type().empty()) {
      const ::std::string& _s = this_._internal_new_condition_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConflictingConditionsRequest.new_condition_type");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConflictingConditionsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConflictingConditionsRequest::ByteSizeLong(const MessageLite& base) {
  const GetConflictingConditionsRequest& this_ = static_cast<const GetConflictingConditionsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConflictingConditionsRequest::ByteSizeLong() const {
  const GetConflictingConditionsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConflictingConditionsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string new_condition_type = 2 [json_name = "newConditionType"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_new_condition_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_new_condition_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConflictingConditionsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConflictingConditionsRequest*>(&to_msg);
  auto& from = static_cast<const GetConflictingConditionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConflictingConditionsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_new_condition_type().empty()) {
        _this->_internal_set_new_condition_type(from._internal_new_condition_type());
      } else {
        if (_this->_impl_.new_condition_type_.IsDefault()) {
          _this->_internal_set_new_condition_type("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConflictingConditionsRequest::CopyFrom(const GetConflictingConditionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConflictingConditionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConflictingConditionsRequest::InternalSwap(GetConflictingConditionsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_condition_type_, &other->_impl_.new_condition_type_, arena);
}

::google::protobuf::Metadata GetConflictingConditionsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConflictingConditionsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConflictingConditionsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_._has_bits_);
};

void GetConflictingConditionsResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetConflictingConditionsResponse::GetConflictingConditionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConflictingConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConflictingConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetConflictingConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConflictingConditionsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conflicting_conditions_{visibility, arena, from.conflicting_conditions_},
        suggested_resolutions_{visibility, arena, from.suggested_resolutions_} {}

GetConflictingConditionsResponse::GetConflictingConditionsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConflictingConditionsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConflictingConditionsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConflictingConditionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConflictingConditionsResponse)
}
PROTOBUF_NDEBUG_INLINE GetConflictingConditionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conflicting_conditions_{visibility, arena},
        suggested_resolutions_{visibility, arena} {}

inline void GetConflictingConditionsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
GetConflictingConditionsResponse::~GetConflictingConditionsResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetConflictingConditionsResponse)
  SharedDtor(*this);
}
inline void GetConflictingConditionsResponse::SharedDtor(MessageLite& self) {
  GetConflictingConditionsResponse& this_ = static_cast<GetConflictingConditionsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConflictingConditionsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConflictingConditionsResponse(arena);
}
constexpr auto GetConflictingConditionsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.conflicting_conditions_) +
          decltype(GetConflictingConditionsResponse::_impl_.conflicting_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.suggested_resolutions_) +
          decltype(GetConflictingConditionsResponse::_impl_.suggested_resolutions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetConflictingConditionsResponse), alignof(GetConflictingConditionsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConflictingConditionsResponse::PlacementNew_,
                                 sizeof(GetConflictingConditionsResponse),
                                 alignof(GetConflictingConditionsResponse));
  }
}
constexpr auto GetConflictingConditionsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConflictingConditionsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConflictingConditionsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConflictingConditionsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConflictingConditionsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConflictingConditionsResponse>(), &GetConflictingConditionsResponse::ByteSizeLong,
              &GetConflictingConditionsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_._cached_size_),
          false,
      },
      &GetConflictingConditionsResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConflictingConditionsResponse_class_data_ =
        GetConflictingConditionsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConflictingConditionsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConflictingConditionsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConflictingConditionsResponse_class_data_.tc_table);
  return GetConflictingConditionsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
GetConflictingConditionsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetConflictingConditionsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConflictingConditionsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.conflicting_conditions_)}},
    // repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.suggested_resolutions_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
    {PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.conflicting_conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
    {PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.suggested_resolutions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetConflictingConditionsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::ConflictResolution>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetConflictingConditionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConflictingConditionsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.conflicting_conditions_.Clear();
  _impl_.suggested_resolutions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConflictingConditionsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConflictingConditionsResponse& this_ = static_cast<const GetConflictingConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConflictingConditionsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConflictingConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConflictingConditionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_conflicting_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_conflicting_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_suggested_resolutions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_suggested_resolutions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConflictingConditionsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConflictingConditionsResponse::ByteSizeLong(const MessageLite& base) {
  const GetConflictingConditionsResponse& this_ = static_cast<const GetConflictingConditionsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConflictingConditionsResponse::ByteSizeLong() const {
  const GetConflictingConditionsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConflictingConditionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition conflicting_conditions = 1 [json_name = "conflictingConditions"];
    {
      total_size += 1UL * this_._internal_conflicting_conditions_size();
      for (const auto& msg : this_._internal_conflicting_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .seshat.ConflictResolution suggested_resolutions = 2 [json_name = "suggestedResolutions"];
    {
      total_size += 1UL * this_._internal_suggested_resolutions_size();
      for (const auto& msg : this_._internal_suggested_resolutions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .seshat.Result status = 3 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConflictingConditionsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConflictingConditionsResponse*>(&to_msg);
  auto& from = static_cast<const GetConflictingConditionsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConflictingConditionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_conflicting_conditions()->MergeFrom(
      from._internal_conflicting_conditions());
  _this->_internal_mutable_suggested_resolutions()->MergeFrom(
      from._internal_suggested_resolutions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConflictingConditionsResponse::CopyFrom(const GetConflictingConditionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConflictingConditionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConflictingConditionsResponse::InternalSwap(GetConflictingConditionsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.conflicting_conditions_.InternalSwap(&other->_impl_.conflicting_conditions_);
  _impl_.suggested_resolutions_.InternalSwap(&other->_impl_.suggested_resolutions_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata GetConflictingConditionsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConflictResolution::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConflictResolution>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_._has_bits_);
};

ConflictResolution::ConflictResolution(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConflictResolution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConflictResolution)
}
PROTOBUF_NDEBUG_INLINE ConflictResolution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConflictResolution& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        affected_condition_ids_{visibility, arena, from.affected_condition_ids_},
        conflict_type_(arena, from.conflict_type_),
        action_(arena, from.action_),
        reason_(arena, from.reason_) {}

ConflictResolution::ConflictResolution(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConflictResolution& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConflictResolution_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConflictResolution* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.ConflictResolution)
}
PROTOBUF_NDEBUG_INLINE ConflictResolution::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        affected_condition_ids_{visibility, arena},
        conflict_type_(arena),
        action_(arena),
        reason_(arena) {}

inline void ConflictResolution::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ConflictResolution::~ConflictResolution() {
  // @@protoc_insertion_point(destructor:seshat.ConflictResolution)
  SharedDtor(*this);
}
inline void ConflictResolution::SharedDtor(MessageLite& self) {
  ConflictResolution& this_ = static_cast<ConflictResolution&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.conflict_type_.Destroy();
  this_._impl_.action_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConflictResolution::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConflictResolution(arena);
}
constexpr auto ConflictResolution::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.affected_condition_ids_) +
          decltype(ConflictResolution::_impl_.affected_condition_ids_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConflictResolution), alignof(ConflictResolution), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConflictResolution::PlacementNew_,
                                 sizeof(ConflictResolution),
                                 alignof(ConflictResolution));
  }
}
constexpr auto ConflictResolution::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConflictResolution_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConflictResolution::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConflictResolution>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConflictResolution::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConflictResolution>(), &ConflictResolution::ByteSizeLong,
              &ConflictResolution::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_._cached_size_),
          false,
      },
      &ConflictResolution::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConflictResolution_class_data_ =
        ConflictResolution::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConflictResolution::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConflictResolution_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConflictResolution_class_data_.tc_table);
  return ConflictResolution_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 81, 2>
ConflictResolution::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConflictResolution_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConflictResolution>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string reason = 4 [json_name = "reason"];
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.reason_)}},
    // string conflict_type = 1 [json_name = "conflictType"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.conflict_type_)}},
    // string action = 2 [json_name = "action"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.action_)}},
    // repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.affected_condition_ids_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string conflict_type = 1 [json_name = "conflictType"];
    {PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.conflict_type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string action = 2 [json_name = "action"];
    {PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.action_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
    {PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.affected_condition_ids_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string reason = 4 [json_name = "reason"];
    {PROTOBUF_FIELD_OFFSET(ConflictResolution, _impl_.reason_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\15\6\26\6\0\0\0"
    "seshat.ConflictResolution"
    "conflict_type"
    "action"
    "affected_condition_ids"
    "reason"
  }},
};
PROTOBUF_NOINLINE void ConflictResolution::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConflictResolution)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.affected_condition_ids_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.conflict_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.action_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.reason_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConflictResolution::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConflictResolution& this_ = static_cast<const ConflictResolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConflictResolution::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConflictResolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConflictResolution)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string conflict_type = 1 [json_name = "conflictType"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_conflict_type().empty()) {
      const ::std::string& _s = this_._internal_conflict_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConflictResolution.conflict_type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string action = 2 [json_name = "action"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_action().empty()) {
      const ::std::string& _s = this_._internal_action();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConflictResolution.action");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
  for (int i = 0, n = this_._internal_affected_condition_ids_size(); i < n; ++i) {
    const auto& s = this_._internal_affected_condition_ids().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConflictResolution.affected_condition_ids");
    target = stream->WriteString(3, s, target);
  }

  // string reason = 4 [json_name = "reason"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_reason().empty()) {
      const ::std::string& _s = this_._internal_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConflictResolution.reason");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConflictResolution)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConflictResolution::ByteSizeLong(const MessageLite& base) {
  const ConflictResolution& this_ = static_cast<const ConflictResolution&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConflictResolution::ByteSizeLong() const {
  const ConflictResolution& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConflictResolution)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string affected_condition_ids = 3 [json_name = "affectedConditionIds"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_affected_condition_ids().size());
      for (int i = 0, n = this_._internal_affected_condition_ids().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_affected_condition_ids().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string conflict_type = 1 [json_name = "conflictType"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_conflict_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_conflict_type());
      }
    }
    // string action = 2 [json_name = "action"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_action().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_action());
      }
    }
    // string reason = 4 [json_name = "reason"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_reason());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConflictResolution::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConflictResolution*>(&to_msg);
  auto& from = static_cast<const ConflictResolution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConflictResolution)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_affected_condition_ids()->MergeFrom(from._internal_affected_condition_ids());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_conflict_type().empty()) {
        _this->_internal_set_conflict_type(from._internal_conflict_type());
      } else {
        if (_this->_impl_.conflict_type_.IsDefault()) {
          _this->_internal_set_conflict_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_action().empty()) {
        _this->_internal_set_action(from._internal_action());
      } else {
        if (_this->_impl_.action_.IsDefault()) {
          _this->_internal_set_action("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_reason().empty()) {
        _this->_internal_set_reason(from._internal_reason());
      } else {
        if (_this->_impl_.reason_.IsDefault()) {
          _this->_internal_set_reason("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConflictResolution::CopyFrom(const ConflictResolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConflictResolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConflictResolution::InternalSwap(ConflictResolution* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.affected_condition_ids_.InternalSwap(&other->_impl_.affected_condition_ids_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conflict_type_, &other->_impl_.conflict_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
}

::google::protobuf::Metadata ConflictResolution::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResolveConflictsRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResolveConflictsRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_._has_bits_);
};

ResolveConflictsRequest::ResolveConflictsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResolveConflictsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ResolveConflictsRequest)
}
PROTOBUF_NDEBUG_INLINE ResolveConflictsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ResolveConflictsRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        resolutions_{visibility, arena, from.resolutions_},
        entity_id_(arena, from.entity_id_) {}

ResolveConflictsRequest::ResolveConflictsRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResolveConflictsRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResolveConflictsRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResolveConflictsRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.ResolveConflictsRequest)
}
PROTOBUF_NDEBUG_INLINE ResolveConflictsRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        resolutions_{visibility, arena},
        entity_id_(arena) {}

inline void ResolveConflictsRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ResolveConflictsRequest::~ResolveConflictsRequest() {
  // @@protoc_insertion_point(destructor:seshat.ResolveConflictsRequest)
  SharedDtor(*this);
}
inline void ResolveConflictsRequest::SharedDtor(MessageLite& self) {
  ResolveConflictsRequest& this_ = static_cast<ResolveConflictsRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResolveConflictsRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResolveConflictsRequest(arena);
}
constexpr auto ResolveConflictsRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_.resolutions_) +
          decltype(ResolveConflictsRequest::_impl_.resolutions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ResolveConflictsRequest), alignof(ResolveConflictsRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResolveConflictsRequest::PlacementNew_,
                                 sizeof(ResolveConflictsRequest),
                                 alignof(ResolveConflictsRequest));
  }
}
constexpr auto ResolveConflictsRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResolveConflictsRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResolveConflictsRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResolveConflictsRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResolveConflictsRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResolveConflictsRequest>(), &ResolveConflictsRequest::ByteSizeLong,
              &ResolveConflictsRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_._cached_size_),
          false,
      },
      &ResolveConflictsRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResolveConflictsRequest_class_data_ =
        ResolveConflictsRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResolveConflictsRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResolveConflictsRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResolveConflictsRequest_class_data_.tc_table);
  return ResolveConflictsRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 48, 2>
ResolveConflictsRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ResolveConflictsRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ResolveConflictsRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_.resolutions_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_.entity_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
    {PROTOBUF_FIELD_OFFSET(ResolveConflictsRequest, _impl_.resolutions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConflictResolution>()},
  }},
  {{
    "\36\11\0\0\0\0\0\0"
    "seshat.ResolveConflictsRequest"
    "entity_id"
  }},
};
PROTOBUF_NOINLINE void ResolveConflictsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ResolveConflictsRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resolutions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResolveConflictsRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResolveConflictsRequest& this_ = static_cast<const ResolveConflictsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResolveConflictsRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResolveConflictsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ResolveConflictsRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ResolveConflictsRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_resolutions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_resolutions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ResolveConflictsRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResolveConflictsRequest::ByteSizeLong(const MessageLite& base) {
  const ResolveConflictsRequest& this_ = static_cast<const ResolveConflictsRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResolveConflictsRequest::ByteSizeLong() const {
  const ResolveConflictsRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ResolveConflictsRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConflictResolution resolutions = 2 [json_name = "resolutions"];
    {
      total_size += 1UL * this_._internal_resolutions_size();
      for (const auto& msg : this_._internal_resolutions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // string entity_id = 1 [json_name = "entityId"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResolveConflictsRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResolveConflictsRequest*>(&to_msg);
  auto& from = static_cast<const ResolveConflictsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ResolveConflictsRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_resolutions()->MergeFrom(
      from._internal_resolutions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!from._internal_entity_id().empty()) {
      _this->_internal_set_entity_id(from._internal_entity_id());
    } else {
      if (_this->_impl_.entity_id_.IsDefault()) {
        _this->_internal_set_entity_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveConflictsRequest::CopyFrom(const ResolveConflictsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ResolveConflictsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResolveConflictsRequest::InternalSwap(ResolveConflictsRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.resolutions_.InternalSwap(&other->_impl_.resolutions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
}

::google::protobuf::Metadata ResolveConflictsRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ResolveConflictsResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ResolveConflictsResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_._has_bits_);
};

void ResolveConflictsResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ResolveConflictsResponse::ResolveConflictsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResolveConflictsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ResolveConflictsResponse)
}
PROTOBUF_NDEBUG_INLINE ResolveConflictsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ResolveConflictsResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        removed_conditions_{visibility, arena, from.removed_conditions_},
        modified_conditions_{visibility, arena, from.modified_conditions_} {}

ResolveConflictsResponse::ResolveConflictsResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ResolveConflictsResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ResolveConflictsResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ResolveConflictsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.ResolveConflictsResponse)
}
PROTOBUF_NDEBUG_INLINE ResolveConflictsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        removed_conditions_{visibility, arena},
        modified_conditions_{visibility, arena} {}

inline void ResolveConflictsResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ResolveConflictsResponse::~ResolveConflictsResponse() {
  // @@protoc_insertion_point(destructor:seshat.ResolveConflictsResponse)
  SharedDtor(*this);
}
inline void ResolveConflictsResponse::SharedDtor(MessageLite& self) {
  ResolveConflictsResponse& this_ = static_cast<ResolveConflictsResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ResolveConflictsResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ResolveConflictsResponse(arena);
}
constexpr auto ResolveConflictsResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.removed_conditions_) +
          decltype(ResolveConflictsResponse::_impl_.removed_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.modified_conditions_) +
          decltype(ResolveConflictsResponse::_impl_.modified_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ResolveConflictsResponse), alignof(ResolveConflictsResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ResolveConflictsResponse::PlacementNew_,
                                 sizeof(ResolveConflictsResponse),
                                 alignof(ResolveConflictsResponse));
  }
}
constexpr auto ResolveConflictsResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ResolveConflictsResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ResolveConflictsResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ResolveConflictsResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ResolveConflictsResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ResolveConflictsResponse>(), &ResolveConflictsResponse::ByteSizeLong,
              &ResolveConflictsResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_._cached_size_),
          false,
      },
      &ResolveConflictsResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ResolveConflictsResponse_class_data_ =
        ResolveConflictsResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ResolveConflictsResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ResolveConflictsResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ResolveConflictsResponse_class_data_.tc_table);
  return ResolveConflictsResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
ResolveConflictsResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ResolveConflictsResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ResolveConflictsResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.removed_conditions_)}},
    // repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.modified_conditions_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 2, PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
    {PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.removed_conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
    {PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.modified_conditions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ResolveConflictsResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ResolveConflictsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ResolveConflictsResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.removed_conditions_.Clear();
  _impl_.modified_conditions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ResolveConflictsResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ResolveConflictsResponse& this_ = static_cast<const ResolveConflictsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ResolveConflictsResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ResolveConflictsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ResolveConflictsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_removed_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_removed_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_modified_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_modified_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ResolveConflictsResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ResolveConflictsResponse::ByteSizeLong(const MessageLite& base) {
  const ResolveConflictsResponse& this_ = static_cast<const ResolveConflictsResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ResolveConflictsResponse::ByteSizeLong() const {
  const ResolveConflictsResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ResolveConflictsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition removed_conditions = 1 [json_name = "removedConditions"];
    {
      total_size += 1UL * this_._internal_removed_conditions_size();
      for (const auto& msg : this_._internal_removed_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .seshat.Condition modified_conditions = 2 [json_name = "modifiedConditions"];
    {
      total_size += 1UL * this_._internal_modified_conditions_size();
      for (const auto& msg : this_._internal_modified_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .seshat.Result status = 3 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ResolveConflictsResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ResolveConflictsResponse*>(&to_msg);
  auto& from = static_cast<const ResolveConflictsResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ResolveConflictsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_removed_conditions()->MergeFrom(
      from._internal_removed_conditions());
  _this->_internal_mutable_modified_conditions()->MergeFrom(
      from._internal_modified_conditions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ResolveConflictsResponse::CopyFrom(const ResolveConflictsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ResolveConflictsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ResolveConflictsResponse::InternalSwap(ResolveConflictsResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.removed_conditions_.InternalSwap(&other->_impl_.removed_conditions_);
  _impl_.modified_conditions_.InternalSwap(&other->_impl_.modified_conditions_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ResolveConflictsResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionTemplatesRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionTemplatesRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_._has_bits_);
};

GetConditionTemplatesRequest::GetConditionTemplatesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionTemplatesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionTemplatesRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionTemplatesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionTemplatesRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        category_(arena, from.category_),
        system_(arena, from.system_) {}

GetConditionTemplatesRequest::GetConditionTemplatesRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionTemplatesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionTemplatesRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionTemplatesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionTemplatesRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionTemplatesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        category_(arena),
        system_(arena) {}

inline void GetConditionTemplatesRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GetConditionTemplatesRequest::~GetConditionTemplatesRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionTemplatesRequest)
  SharedDtor(*this);
}
inline void GetConditionTemplatesRequest::SharedDtor(MessageLite& self) {
  GetConditionTemplatesRequest& this_ = static_cast<GetConditionTemplatesRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.category_.Destroy();
  this_._impl_.system_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionTemplatesRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionTemplatesRequest(arena);
}
constexpr auto GetConditionTemplatesRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(GetConditionTemplatesRequest),
                                            alignof(GetConditionTemplatesRequest));
}
constexpr auto GetConditionTemplatesRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionTemplatesRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionTemplatesRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionTemplatesRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionTemplatesRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionTemplatesRequest>(), &GetConditionTemplatesRequest::ByteSizeLong,
              &GetConditionTemplatesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_._cached_size_),
          false,
      },
      &GetConditionTemplatesRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionTemplatesRequest_class_data_ =
        GetConditionTemplatesRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionTemplatesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionTemplatesRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionTemplatesRequest_class_data_.tc_table);
  return GetConditionTemplatesRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
GetConditionTemplatesRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetConditionTemplatesRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionTemplatesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string system = 2 [json_name = "system"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_.system_)}},
    // string category = 1 [json_name = "category"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_.category_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string category = 1 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_.category_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string system = 2 [json_name = "system"];
    {PROTOBUF_FIELD_OFFSET(GetConditionTemplatesRequest, _impl_.system_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\10\6\0\0\0\0\0"
    "seshat.GetConditionTemplatesRequest"
    "category"
    "system"
  }},
};
PROTOBUF_NOINLINE void GetConditionTemplatesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionTemplatesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.category_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.system_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionTemplatesRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionTemplatesRequest& this_ = static_cast<const GetConditionTemplatesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionTemplatesRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionTemplatesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionTemplatesRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string category = 1 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_category().empty()) {
      const ::std::string& _s = this_._internal_category();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionTemplatesRequest.category");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string system = 2 [json_name = "system"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_system().empty()) {
      const ::std::string& _s = this_._internal_system();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionTemplatesRequest.system");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionTemplatesRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionTemplatesRequest::ByteSizeLong(const MessageLite& base) {
  const GetConditionTemplatesRequest& this_ = static_cast<const GetConditionTemplatesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionTemplatesRequest::ByteSizeLong() const {
  const GetConditionTemplatesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionTemplatesRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // string category = 1 [json_name = "category"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_category().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_category());
      }
    }
    // string system = 2 [json_name = "system"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_system().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_system());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionTemplatesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionTemplatesRequest*>(&to_msg);
  auto& from = static_cast<const GetConditionTemplatesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionTemplatesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_category().empty()) {
        _this->_internal_set_category(from._internal_category());
      } else {
        if (_this->_impl_.category_.IsDefault()) {
          _this->_internal_set_category("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_system().empty()) {
        _this->_internal_set_system(from._internal_system());
      } else {
        if (_this->_impl_.system_.IsDefault()) {
          _this->_internal_set_system("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionTemplatesRequest::CopyFrom(const GetConditionTemplatesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionTemplatesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionTemplatesRequest::InternalSwap(GetConditionTemplatesRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.system_, &other->_impl_.system_, arena);
}

::google::protobuf::Metadata GetConditionTemplatesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionTemplatesResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionTemplatesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_._has_bits_);
};

void GetConditionTemplatesResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetConditionTemplatesResponse::GetConditionTemplatesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionTemplatesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionTemplatesResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionTemplatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionTemplatesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        templates_{visibility, arena, from.templates_} {}

GetConditionTemplatesResponse::GetConditionTemplatesResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionTemplatesResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionTemplatesResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionTemplatesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionTemplatesResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionTemplatesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        templates_{visibility, arena} {}

inline void GetConditionTemplatesResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
GetConditionTemplatesResponse::~GetConditionTemplatesResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionTemplatesResponse)
  SharedDtor(*this);
}
inline void GetConditionTemplatesResponse::SharedDtor(MessageLite& self) {
  GetConditionTemplatesResponse& this_ = static_cast<GetConditionTemplatesResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionTemplatesResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionTemplatesResponse(arena);
}
constexpr auto GetConditionTemplatesResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_.templates_) +
          decltype(GetConditionTemplatesResponse::_impl_.templates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetConditionTemplatesResponse), alignof(GetConditionTemplatesResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionTemplatesResponse::PlacementNew_,
                                 sizeof(GetConditionTemplatesResponse),
                                 alignof(GetConditionTemplatesResponse));
  }
}
constexpr auto GetConditionTemplatesResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionTemplatesResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionTemplatesResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionTemplatesResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionTemplatesResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionTemplatesResponse>(), &GetConditionTemplatesResponse::ByteSizeLong,
              &GetConditionTemplatesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_._cached_size_),
          false,
      },
      &GetConditionTemplatesResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionTemplatesResponse_class_data_ =
        GetConditionTemplatesResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionTemplatesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionTemplatesResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionTemplatesResponse_class_data_.tc_table);
  return GetConditionTemplatesResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
GetConditionTemplatesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetConditionTemplatesResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionTemplatesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_.status_)}},
    // repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_.templates_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
    {PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_.templates_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetConditionTemplatesResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionTemplate>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetConditionTemplatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionTemplatesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.templates_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionTemplatesResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionTemplatesResponse& this_ = static_cast<const GetConditionTemplatesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionTemplatesResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionTemplatesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionTemplatesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_templates_size());
       i < n; i++) {
    const auto& repfield = this_._internal_templates().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionTemplatesResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionTemplatesResponse::ByteSizeLong(const MessageLite& base) {
  const GetConditionTemplatesResponse& this_ = static_cast<const GetConditionTemplatesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionTemplatesResponse::ByteSizeLong() const {
  const GetConditionTemplatesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionTemplatesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConditionTemplate templates = 1 [json_name = "templates"];
    {
      total_size += 1UL * this_._internal_templates_size();
      for (const auto& msg : this_._internal_templates()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .seshat.Result status = 2 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionTemplatesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionTemplatesResponse*>(&to_msg);
  auto& from = static_cast<const GetConditionTemplatesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionTemplatesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_templates()->MergeFrom(
      from._internal_templates());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionTemplatesResponse::CopyFrom(const GetConditionTemplatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionTemplatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionTemplatesResponse::InternalSwap(GetConditionTemplatesResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.templates_.InternalSwap(&other->_impl_.templates_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata GetConditionTemplatesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ConditionTemplate_PropertiesEntry_DoNotUse::ConditionTemplate_PropertiesEntry_DoNotUse()
    : SuperType(ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.base()) {}
ConditionTemplate_PropertiesEntry_DoNotUse::ConditionTemplate_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ConditionTemplate_PropertiesEntry_DoNotUse::ConditionTemplate_PropertiesEntry_DoNotUse() : SuperType() {}
ConditionTemplate_PropertiesEntry_DoNotUse::ConditionTemplate_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ConditionTemplate_PropertiesEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionTemplate_PropertiesEntry_DoNotUse(arena);
}
constexpr auto ConditionTemplate_PropertiesEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConditionTemplate_PropertiesEntry_DoNotUse),
                                            alignof(ConditionTemplate_PropertiesEntry_DoNotUse));
}
constexpr auto ConditionTemplate_PropertiesEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionTemplate_PropertiesEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionTemplate_PropertiesEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionTemplate_PropertiesEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionTemplate_PropertiesEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ConditionTemplate_PropertiesEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ConditionTemplate_PropertiesEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionTemplate_PropertiesEntry_DoNotUse_class_data_ =
        ConditionTemplate_PropertiesEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionTemplate_PropertiesEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionTemplate_PropertiesEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.tc_table);
  return ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 57, 2>
ConditionTemplate_PropertiesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConditionTemplate_PropertiesEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionTemplate_PropertiesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate_PropertiesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\50\3\5\0\0\0\0\0"
    "seshat.ConditionTemplate.PropertiesEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class ConditionTemplate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConditionTemplate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_._has_bits_);
};

ConditionTemplate::ConditionTemplate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConditionTemplate)
}
PROTOBUF_NDEBUG_INLINE ConditionTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConditionTemplate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        default_effects_{visibility, arena, from.default_effects_},
        conflicts_with_{visibility, arena, from.conflicts_with_},
        immunities_{visibility, arena, from.immunities_},
        properties_{visibility, arena, from.properties_},
        type_(arena, from.type_),
        name_(arena, from.name_),
        description_(arena, from.description_),
        category_(arena, from.category_) {}

ConditionTemplate::ConditionTemplate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConditionTemplate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionTemplate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionTemplate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.default_duration_ = ((cached_has_bits & 0x00000010u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.default_duration_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_severity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, default_severity_),
           offsetof(Impl_, stacking_behavior_) -
               offsetof(Impl_, default_severity_) +
               sizeof(Impl_::stacking_behavior_));

  // @@protoc_insertion_point(copy_constructor:seshat.ConditionTemplate)
}
PROTOBUF_NDEBUG_INLINE ConditionTemplate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        default_effects_{visibility, arena},
        conflicts_with_{visibility, arena},
        immunities_{visibility, arena},
        properties_{visibility, arena},
        type_(arena),
        name_(arena),
        description_(arena),
        category_(arena) {}

inline void ConditionTemplate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, default_duration_),
           0,
           offsetof(Impl_, stacking_behavior_) -
               offsetof(Impl_, default_duration_) +
               sizeof(Impl_::stacking_behavior_));
}
ConditionTemplate::~ConditionTemplate() {
  // @@protoc_insertion_point(destructor:seshat.ConditionTemplate)
  SharedDtor(*this);
}
inline void ConditionTemplate::SharedDtor(MessageLite& self) {
  ConditionTemplate& this_ = static_cast<ConditionTemplate&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.type_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.description_.Destroy();
  this_._impl_.category_.Destroy();
  delete this_._impl_.default_duration_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConditionTemplate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionTemplate(arena);
}
constexpr auto ConditionTemplate::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_effects_) +
          decltype(ConditionTemplate::_impl_.default_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.conflicts_with_) +
          decltype(ConditionTemplate::_impl_.conflicts_with_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.immunities_) +
          decltype(ConditionTemplate::_impl_.immunities_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.properties_) +
          decltype(ConditionTemplate::_impl_.properties_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.properties_) +
          decltype(ConditionTemplate::_impl_.properties_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConditionTemplate), alignof(ConditionTemplate), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionTemplate::PlacementNew_,
                                 sizeof(ConditionTemplate),
                                 alignof(ConditionTemplate));
  }
}
constexpr auto ConditionTemplate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionTemplate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionTemplate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionTemplate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionTemplate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConditionTemplate>(), &ConditionTemplate::ByteSizeLong,
              &ConditionTemplate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_._cached_size_),
          false,
      },
      &ConditionTemplate::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionTemplate_class_data_ =
        ConditionTemplate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionTemplate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionTemplate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionTemplate_class_data_.tc_table);
  return ConditionTemplate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 3, 102, 2>
ConditionTemplate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConditionTemplate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionTemplate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string type = 1 [json_name = "type"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.type_)}},
    // string name = 2 [json_name = "name"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.name_)}},
    // string description = 3 [json_name = "description"];
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.description_)}},
    // string category = 4 [json_name = "category"];
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.category_)}},
    // .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTemplate, _impl_.default_severity_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_severity_)}},
    // .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
    {::_pbi::TcParser::FastMtS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_duration_)}},
    // repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 1, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_effects_)}},
    // .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConditionTemplate, _impl_.stacking_behavior_), 6>(),
     {64, 6, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.stacking_behavior_)}},
    // repeated string conflicts_with = 9 [json_name = "conflictsWith"];
    {::_pbi::TcParser::FastUR1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.conflicts_with_)}},
    // repeated string immunities = 10 [json_name = "immunities"];
    {::_pbi::TcParser::FastUR1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.immunities_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1 [json_name = "type"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.type_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2 [json_name = "name"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.name_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string description = 3 [json_name = "description"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.description_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 4 [json_name = "category"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.category_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_severity_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_duration_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_effects_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.stacking_behavior_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // repeated string conflicts_with = 9 [json_name = "conflictsWith"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.conflicts_with_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // repeated string immunities = 10 [json_name = "immunities"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.immunities_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // map<string, string> properties = 11 [json_name = "properties"];
    {PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.properties_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionDuration>()},
      {::_pbi::TcParser::GetTable<::seshat::ConditionEffect>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\30\4\4\13\10\0\0\0\0\16\12\12\0\0\0\0"
    "seshat.ConditionTemplate"
    "type"
    "name"
    "description"
    "category"
    "conflicts_with"
    "immunities"
    "properties"
  }},
};
PROTOBUF_NOINLINE void ConditionTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConditionTemplate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.default_effects_.Clear();
  _impl_.conflicts_with_.Clear();
  _impl_.immunities_.Clear();
  _impl_.properties_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.description_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      _impl_.category_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(_impl_.default_duration_ != nullptr);
      _impl_.default_duration_->Clear();
    }
  }
  if ((cached_has_bits & 0x00000060u) != 0) {
    ::memset(&_impl_.default_severity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stacking_behavior_) -
        reinterpret_cast<char*>(&_impl_.default_severity_)) + sizeof(_impl_.stacking_behavior_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConditionTemplate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConditionTemplate& this_ = static_cast<const ConditionTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConditionTemplate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConditionTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConditionTemplate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type = 1 [json_name = "type"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_type().empty()) {
      const ::std::string& _s = this_._internal_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.type");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string name = 2 [json_name = "name"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_name().empty()) {
      const ::std::string& _s = this_._internal_name();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.name");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string description = 3 [json_name = "description"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (!this_._internal_description().empty()) {
      const ::std::string& _s = this_._internal_description();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.description");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string category = 4 [json_name = "category"];
  if ((this_._impl_._has_bits_[0] & 0x00000008u) != 0) {
    if (!this_._internal_category().empty()) {
      const ::std::string& _s = this_._internal_category();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.category");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
  if ((this_._impl_._has_bits_[0] & 0x00000020u) != 0) {
    if (this_._internal_default_severity() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          5, this_._internal_default_severity(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        6, *this_._impl_.default_duration_, this_._impl_.default_duration_->GetCachedSize(), target,
        stream);
  }

  // repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_default_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_default_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            7, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
  if ((cached_has_bits & 0x00000040u) != 0) {
    if (this_._internal_stacking_behavior() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          8, this_._internal_stacking_behavior(), target);
    }
  }

  // repeated string conflicts_with = 9 [json_name = "conflictsWith"];
  for (int i = 0, n = this_._internal_conflicts_with_size(); i < n; ++i) {
    const auto& s = this_._internal_conflicts_with().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.conflicts_with");
    target = stream->WriteString(9, s, target);
  }

  // repeated string immunities = 10 [json_name = "immunities"];
  for (int i = 0, n = this_._internal_immunities_size(); i < n; ++i) {
    const auto& s = this_._internal_immunities().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.immunities");
    target = stream->WriteString(10, s, target);
  }

  // map<string, string> properties = 11 [json_name = "properties"];
  if (!this_._internal_properties().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_properties();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.properties");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            11, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.properties");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionTemplate.properties");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConditionTemplate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConditionTemplate::ByteSizeLong(const MessageLite& base) {
  const ConditionTemplate& this_ = static_cast<const ConditionTemplate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConditionTemplate::ByteSizeLong() const {
  const ConditionTemplate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConditionTemplate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConditionEffect default_effects = 7 [json_name = "defaultEffects"];
    {
      total_size += 1UL * this_._internal_default_effects_size();
      for (const auto& msg : this_._internal_default_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated string conflicts_with = 9 [json_name = "conflictsWith"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_conflicts_with().size());
      for (int i = 0, n = this_._internal_conflicts_with().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_conflicts_with().Get(i));
      }
    }
    // repeated string immunities = 10 [json_name = "immunities"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_immunities().size());
      for (int i = 0, n = this_._internal_immunities().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_immunities().Get(i));
      }
    }
    // map<string, string> properties = 11 [json_name = "properties"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_properties_size());
      for (const auto& entry : this_._internal_properties()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    // string type = 1 [json_name = "type"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_type());
      }
    }
    // string name = 2 [json_name = "name"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_name().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_name());
      }
    }
    // string description = 3 [json_name = "description"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_description().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_description());
      }
    }
    // string category = 4 [json_name = "category"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!this_._internal_category().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_category());
      }
    }
    // .seshat.ConditionDuration default_duration = 6 [json_name = "defaultDuration"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.default_duration_);
    }
    // .seshat.ConditionSeverity default_severity = 5 [json_name = "defaultSeverity"];
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (this_._internal_default_severity() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_default_severity());
      }
    }
    // .seshat.StackingBehavior stacking_behavior = 8 [json_name = "stackingBehavior"];
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (this_._internal_stacking_behavior() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_stacking_behavior());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConditionTemplate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionTemplate*>(&to_msg);
  auto& from = static_cast<const ConditionTemplate&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConditionTemplate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_default_effects()->MergeFrom(
      from._internal_default_effects());
  _this->_internal_mutable_conflicts_with()->MergeFrom(from._internal_conflicts_with());
  _this->_internal_mutable_immunities()->MergeFrom(from._internal_immunities());
  _this->_impl_.properties_.MergeFrom(from._impl_.properties_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_type().empty()) {
        _this->_internal_set_type(from._internal_type());
      } else {
        if (_this->_impl_.type_.IsDefault()) {
          _this->_internal_set_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_name().empty()) {
        _this->_internal_set_name(from._internal_name());
      } else {
        if (_this->_impl_.name_.IsDefault()) {
          _this->_internal_set_name("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_description().empty()) {
        _this->_internal_set_description(from._internal_description());
      } else {
        if (_this->_impl_.description_.IsDefault()) {
          _this->_internal_set_description("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      if (!from._internal_category().empty()) {
        _this->_internal_set_category(from._internal_category());
      } else {
        if (_this->_impl_.category_.IsDefault()) {
          _this->_internal_set_category("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      ABSL_DCHECK(from._impl_.default_duration_ != nullptr);
      if (_this->_impl_.default_duration_ == nullptr) {
        _this->_impl_.default_duration_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.default_duration_);
      } else {
        _this->_impl_.default_duration_->MergeFrom(*from._impl_.default_duration_);
      }
    }
    if ((cached_has_bits & 0x00000020u) != 0) {
      if (from._internal_default_severity() != 0) {
        _this->_impl_.default_severity_ = from._impl_.default_severity_;
      }
    }
    if ((cached_has_bits & 0x00000040u) != 0) {
      if (from._internal_stacking_behavior() != 0) {
        _this->_impl_.stacking_behavior_ = from._impl_.stacking_behavior_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionTemplate::CopyFrom(const ConditionTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConditionTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionTemplate::InternalSwap(ConditionTemplate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.default_effects_.InternalSwap(&other->_impl_.default_effects_);
  _impl_.conflicts_with_.InternalSwap(&other->_impl_.conflicts_with_);
  _impl_.immunities_.InternalSwap(&other->_impl_.immunities_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.stacking_behavior_)
      + sizeof(ConditionTemplate::_impl_.stacking_behavior_)
      - PROTOBUF_FIELD_OFFSET(ConditionTemplate, _impl_.default_duration_)>(
          reinterpret_cast<char*>(&_impl_.default_duration_),
          reinterpret_cast<char*>(&other->_impl_.default_duration_));
}

::google::protobuf::Metadata ConditionTemplate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateConditionTemplateRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateConditionTemplateRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateConditionTemplateRequest, _impl_._has_bits_);
};

CreateConditionTemplateRequest::CreateConditionTemplateRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateConditionTemplateRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CreateConditionTemplateRequest)
}
PROTOBUF_NDEBUG_INLINE CreateConditionTemplateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CreateConditionTemplateRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateConditionTemplateRequest::CreateConditionTemplateRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateConditionTemplateRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateConditionTemplateRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateConditionTemplateRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.template__ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template__)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.CreateConditionTemplateRequest)
}
PROTOBUF_NDEBUG_INLINE CreateConditionTemplateRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreateConditionTemplateRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.template__ = {};
}
CreateConditionTemplateRequest::~CreateConditionTemplateRequest() {
  // @@protoc_insertion_point(destructor:seshat.CreateConditionTemplateRequest)
  SharedDtor(*this);
}
inline void CreateConditionTemplateRequest::SharedDtor(MessageLite& self) {
  CreateConditionTemplateRequest& this_ = static_cast<CreateConditionTemplateRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.template__;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateConditionTemplateRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateConditionTemplateRequest(arena);
}
constexpr auto CreateConditionTemplateRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateConditionTemplateRequest),
                                            alignof(CreateConditionTemplateRequest));
}
constexpr auto CreateConditionTemplateRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateConditionTemplateRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateConditionTemplateRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateConditionTemplateRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateConditionTemplateRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateConditionTemplateRequest>(), &CreateConditionTemplateRequest::ByteSizeLong,
              &CreateConditionTemplateRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateConditionTemplateRequest, _impl_._cached_size_),
          false,
      },
      &CreateConditionTemplateRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateConditionTemplateRequest_class_data_ =
        CreateConditionTemplateRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateConditionTemplateRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateConditionTemplateRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateConditionTemplateRequest_class_data_.tc_table);
  return CreateConditionTemplateRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
CreateConditionTemplateRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateConditionTemplateRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateConditionTemplateRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CreateConditionTemplateRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.ConditionTemplate template = 1 [json_name = "template"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateConditionTemplateRequest, _impl_.template__)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.ConditionTemplate template = 1 [json_name = "template"];
    {PROTOBUF_FIELD_OFFSET(CreateConditionTemplateRequest, _impl_.template__), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionTemplate>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CreateConditionTemplateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CreateConditionTemplateRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.template__ != nullptr);
    _impl_.template__->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateConditionTemplateRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateConditionTemplateRequest& this_ = static_cast<const CreateConditionTemplateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateConditionTemplateRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateConditionTemplateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CreateConditionTemplateRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionTemplate template = 1 [json_name = "template"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.template__, this_._impl_.template__->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CreateConditionTemplateRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateConditionTemplateRequest::ByteSizeLong(const MessageLite& base) {
  const CreateConditionTemplateRequest& this_ = static_cast<const CreateConditionTemplateRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateConditionTemplateRequest::ByteSizeLong() const {
  const CreateConditionTemplateRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CreateConditionTemplateRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .seshat.ConditionTemplate template = 1 [json_name = "template"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.template__);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateConditionTemplateRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateConditionTemplateRequest*>(&to_msg);
  auto& from = static_cast<const CreateConditionTemplateRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CreateConditionTemplateRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.template__ != nullptr);
    if (_this->_impl_.template__ == nullptr) {
      _this->_impl_.template__ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.template__);
    } else {
      _this->_impl_.template__->MergeFrom(*from._impl_.template__);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateConditionTemplateRequest::CopyFrom(const CreateConditionTemplateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CreateConditionTemplateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateConditionTemplateRequest::InternalSwap(CreateConditionTemplateRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.template__, other->_impl_.template__);
}

::google::protobuf::Metadata CreateConditionTemplateRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CreateConditionTemplateResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CreateConditionTemplateResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_._has_bits_);
};

void CreateConditionTemplateResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
CreateConditionTemplateResponse::CreateConditionTemplateResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateConditionTemplateResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.CreateConditionTemplateResponse)
}
PROTOBUF_NDEBUG_INLINE CreateConditionTemplateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::CreateConditionTemplateResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

CreateConditionTemplateResponse::CreateConditionTemplateResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const CreateConditionTemplateResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CreateConditionTemplateResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  CreateConditionTemplateResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.created_template_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_template_)
                : nullptr;
  _impl_.status_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.CreateConditionTemplateResponse)
}
PROTOBUF_NDEBUG_INLINE CreateConditionTemplateResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CreateConditionTemplateResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, created_template_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, created_template_) +
               sizeof(Impl_::status_));
}
CreateConditionTemplateResponse::~CreateConditionTemplateResponse() {
  // @@protoc_insertion_point(destructor:seshat.CreateConditionTemplateResponse)
  SharedDtor(*this);
}
inline void CreateConditionTemplateResponse::SharedDtor(MessageLite& self) {
  CreateConditionTemplateResponse& this_ = static_cast<CreateConditionTemplateResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.created_template_;
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CreateConditionTemplateResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CreateConditionTemplateResponse(arena);
}
constexpr auto CreateConditionTemplateResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CreateConditionTemplateResponse),
                                            alignof(CreateConditionTemplateResponse));
}
constexpr auto CreateConditionTemplateResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CreateConditionTemplateResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CreateConditionTemplateResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CreateConditionTemplateResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CreateConditionTemplateResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CreateConditionTemplateResponse>(), &CreateConditionTemplateResponse::ByteSizeLong,
              &CreateConditionTemplateResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_._cached_size_),
          false,
      },
      &CreateConditionTemplateResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CreateConditionTemplateResponse_class_data_ =
        CreateConditionTemplateResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CreateConditionTemplateResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CreateConditionTemplateResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CreateConditionTemplateResponse_class_data_.tc_table);
  return CreateConditionTemplateResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
CreateConditionTemplateResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    CreateConditionTemplateResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::CreateConditionTemplateResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 2 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.status_)}},
    // .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.created_template_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
    {PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.created_template_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 2 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.status_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionTemplate>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void CreateConditionTemplateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.CreateConditionTemplateResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.created_template_ != nullptr);
      _impl_.created_template_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.status_ != nullptr);
      _impl_.status_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CreateConditionTemplateResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CreateConditionTemplateResponse& this_ = static_cast<const CreateConditionTemplateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CreateConditionTemplateResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CreateConditionTemplateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.CreateConditionTemplateResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.created_template_, this_._impl_.created_template_->GetCachedSize(), target,
        stream);
  }

  // .seshat.Result status = 2 [json_name = "status"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.CreateConditionTemplateResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CreateConditionTemplateResponse::ByteSizeLong(const MessageLite& base) {
  const CreateConditionTemplateResponse& this_ = static_cast<const CreateConditionTemplateResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CreateConditionTemplateResponse::ByteSizeLong() const {
  const CreateConditionTemplateResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.CreateConditionTemplateResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.ConditionTemplate created_template = 1 [json_name = "createdTemplate"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.created_template_);
    }
    // .seshat.Result status = 2 [json_name = "status"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CreateConditionTemplateResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CreateConditionTemplateResponse*>(&to_msg);
  auto& from = static_cast<const CreateConditionTemplateResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.CreateConditionTemplateResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.created_template_ != nullptr);
      if (_this->_impl_.created_template_ == nullptr) {
        _this->_impl_.created_template_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.created_template_);
      } else {
        _this->_impl_.created_template_->MergeFrom(*from._impl_.created_template_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CreateConditionTemplateResponse::CopyFrom(const CreateConditionTemplateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.CreateConditionTemplateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CreateConditionTemplateResponse::InternalSwap(CreateConditionTemplateResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.status_)
      + sizeof(CreateConditionTemplateResponse::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(CreateConditionTemplateResponse, _impl_.created_template_)>(
          reinterpret_cast<char*>(&_impl_.created_template_),
          reinterpret_cast<char*>(&other->_impl_.created_template_));
}

::google::protobuf::Metadata CreateConditionTemplateResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProcessConditionTickRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProcessConditionTickRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_._has_bits_);
};

ProcessConditionTickRequest::ProcessConditionTickRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProcessConditionTickRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ProcessConditionTickRequest)
}
PROTOBUF_NDEBUG_INLINE ProcessConditionTickRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ProcessConditionTickRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        entity_id_(arena, from.entity_id_),
        trigger_(arena, from.trigger_) {}

ProcessConditionTickRequest::ProcessConditionTickRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProcessConditionTickRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProcessConditionTickRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProcessConditionTickRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.current_timestamp_ = from._impl_.current_timestamp_;

  // @@protoc_insertion_point(copy_constructor:seshat.ProcessConditionTickRequest)
}
PROTOBUF_NDEBUG_INLINE ProcessConditionTickRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        entity_id_(arena),
        trigger_(arena) {}

inline void ProcessConditionTickRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.current_timestamp_ = {};
}
ProcessConditionTickRequest::~ProcessConditionTickRequest() {
  // @@protoc_insertion_point(destructor:seshat.ProcessConditionTickRequest)
  SharedDtor(*this);
}
inline void ProcessConditionTickRequest::SharedDtor(MessageLite& self) {
  ProcessConditionTickRequest& this_ = static_cast<ProcessConditionTickRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.trigger_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProcessConditionTickRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProcessConditionTickRequest(arena);
}
constexpr auto ProcessConditionTickRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ProcessConditionTickRequest),
                                            alignof(ProcessConditionTickRequest));
}
constexpr auto ProcessConditionTickRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProcessConditionTickRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProcessConditionTickRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProcessConditionTickRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProcessConditionTickRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProcessConditionTickRequest>(), &ProcessConditionTickRequest::ByteSizeLong,
              &ProcessConditionTickRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_._cached_size_),
          false,
      },
      &ProcessConditionTickRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProcessConditionTickRequest_class_data_ =
        ProcessConditionTickRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProcessConditionTickRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProcessConditionTickRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProcessConditionTickRequest_class_data_.tc_table);
  return ProcessConditionTickRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 59, 2>
ProcessConditionTickRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ProcessConditionTickRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ProcessConditionTickRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.entity_id_)}},
    // string trigger = 2 [json_name = "trigger"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.trigger_)}},
    // int64 current_timestamp = 3 [json_name = "currentTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ProcessConditionTickRequest, _impl_.current_timestamp_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.current_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trigger = 2 [json_name = "trigger"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.trigger_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 current_timestamp = 3 [json_name = "currentTimestamp"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickRequest, _impl_.current_timestamp_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\42\11\7\0\0\0\0\0"
    "seshat.ProcessConditionTickRequest"
    "entity_id"
    "trigger"
  }},
};
PROTOBUF_NOINLINE void ProcessConditionTickRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ProcessConditionTickRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.trigger_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.current_timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProcessConditionTickRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProcessConditionTickRequest& this_ = static_cast<const ProcessConditionTickRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProcessConditionTickRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProcessConditionTickRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ProcessConditionTickRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ProcessConditionTickRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string trigger = 2 [json_name = "trigger"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (!this_._internal_trigger().empty()) {
      const ::std::string& _s = this_._internal_trigger();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ProcessConditionTickRequest.trigger");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 current_timestamp = 3 [json_name = "currentTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_current_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_current_timestamp(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ProcessConditionTickRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProcessConditionTickRequest::ByteSizeLong(const MessageLite& base) {
  const ProcessConditionTickRequest& this_ = static_cast<const ProcessConditionTickRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProcessConditionTickRequest::ByteSizeLong() const {
  const ProcessConditionTickRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ProcessConditionTickRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // string trigger = 2 [json_name = "trigger"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_trigger().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_trigger());
      }
    }
    // int64 current_timestamp = 3 [json_name = "currentTimestamp"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_current_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_current_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProcessConditionTickRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProcessConditionTickRequest*>(&to_msg);
  auto& from = static_cast<const ProcessConditionTickRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ProcessConditionTickRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_trigger().empty()) {
        _this->_internal_set_trigger(from._internal_trigger());
      } else {
        if (_this->_impl_.trigger_.IsDefault()) {
          _this->_internal_set_trigger("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_current_timestamp() != 0) {
        _this->_impl_.current_timestamp_ = from._impl_.current_timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessConditionTickRequest::CopyFrom(const ProcessConditionTickRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ProcessConditionTickRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProcessConditionTickRequest::InternalSwap(ProcessConditionTickRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trigger_, &other->_impl_.trigger_, arena);
  swap(_impl_.current_timestamp_, other->_impl_.current_timestamp_);
}

::google::protobuf::Metadata ProcessConditionTickRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ProcessConditionTickResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ProcessConditionTickResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_._has_bits_);
};

void ProcessConditionTickResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ProcessConditionTickResponse::ProcessConditionTickResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProcessConditionTickResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ProcessConditionTickResponse)
}
PROTOBUF_NDEBUG_INLINE ProcessConditionTickResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ProcessConditionTickResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        expired_conditions_{visibility, arena, from.expired_conditions_},
        triggered_conditions_{visibility, arena, from.triggered_conditions_},
        applied_effects_{visibility, arena, from.applied_effects_} {}

ProcessConditionTickResponse::ProcessConditionTickResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ProcessConditionTickResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ProcessConditionTickResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ProcessConditionTickResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:seshat.ProcessConditionTickResponse)
}
PROTOBUF_NDEBUG_INLINE ProcessConditionTickResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        expired_conditions_{visibility, arena},
        triggered_conditions_{visibility, arena},
        applied_effects_{visibility, arena} {}

inline void ProcessConditionTickResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.status_ = {};
}
ProcessConditionTickResponse::~ProcessConditionTickResponse() {
  // @@protoc_insertion_point(destructor:seshat.ProcessConditionTickResponse)
  SharedDtor(*this);
}
inline void ProcessConditionTickResponse::SharedDtor(MessageLite& self) {
  ProcessConditionTickResponse& this_ = static_cast<ProcessConditionTickResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ProcessConditionTickResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ProcessConditionTickResponse(arena);
}
constexpr auto ProcessConditionTickResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.expired_conditions_) +
          decltype(ProcessConditionTickResponse::_impl_.expired_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.triggered_conditions_) +
          decltype(ProcessConditionTickResponse::_impl_.triggered_conditions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.applied_effects_) +
          decltype(ProcessConditionTickResponse::_impl_.applied_effects_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ProcessConditionTickResponse), alignof(ProcessConditionTickResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ProcessConditionTickResponse::PlacementNew_,
                                 sizeof(ProcessConditionTickResponse),
                                 alignof(ProcessConditionTickResponse));
  }
}
constexpr auto ProcessConditionTickResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ProcessConditionTickResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ProcessConditionTickResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ProcessConditionTickResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ProcessConditionTickResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ProcessConditionTickResponse>(), &ProcessConditionTickResponse::ByteSizeLong,
              &ProcessConditionTickResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_._cached_size_),
          false,
      },
      &ProcessConditionTickResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ProcessConditionTickResponse_class_data_ =
        ProcessConditionTickResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ProcessConditionTickResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ProcessConditionTickResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ProcessConditionTickResponse_class_data_.tc_table);
  return ProcessConditionTickResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 4, 0, 2>
ProcessConditionTickResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ProcessConditionTickResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ProcessConditionTickResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .seshat.Result status = 4 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 3, PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.status_)}},
    // repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.expired_conditions_)}},
    // repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.triggered_conditions_)}},
    // repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 2, PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.applied_effects_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.expired_conditions_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.triggered_conditions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.applied_effects_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .seshat.Result status = 4 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(ProcessConditionTickResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetTable<::seshat::ConditionEffect>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ProcessConditionTickResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ProcessConditionTickResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.expired_conditions_.Clear();
  _impl_.triggered_conditions_.Clear();
  _impl_.applied_effects_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ProcessConditionTickResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ProcessConditionTickResponse& this_ = static_cast<const ProcessConditionTickResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ProcessConditionTickResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ProcessConditionTickResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ProcessConditionTickResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_expired_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_expired_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_triggered_conditions_size());
       i < n; i++) {
    const auto& repfield = this_._internal_triggered_conditions().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_applied_effects_size());
       i < n; i++) {
    const auto& repfield = this_._internal_applied_effects().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            3, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 4 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        4, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ProcessConditionTickResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ProcessConditionTickResponse::ByteSizeLong(const MessageLite& base) {
  const ProcessConditionTickResponse& this_ = static_cast<const ProcessConditionTickResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ProcessConditionTickResponse::ByteSizeLong() const {
  const ProcessConditionTickResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ProcessConditionTickResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.Condition expired_conditions = 1 [json_name = "expiredConditions"];
    {
      total_size += 1UL * this_._internal_expired_conditions_size();
      for (const auto& msg : this_._internal_expired_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .seshat.Condition triggered_conditions = 2 [json_name = "triggeredConditions"];
    {
      total_size += 1UL * this_._internal_triggered_conditions_size();
      for (const auto& msg : this_._internal_triggered_conditions()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
    // repeated .seshat.ConditionEffect applied_effects = 3 [json_name = "appliedEffects"];
    {
      total_size += 1UL * this_._internal_applied_effects_size();
      for (const auto& msg : this_._internal_applied_effects()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
   {
    // .seshat.Result status = 4 [json_name = "status"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ProcessConditionTickResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ProcessConditionTickResponse*>(&to_msg);
  auto& from = static_cast<const ProcessConditionTickResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ProcessConditionTickResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_expired_conditions()->MergeFrom(
      from._internal_expired_conditions());
  _this->_internal_mutable_triggered_conditions()->MergeFrom(
      from._internal_triggered_conditions());
  _this->_internal_mutable_applied_effects()->MergeFrom(
      from._internal_applied_effects());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.status_ != nullptr);
    if (_this->_impl_.status_ == nullptr) {
      _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
    } else {
      _this->_impl_.status_->MergeFrom(*from._impl_.status_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessConditionTickResponse::CopyFrom(const ProcessConditionTickResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ProcessConditionTickResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ProcessConditionTickResponse::InternalSwap(ProcessConditionTickResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.expired_conditions_.InternalSwap(&other->_impl_.expired_conditions_);
  _impl_.triggered_conditions_.InternalSwap(&other->_impl_.triggered_conditions_);
  _impl_.applied_effects_.InternalSwap(&other->_impl_.applied_effects_);
  swap(_impl_.status_, other->_impl_.status_);
}

::google::protobuf::Metadata ProcessConditionTickResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionHistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionHistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_._has_bits_);
};

GetConditionHistoryRequest::GetConditionHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionHistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        condition_types_{visibility, arena, from.condition_types_},
        entity_id_(arena, from.entity_id_) {}

GetConditionHistoryRequest::GetConditionHistoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionHistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionHistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionHistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_timestamp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, since_timestamp_),
           offsetof(Impl_, limit_) -
               offsetof(Impl_, since_timestamp_) +
               sizeof(Impl_::limit_));

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionHistoryRequest)
}
PROTOBUF_NDEBUG_INLINE GetConditionHistoryRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        condition_types_{visibility, arena},
        entity_id_(arena) {}

inline void GetConditionHistoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, since_timestamp_),
           0,
           offsetof(Impl_, limit_) -
               offsetof(Impl_, since_timestamp_) +
               sizeof(Impl_::limit_));
}
GetConditionHistoryRequest::~GetConditionHistoryRequest() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionHistoryRequest)
  SharedDtor(*this);
}
inline void GetConditionHistoryRequest::SharedDtor(MessageLite& self) {
  GetConditionHistoryRequest& this_ = static_cast<GetConditionHistoryRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.entity_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionHistoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionHistoryRequest(arena);
}
constexpr auto GetConditionHistoryRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.condition_types_) +
          decltype(GetConditionHistoryRequest::_impl_.condition_types_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(GetConditionHistoryRequest), alignof(GetConditionHistoryRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionHistoryRequest::PlacementNew_,
                                 sizeof(GetConditionHistoryRequest),
                                 alignof(GetConditionHistoryRequest));
  }
}
constexpr auto GetConditionHistoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionHistoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionHistoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionHistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionHistoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionHistoryRequest>(), &GetConditionHistoryRequest::ByteSizeLong,
              &GetConditionHistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_._cached_size_),
          false,
      },
      &GetConditionHistoryRequest::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionHistoryRequest_class_data_ =
        GetConditionHistoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionHistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionHistoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionHistoryRequest_class_data_.tc_table);
  return GetConditionHistoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 66, 2>
GetConditionHistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    GetConditionHistoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionHistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated string condition_types = 4 [json_name = "conditionTypes"];
    {::_pbi::TcParser::FastUR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.condition_types_)}},
    // string entity_id = 1 [json_name = "entityId"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.entity_id_)}},
    // int32 limit = 2 [json_name = "limit"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetConditionHistoryRequest, _impl_.limit_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.limit_)}},
    // int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(GetConditionHistoryRequest, _impl_.since_timestamp_), 1>(),
     {24, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.since_timestamp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string entity_id = 1 [json_name = "entityId"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.entity_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 limit = 2 [json_name = "limit"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.limit_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.since_timestamp_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // repeated string condition_types = 4 [json_name = "conditionTypes"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.condition_types_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\41\11\0\0\17\0\0\0"
    "seshat.GetConditionHistoryRequest"
    "entity_id"
    "condition_types"
  }},
};
PROTOBUF_NOINLINE void GetConditionHistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionHistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.condition_types_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    _impl_.entity_id_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006u) != 0) {
    ::memset(&_impl_.since_timestamp_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.limit_) -
        reinterpret_cast<char*>(&_impl_.since_timestamp_)) + sizeof(_impl_.limit_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionHistoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionHistoryRequest& this_ = static_cast<const GetConditionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionHistoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionHistoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string entity_id = 1 [json_name = "entityId"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (!this_._internal_entity_id().empty()) {
      const ::std::string& _s = this_._internal_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionHistoryRequest.entity_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 limit = 2 [json_name = "limit"];
  if ((this_._impl_._has_bits_[0] & 0x00000004u) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_limit(), target);
    }
  }

  // int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_since_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_since_timestamp(), target);
    }
  }

  // repeated string condition_types = 4 [json_name = "conditionTypes"];
  for (int i = 0, n = this_._internal_condition_types_size(); i < n; ++i) {
    const auto& s = this_._internal_condition_types().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.GetConditionHistoryRequest.condition_types");
    target = stream->WriteString(4, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionHistoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionHistoryRequest::ByteSizeLong(const MessageLite& base) {
  const GetConditionHistoryRequest& this_ = static_cast<const GetConditionHistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionHistoryRequest::ByteSizeLong() const {
  const GetConditionHistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionHistoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string condition_types = 4 [json_name = "conditionTypes"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_condition_types().size());
      for (int i = 0, n = this_._internal_condition_types().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_condition_types().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // string entity_id = 1 [json_name = "entityId"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_entity_id());
      }
    }
    // int64 since_timestamp = 3 [json_name = "sinceTimestamp"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_since_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_since_timestamp());
      }
    }
    // int32 limit = 2 [json_name = "limit"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_limit());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionHistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionHistoryRequest*>(&to_msg);
  auto& from = static_cast<const GetConditionHistoryRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionHistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_condition_types()->MergeFrom(from._internal_condition_types());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_entity_id().empty()) {
        _this->_internal_set_entity_id(from._internal_entity_id());
      } else {
        if (_this->_impl_.entity_id_.IsDefault()) {
          _this->_internal_set_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_since_timestamp() != 0) {
        _this->_impl_.since_timestamp_ = from._impl_.since_timestamp_;
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionHistoryRequest::CopyFrom(const GetConditionHistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionHistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionHistoryRequest::InternalSwap(GetConditionHistoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.condition_types_.InternalSwap(&other->_impl_.condition_types_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.entity_id_, &other->_impl_.entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.limit_)
      + sizeof(GetConditionHistoryRequest::_impl_.limit_)
      - PROTOBUF_FIELD_OFFSET(GetConditionHistoryRequest, _impl_.since_timestamp_)>(
          reinterpret_cast<char*>(&_impl_.since_timestamp_),
          reinterpret_cast<char*>(&other->_impl_.since_timestamp_));
}

::google::protobuf::Metadata GetConditionHistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GetConditionHistoryResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<GetConditionHistoryResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_._has_bits_);
};

void GetConditionHistoryResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ != nullptr) _impl_.status_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
GetConditionHistoryResponse::GetConditionHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.GetConditionHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::GetConditionHistoryResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        history_{visibility, arena, from.history_} {}

GetConditionHistoryResponse::GetConditionHistoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const GetConditionHistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, GetConditionHistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GetConditionHistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.status_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_)
                : nullptr;
  _impl_.total_count_ = from._impl_.total_count_;

  // @@protoc_insertion_point(copy_constructor:seshat.GetConditionHistoryResponse)
}
PROTOBUF_NDEBUG_INLINE GetConditionHistoryResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        history_{visibility, arena} {}

inline void GetConditionHistoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, status_),
           0,
           offsetof(Impl_, total_count_) -
               offsetof(Impl_, status_) +
               sizeof(Impl_::total_count_));
}
GetConditionHistoryResponse::~GetConditionHistoryResponse() {
  // @@protoc_insertion_point(destructor:seshat.GetConditionHistoryResponse)
  SharedDtor(*this);
}
inline void GetConditionHistoryResponse::SharedDtor(MessageLite& self) {
  GetConditionHistoryResponse& this_ = static_cast<GetConditionHistoryResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.status_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL GetConditionHistoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) GetConditionHistoryResponse(arena);
}
constexpr auto GetConditionHistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.history_) +
          decltype(GetConditionHistoryResponse::_impl_.history_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(GetConditionHistoryResponse), alignof(GetConditionHistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&GetConditionHistoryResponse::PlacementNew_,
                                 sizeof(GetConditionHistoryResponse),
                                 alignof(GetConditionHistoryResponse));
  }
}
constexpr auto GetConditionHistoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_GetConditionHistoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &GetConditionHistoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<GetConditionHistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &GetConditionHistoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<GetConditionHistoryResponse>(), &GetConditionHistoryResponse::ByteSizeLong,
              &GetConditionHistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_._cached_size_),
          false,
      },
      &GetConditionHistoryResponse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull GetConditionHistoryResponse_class_data_ =
        GetConditionHistoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
GetConditionHistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&GetConditionHistoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(GetConditionHistoryResponse_class_data_.tc_table);
  return GetConditionHistoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2>
GetConditionHistoryResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    GetConditionHistoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::GetConditionHistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.history_)}},
    // int32 total_count = 2 [json_name = "totalCount"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetConditionHistoryResponse, _impl_.total_count_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.total_count_)}},
    // .seshat.Result status = 3 [json_name = "status"];
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.history_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 total_count = 2 [json_name = "totalCount"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.total_count_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .seshat.Result status = 3 [json_name = "status"];
    {PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.status_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::ConditionHistoryEntry>()},
      {::_pbi::TcParser::GetTable<::seshat::Result>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void GetConditionHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.GetConditionHistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.history_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.status_ != nullptr);
    _impl_.status_->Clear();
  }
  _impl_.total_count_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL GetConditionHistoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const GetConditionHistoryResponse& this_ = static_cast<const GetConditionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL GetConditionHistoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const GetConditionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.GetConditionHistoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_history_size());
       i < n; i++) {
    const auto& repfield = this_._internal_history().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  // int32 total_count = 2 [json_name = "totalCount"];
  if ((this_._impl_._has_bits_[0] & 0x00000002u) != 0) {
    if (this_._internal_total_count() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_total_count(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Result status = 3 [json_name = "status"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.status_, this_._impl_.status_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.GetConditionHistoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t GetConditionHistoryResponse::ByteSizeLong(const MessageLite& base) {
  const GetConditionHistoryResponse& this_ = static_cast<const GetConditionHistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t GetConditionHistoryResponse::ByteSizeLong() const {
  const GetConditionHistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.GetConditionHistoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .seshat.ConditionHistoryEntry history = 1 [json_name = "history"];
    {
      total_size += 1UL * this_._internal_history_size();
      for (const auto& msg : this_._internal_history()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .seshat.Result status = 3 [json_name = "status"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.status_);
    }
    // int32 total_count = 2 [json_name = "totalCount"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (this_._internal_total_count() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_total_count());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void GetConditionHistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GetConditionHistoryResponse*>(&to_msg);
  auto& from = static_cast<const GetConditionHistoryResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.GetConditionHistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_history()->MergeFrom(
      from._internal_history());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.status_ != nullptr);
      if (_this->_impl_.status_ == nullptr) {
        _this->_impl_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.status_);
      } else {
        _this->_impl_.status_->MergeFrom(*from._impl_.status_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (from._internal_total_count() != 0) {
        _this->_impl_.total_count_ = from._impl_.total_count_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetConditionHistoryResponse::CopyFrom(const GetConditionHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.GetConditionHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GetConditionHistoryResponse::InternalSwap(GetConditionHistoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.history_.InternalSwap(&other->_impl_.history_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.total_count_)
      + sizeof(GetConditionHistoryResponse::_impl_.total_count_)
      - PROTOBUF_FIELD_OFFSET(GetConditionHistoryResponse, _impl_.status_)>(
          reinterpret_cast<char*>(&_impl_.status_),
          reinterpret_cast<char*>(&other->_impl_.status_));
}

::google::protobuf::Metadata GetConditionHistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
ConditionHistoryEntry_DetailsEntry_DoNotUse::ConditionHistoryEntry_DetailsEntry_DoNotUse()
    : SuperType(ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.base()) {}
ConditionHistoryEntry_DetailsEntry_DoNotUse::ConditionHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
    : SuperType(arena, ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
ConditionHistoryEntry_DetailsEntry_DoNotUse::ConditionHistoryEntry_DetailsEntry_DoNotUse() : SuperType() {}
ConditionHistoryEntry_DetailsEntry_DoNotUse::ConditionHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
inline void* PROTOBUF_NONNULL ConditionHistoryEntry_DetailsEntry_DoNotUse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionHistoryEntry_DetailsEntry_DoNotUse(arena);
}
constexpr auto ConditionHistoryEntry_DetailsEntry_DoNotUse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConditionHistoryEntry_DetailsEntry_DoNotUse),
                                            alignof(ConditionHistoryEntry_DetailsEntry_DoNotUse));
}
constexpr auto ConditionHistoryEntry_DetailsEntry_DoNotUse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionHistoryEntry_DetailsEntry_DoNotUse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionHistoryEntry_DetailsEntry_DoNotUse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionHistoryEntry_DetailsEntry_DoNotUse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionHistoryEntry_DetailsEntry_DoNotUse::SharedDtor,
          static_cast<void (::google::protobuf::MessageLite::*)()>(&ConditionHistoryEntry_DetailsEntry_DoNotUse::ClearImpl),
              ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
              ,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_._cached_size_),
          false,
      },
      &ConditionHistoryEntry_DetailsEntry_DoNotUse::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_ =
        ConditionHistoryEntry_DetailsEntry_DoNotUse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionHistoryEntry_DetailsEntry_DoNotUse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.tc_table);
  return ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
ConditionHistoryEntry_DetailsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConditionHistoryEntry_DetailsEntry_DoNotUse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionHistoryEntry_DetailsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2 [json_name = "value"];
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2 [json_name = "value"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry_DetailsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\5\0\0\0\0\0"
    "seshat.ConditionHistoryEntry.DetailsEntry"
    "key"
    "value"
  }},
};
// ===================================================================

class ConditionHistoryEntry::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConditionHistoryEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_._has_bits_);
};

ConditionHistoryEntry::ConditionHistoryEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionHistoryEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:seshat.ConditionHistoryEntry)
}
PROTOBUF_NDEBUG_INLINE ConditionHistoryEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::seshat::ConditionHistoryEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        details_{visibility, arena, from.details_},
        action_(arena, from.action_),
        reason_(arena, from.reason_),
        source_entity_id_(arena, from.source_entity_id_) {}

ConditionHistoryEntry::ConditionHistoryEntry(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConditionHistoryEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConditionHistoryEntry_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConditionHistoryEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.condition_ = ((cached_has_bits & 0x00000008u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.condition_)
                : nullptr;
  _impl_.timestamp_ = from._impl_.timestamp_;

  // @@protoc_insertion_point(copy_constructor:seshat.ConditionHistoryEntry)
}
PROTOBUF_NDEBUG_INLINE ConditionHistoryEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        details_{visibility, arena},
        action_(arena),
        reason_(arena),
        source_entity_id_(arena) {}

inline void ConditionHistoryEntry::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, condition_),
           0,
           offsetof(Impl_, timestamp_) -
               offsetof(Impl_, condition_) +
               sizeof(Impl_::timestamp_));
}
ConditionHistoryEntry::~ConditionHistoryEntry() {
  // @@protoc_insertion_point(destructor:seshat.ConditionHistoryEntry)
  SharedDtor(*this);
}
inline void ConditionHistoryEntry::SharedDtor(MessageLite& self) {
  ConditionHistoryEntry& this_ = static_cast<ConditionHistoryEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.action_.Destroy();
  this_._impl_.reason_.Destroy();
  this_._impl_.source_entity_id_.Destroy();
  delete this_._impl_.condition_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConditionHistoryEntry::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConditionHistoryEntry(arena);
}
constexpr auto ConditionHistoryEntry::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.details_) +
          decltype(ConditionHistoryEntry::_impl_.details_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.details_) +
          decltype(ConditionHistoryEntry::_impl_.details_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ConditionHistoryEntry), alignof(ConditionHistoryEntry), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ConditionHistoryEntry::PlacementNew_,
                                 sizeof(ConditionHistoryEntry),
                                 alignof(ConditionHistoryEntry));
  }
}
constexpr auto ConditionHistoryEntry::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConditionHistoryEntry_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConditionHistoryEntry::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConditionHistoryEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConditionHistoryEntry::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConditionHistoryEntry>(), &ConditionHistoryEntry::ByteSizeLong,
              &ConditionHistoryEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_._cached_size_),
          false,
      },
      &ConditionHistoryEntry::kDescriptorMethods,
      &descriptor_table_seshat_2fconditions_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConditionHistoryEntry_class_data_ =
        ConditionHistoryEntry::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConditionHistoryEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConditionHistoryEntry_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConditionHistoryEntry_class_data_.tc_table);
  return ConditionHistoryEntry_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 2, 72, 2>
ConditionHistoryEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConditionHistoryEntry_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::seshat::ConditionHistoryEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .seshat.Condition condition = 1 [json_name = "condition"];
    {::_pbi::TcParser::FastMtS1,
     {10, 3, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.condition_)}},
    // string action = 2 [json_name = "action"];
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.action_)}},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ConditionHistoryEntry, _impl_.timestamp_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.timestamp_)}},
    // string reason = 4 [json_name = "reason"];
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.reason_)}},
    // string source_entity_id = 5 [json_name = "sourceEntityId"];
    {::_pbi::TcParser::FastUS1,
     {42, 2, 0, PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.source_entity_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .seshat.Condition condition = 1 [json_name = "condition"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.condition_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string action = 2 [json_name = "action"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 timestamp = 3 [json_name = "timestamp"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.timestamp_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // string reason = 4 [json_name = "reason"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.reason_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string source_entity_id = 5 [json_name = "sourceEntityId"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.source_entity_id_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> details = 6 [json_name = "details"];
    {PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.details_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::seshat::Condition>()},
      {::_pbi::TcParser::GetMapAuxInfo(1, 0, 0,
                                       9, 9,
                                       0)},
  }},
  {{
    "\34\0\6\0\6\20\7\0"
    "seshat.ConditionHistoryEntry"
    "action"
    "reason"
    "source_entity_id"
    "details"
  }},
};
PROTOBUF_NOINLINE void ConditionHistoryEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:seshat.ConditionHistoryEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      _impl_.action_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      _impl_.reason_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      _impl_.source_entity_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(_impl_.condition_ != nullptr);
      _impl_.condition_->Clear();
    }
  }
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConditionHistoryEntry::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConditionHistoryEntry& this_ = static_cast<const ConditionHistoryEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConditionHistoryEntry::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConditionHistoryEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:seshat.ConditionHistoryEntry)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .seshat.Condition condition = 1 [json_name = "condition"];
  if ((cached_has_bits & 0x00000008u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.condition_, this_._impl_.condition_->GetCachedSize(), target,
        stream);
  }

  // string action = 2 [json_name = "action"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (!this_._internal_action().empty()) {
      const ::std::string& _s = this_._internal_action();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.action");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 timestamp = 3 [json_name = "timestamp"];
  if ((cached_has_bits & 0x00000010u) != 0) {
    if (this_._internal_timestamp() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_timestamp(), target);
    }
  }

  // string reason = 4 [json_name = "reason"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    if (!this_._internal_reason().empty()) {
      const ::std::string& _s = this_._internal_reason();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.reason");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string source_entity_id = 5 [json_name = "sourceEntityId"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    if (!this_._internal_source_entity_id().empty()) {
      const ::std::string& _s = this_._internal_source_entity_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.source_entity_id");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // map<string, string> details = 6 [json_name = "details"];
  if (!this_._internal_details().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = this_._internal_details();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.details");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.details");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            6, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.details");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "seshat.ConditionHistoryEntry.details");
      }
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:seshat.ConditionHistoryEntry)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConditionHistoryEntry::ByteSizeLong(const MessageLite& base) {
  const ConditionHistoryEntry& this_ = static_cast<const ConditionHistoryEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConditionHistoryEntry::ByteSizeLong() const {
  const ConditionHistoryEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:seshat.ConditionHistoryEntry)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // map<string, string> details = 6 [json_name = "details"];
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_details_size());
      for (const auto& entry : this_._internal_details()) {
        total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                       _pbi::WireFormatLite::TYPE_STRING,
                                       _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    // string action = 2 [json_name = "action"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!this_._internal_action().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_action());
      }
    }
    // string reason = 4 [json_name = "reason"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!this_._internal_reason().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_reason());
      }
    }
    // string source_entity_id = 5 [json_name = "sourceEntityId"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!this_._internal_source_entity_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_source_entity_id());
      }
    }
    // .seshat.Condition condition = 1 [json_name = "condition"];
    if ((cached_has_bits & 0x00000008u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.condition_);
    }
    // int64 timestamp = 3 [json_name = "timestamp"];
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (this_._internal_timestamp() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConditionHistoryEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConditionHistoryEntry*>(&to_msg);
  auto& from = static_cast<const ConditionHistoryEntry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:seshat.ConditionHistoryEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.details_.MergeFrom(from._impl_.details_);
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fu) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (!from._internal_action().empty()) {
        _this->_internal_set_action(from._internal_action());
      } else {
        if (_this->_impl_.action_.IsDefault()) {
          _this->_internal_set_action("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      if (!from._internal_reason().empty()) {
        _this->_internal_set_reason(from._internal_reason());
      } else {
        if (_this->_impl_.reason_.IsDefault()) {
          _this->_internal_set_reason("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      if (!from._internal_source_entity_id().empty()) {
        _this->_internal_set_source_entity_id(from._internal_source_entity_id());
      } else {
        if (_this->_impl_.source_entity_id_.IsDefault()) {
          _this->_internal_set_source_entity_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008u) != 0) {
      ABSL_DCHECK(from._impl_.condition_ != nullptr);
      if (_this->_impl_.condition_ == nullptr) {
        _this->_impl_.condition_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.condition_);
      } else {
        _this->_impl_.condition_->MergeFrom(*from._impl_.condition_);
      }
    }
    if ((cached_has_bits & 0x00000010u) != 0) {
      if (from._internal_timestamp() != 0) {
        _this->_impl_.timestamp_ = from._impl_.timestamp_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConditionHistoryEntry::CopyFrom(const ConditionHistoryEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:seshat.ConditionHistoryEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConditionHistoryEntry::InternalSwap(ConditionHistoryEntry* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.source_entity_id_, &other->_impl_.source_entity_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.timestamp_)
      + sizeof(ConditionHistoryEntry::_impl_.timestamp_)
      - PROTOBUF_FIELD_OFFSET(ConditionHistoryEntry, _impl_.condition_)>(
          reinterpret_cast<char*>(&_impl_.condition_),
          reinterpret_cast<char*>(&other->_impl_.condition_));
}

::google::protobuf::Metadata ConditionHistoryEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_seshat_2fconditions_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
