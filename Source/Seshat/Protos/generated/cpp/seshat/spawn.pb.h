// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: seshat/spawn.proto
// Protobuf C++ Version: 6.31.1

#ifndef seshat_2fspawn_2eproto_2epb_2eh
#define seshat_2fspawn_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6031001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_type_handler.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "seshat/common.pb.h"
#include "seshat/spatial.pb.h"
#include "seshat/selectables.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_seshat_2fspawn_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_seshat_2fspawn_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_seshat_2fspawn_2eproto;
}  // extern "C"
namespace seshat {
enum ConstraintType : int;
extern const uint32_t ConstraintType_internal_data_[];
enum PatternType : int;
extern const uint32_t PatternType_internal_data_[];
enum SpawnTiming : int;
extern const uint32_t SpawnTiming_internal_data_[];
class AddSpawnConstraintRequest;
struct AddSpawnConstraintRequestDefaultTypeInternal;
extern AddSpawnConstraintRequestDefaultTypeInternal _AddSpawnConstraintRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AddSpawnConstraintRequest_class_data_;
class AddSpawnConstraintResponse;
struct AddSpawnConstraintResponseDefaultTypeInternal;
extern AddSpawnConstraintResponseDefaultTypeInternal _AddSpawnConstraintResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AddSpawnConstraintResponse_class_data_;
class AnalyzeSpawnCapacityRequest;
struct AnalyzeSpawnCapacityRequestDefaultTypeInternal;
extern AnalyzeSpawnCapacityRequestDefaultTypeInternal _AnalyzeSpawnCapacityRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AnalyzeSpawnCapacityRequest_class_data_;
class AnalyzeSpawnCapacityResponse;
struct AnalyzeSpawnCapacityResponseDefaultTypeInternal;
extern AnalyzeSpawnCapacityResponseDefaultTypeInternal _AnalyzeSpawnCapacityResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull AnalyzeSpawnCapacityResponse_class_data_;
class ConstraintParameters;
struct ConstraintParametersDefaultTypeInternal;
extern ConstraintParametersDefaultTypeInternal _ConstraintParameters_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConstraintParameters_class_data_;
class ConstraintParameters_CustomParametersEntry_DoNotUse;
struct ConstraintParameters_CustomParametersEntry_DoNotUseDefaultTypeInternal;
extern ConstraintParameters_CustomParametersEntry_DoNotUseDefaultTypeInternal _ConstraintParameters_CustomParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConstraintParameters_CustomParametersEntry_DoNotUse_class_data_;
class CreateSpawnEngineRequest;
struct CreateSpawnEngineRequestDefaultTypeInternal;
extern CreateSpawnEngineRequestDefaultTypeInternal _CreateSpawnEngineRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateSpawnEngineRequest_class_data_;
class CreateSpawnEngineResponse;
struct CreateSpawnEngineResponseDefaultTypeInternal;
extern CreateSpawnEngineResponseDefaultTypeInternal _CreateSpawnEngineResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateSpawnEngineResponse_class_data_;
class CreateSpawnPatternRequest;
struct CreateSpawnPatternRequestDefaultTypeInternal;
extern CreateSpawnPatternRequestDefaultTypeInternal _CreateSpawnPatternRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateSpawnPatternRequest_class_data_;
class CreateSpawnPatternResponse;
struct CreateSpawnPatternResponseDefaultTypeInternal;
extern CreateSpawnPatternResponseDefaultTypeInternal _CreateSpawnPatternResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull CreateSpawnPatternResponse_class_data_;
class DeleteSpawnEngineRequest;
struct DeleteSpawnEngineRequestDefaultTypeInternal;
extern DeleteSpawnEngineRequestDefaultTypeInternal _DeleteSpawnEngineRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteSpawnEngineRequest_class_data_;
class DeleteSpawnEngineResponse;
struct DeleteSpawnEngineResponseDefaultTypeInternal;
extern DeleteSpawnEngineResponseDefaultTypeInternal _DeleteSpawnEngineResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DeleteSpawnEngineResponse_class_data_;
class DespawnEntityRequest;
struct DespawnEntityRequestDefaultTypeInternal;
extern DespawnEntityRequestDefaultTypeInternal _DespawnEntityRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DespawnEntityRequest_class_data_;
class DespawnEntityResponse;
struct DespawnEntityResponseDefaultTypeInternal;
extern DespawnEntityResponseDefaultTypeInternal _DespawnEntityResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DespawnEntityResponse_class_data_;
class EntityTypeCapacity;
struct EntityTypeCapacityDefaultTypeInternal;
extern EntityTypeCapacityDefaultTypeInternal _EntityTypeCapacity_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull EntityTypeCapacity_class_data_;
class GetActiveSpawnsRequest;
struct GetActiveSpawnsRequestDefaultTypeInternal;
extern GetActiveSpawnsRequestDefaultTypeInternal _GetActiveSpawnsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetActiveSpawnsRequest_class_data_;
class GetActiveSpawnsResponse;
struct GetActiveSpawnsResponseDefaultTypeInternal;
extern GetActiveSpawnsResponseDefaultTypeInternal _GetActiveSpawnsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetActiveSpawnsResponse_class_data_;
class GetOptimalSpawnPositionsRequest;
struct GetOptimalSpawnPositionsRequestDefaultTypeInternal;
extern GetOptimalSpawnPositionsRequestDefaultTypeInternal _GetOptimalSpawnPositionsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetOptimalSpawnPositionsRequest_class_data_;
class GetOptimalSpawnPositionsResponse;
struct GetOptimalSpawnPositionsResponseDefaultTypeInternal;
extern GetOptimalSpawnPositionsResponseDefaultTypeInternal _GetOptimalSpawnPositionsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetOptimalSpawnPositionsResponse_class_data_;
class GetSpawnConstraintsRequest;
struct GetSpawnConstraintsRequestDefaultTypeInternal;
extern GetSpawnConstraintsRequestDefaultTypeInternal _GetSpawnConstraintsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnConstraintsRequest_class_data_;
class GetSpawnConstraintsResponse;
struct GetSpawnConstraintsResponseDefaultTypeInternal;
extern GetSpawnConstraintsResponseDefaultTypeInternal _GetSpawnConstraintsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnConstraintsResponse_class_data_;
class GetSpawnEngineRequest;
struct GetSpawnEngineRequestDefaultTypeInternal;
extern GetSpawnEngineRequestDefaultTypeInternal _GetSpawnEngineRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnEngineRequest_class_data_;
class GetSpawnEngineResponse;
struct GetSpawnEngineResponseDefaultTypeInternal;
extern GetSpawnEngineResponseDefaultTypeInternal _GetSpawnEngineResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnEngineResponse_class_data_;
class GetSpawnHistoryRequest;
struct GetSpawnHistoryRequestDefaultTypeInternal;
extern GetSpawnHistoryRequestDefaultTypeInternal _GetSpawnHistoryRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnHistoryRequest_class_data_;
class GetSpawnHistoryResponse;
struct GetSpawnHistoryResponseDefaultTypeInternal;
extern GetSpawnHistoryResponseDefaultTypeInternal _GetSpawnHistoryResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnHistoryResponse_class_data_;
class GetSpawnPatternsRequest;
struct GetSpawnPatternsRequestDefaultTypeInternal;
extern GetSpawnPatternsRequestDefaultTypeInternal _GetSpawnPatternsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnPatternsRequest_class_data_;
class GetSpawnPatternsResponse;
struct GetSpawnPatternsResponseDefaultTypeInternal;
extern GetSpawnPatternsResponseDefaultTypeInternal _GetSpawnPatternsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetSpawnPatternsResponse_class_data_;
class OptimalPosition;
struct OptimalPositionDefaultTypeInternal;
extern OptimalPositionDefaultTypeInternal _OptimalPosition_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull OptimalPosition_class_data_;
class OptimalPosition_ConstraintScoresEntry_DoNotUse;
struct OptimalPosition_ConstraintScoresEntry_DoNotUseDefaultTypeInternal;
extern OptimalPosition_ConstraintScoresEntry_DoNotUseDefaultTypeInternal _OptimalPosition_ConstraintScoresEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull OptimalPosition_ConstraintScoresEntry_DoNotUse_class_data_;
class PatternParameters;
struct PatternParametersDefaultTypeInternal;
extern PatternParametersDefaultTypeInternal _PatternParameters_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PatternParameters_class_data_;
class PatternParameters_CustomParametersEntry_DoNotUse;
struct PatternParameters_CustomParametersEntry_DoNotUseDefaultTypeInternal;
extern PatternParameters_CustomParametersEntry_DoNotUseDefaultTypeInternal _PatternParameters_CustomParametersEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull PatternParameters_CustomParametersEntry_DoNotUse_class_data_;
class RecommendRoomSplitRequest;
struct RecommendRoomSplitRequestDefaultTypeInternal;
extern RecommendRoomSplitRequestDefaultTypeInternal _RecommendRoomSplitRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RecommendRoomSplitRequest_class_data_;
class RecommendRoomSplitResponse;
struct RecommendRoomSplitResponseDefaultTypeInternal;
extern RecommendRoomSplitResponseDefaultTypeInternal _RecommendRoomSplitResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RecommendRoomSplitResponse_class_data_;
class RemoveSpawnConstraintRequest;
struct RemoveSpawnConstraintRequestDefaultTypeInternal;
extern RemoveSpawnConstraintRequestDefaultTypeInternal _RemoveSpawnConstraintRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoveSpawnConstraintRequest_class_data_;
class RemoveSpawnConstraintResponse;
struct RemoveSpawnConstraintResponseDefaultTypeInternal;
extern RemoveSpawnConstraintResponseDefaultTypeInternal _RemoveSpawnConstraintResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RemoveSpawnConstraintResponse_class_data_;
class RoomSplitOption;
struct RoomSplitOptionDefaultTypeInternal;
extern RoomSplitOptionDefaultTypeInternal _RoomSplitOption_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RoomSplitOption_class_data_;
class SpawnAttemptResult;
struct SpawnAttemptResultDefaultTypeInternal;
extern SpawnAttemptResultDefaultTypeInternal _SpawnAttemptResult_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnAttemptResult_class_data_;
class SpawnCapacityAnalysis;
struct SpawnCapacityAnalysisDefaultTypeInternal;
extern SpawnCapacityAnalysisDefaultTypeInternal _SpawnCapacityAnalysis_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnCapacityAnalysis_class_data_;
class SpawnConfiguration;
struct SpawnConfigurationDefaultTypeInternal;
extern SpawnConfigurationDefaultTypeInternal _SpawnConfiguration_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnConfiguration_class_data_;
class SpawnConstraint;
struct SpawnConstraintDefaultTypeInternal;
extern SpawnConstraintDefaultTypeInternal _SpawnConstraint_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnConstraint_class_data_;
class SpawnEngine;
struct SpawnEngineDefaultTypeInternal;
extern SpawnEngineDefaultTypeInternal _SpawnEngine_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnEngine_class_data_;
class SpawnEngine_PropertiesEntry_DoNotUse;
struct SpawnEngine_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern SpawnEngine_PropertiesEntry_DoNotUseDefaultTypeInternal _SpawnEngine_PropertiesEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnEngine_PropertiesEntry_DoNotUse_class_data_;
class SpawnEntityRequest;
struct SpawnEntityRequestDefaultTypeInternal;
extern SpawnEntityRequestDefaultTypeInternal _SpawnEntityRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnEntityRequest_class_data_;
class SpawnEntityRequest_SpawnOptionsEntry_DoNotUse;
struct SpawnEntityRequest_SpawnOptionsEntry_DoNotUseDefaultTypeInternal;
extern SpawnEntityRequest_SpawnOptionsEntry_DoNotUseDefaultTypeInternal _SpawnEntityRequest_SpawnOptionsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnEntityRequest_SpawnOptionsEntry_DoNotUse_class_data_;
class SpawnEntityResponse;
struct SpawnEntityResponseDefaultTypeInternal;
extern SpawnEntityResponseDefaultTypeInternal _SpawnEntityResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnEntityResponse_class_data_;
class SpawnFromPatternRequest;
struct SpawnFromPatternRequestDefaultTypeInternal;
extern SpawnFromPatternRequestDefaultTypeInternal _SpawnFromPatternRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternRequest_class_data_;
class SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse;
struct SpawnFromPatternRequest_PatternOptionsEntry_DoNotUseDefaultTypeInternal;
extern SpawnFromPatternRequest_PatternOptionsEntry_DoNotUseDefaultTypeInternal _SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse_class_data_;
class SpawnFromPatternResponse;
struct SpawnFromPatternResponseDefaultTypeInternal;
extern SpawnFromPatternResponseDefaultTypeInternal _SpawnFromPatternResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternResponse_class_data_;
class SpawnHistoryEntry;
struct SpawnHistoryEntryDefaultTypeInternal;
extern SpawnHistoryEntryDefaultTypeInternal _SpawnHistoryEntry_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnHistoryEntry_class_data_;
class SpawnHistoryEntry_DetailsEntry_DoNotUse;
struct SpawnHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal;
extern SpawnHistoryEntry_DetailsEntry_DoNotUseDefaultTypeInternal _SpawnHistoryEntry_DetailsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnHistoryEntry_DetailsEntry_DoNotUse_class_data_;
class SpawnMultipleEntitiesRequest;
struct SpawnMultipleEntitiesRequestDefaultTypeInternal;
extern SpawnMultipleEntitiesRequestDefaultTypeInternal _SpawnMultipleEntitiesRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesRequest_class_data_;
class SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse;
struct SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUseDefaultTypeInternal;
extern SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUseDefaultTypeInternal _SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse_class_data_;
class SpawnMultipleEntitiesResponse;
struct SpawnMultipleEntitiesResponseDefaultTypeInternal;
extern SpawnMultipleEntitiesResponseDefaultTypeInternal _SpawnMultipleEntitiesResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesResponse_class_data_;
class SpawnPattern;
struct SpawnPatternDefaultTypeInternal;
extern SpawnPatternDefaultTypeInternal _SpawnPattern_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnPattern_class_data_;
class SpawnedEntity;
struct SpawnedEntityDefaultTypeInternal;
extern SpawnedEntityDefaultTypeInternal _SpawnedEntity_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnedEntity_class_data_;
class SpawnedEntity_SpawnMetadataEntry_DoNotUse;
struct SpawnedEntity_SpawnMetadataEntry_DoNotUseDefaultTypeInternal;
extern SpawnedEntity_SpawnMetadataEntry_DoNotUseDefaultTypeInternal _SpawnedEntity_SpawnMetadataEntry_DoNotUse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SpawnedEntity_SpawnMetadataEntry_DoNotUse_class_data_;
class UpdateSpawnPatternRequest;
struct UpdateSpawnPatternRequestDefaultTypeInternal;
extern UpdateSpawnPatternRequestDefaultTypeInternal _UpdateSpawnPatternRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateSpawnPatternRequest_class_data_;
class UpdateSpawnPatternResponse;
struct UpdateSpawnPatternResponseDefaultTypeInternal;
extern UpdateSpawnPatternResponseDefaultTypeInternal _UpdateSpawnPatternResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull UpdateSpawnPatternResponse_class_data_;
class ValidateSpawnPositionRequest;
struct ValidateSpawnPositionRequestDefaultTypeInternal;
extern ValidateSpawnPositionRequestDefaultTypeInternal _ValidateSpawnPositionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ValidateSpawnPositionRequest_class_data_;
class ValidateSpawnPositionResponse;
struct ValidateSpawnPositionResponseDefaultTypeInternal;
extern ValidateSpawnPositionResponseDefaultTypeInternal _ValidateSpawnPositionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ValidateSpawnPositionResponse_class_data_;
}  // namespace seshat
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::seshat::ConstraintType_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::ConstraintType>;
template <>
internal::EnumTraitsT<::seshat::PatternType_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::PatternType>;
template <>
internal::EnumTraitsT<::seshat::SpawnTiming_internal_data_>
    internal::EnumTraitsImpl::value<::seshat::SpawnTiming>;
}  // namespace protobuf
}  // namespace google

namespace seshat {
enum SpawnTiming : int {
  SPAWN_TIMING_UNSPECIFIED = 0,
  SPAWN_TIMING_IMMEDIATE = 1,
  SPAWN_TIMING_DELAYED = 2,
  SPAWN_TIMING_TRIGGERED = 3,
  SPAWN_TIMING_CONDITIONAL = 4,
  SpawnTiming_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  SpawnTiming_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t SpawnTiming_internal_data_[];
inline constexpr SpawnTiming SpawnTiming_MIN =
    static_cast<SpawnTiming>(0);
inline constexpr SpawnTiming SpawnTiming_MAX =
    static_cast<SpawnTiming>(4);
inline bool SpawnTiming_IsValid(int value) {
  return 0 <= value && value <= 4;
}
inline constexpr int SpawnTiming_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL SpawnTiming_descriptor();
template <typename T>
const ::std::string& SpawnTiming_Name(T value) {
  static_assert(::std::is_same<T, SpawnTiming>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to SpawnTiming_Name().");
  return SpawnTiming_Name(static_cast<SpawnTiming>(value));
}
template <>
inline const ::std::string& SpawnTiming_Name(SpawnTiming value) {
  return ::google::protobuf::internal::NameOfDenseEnum<SpawnTiming_descriptor, 0, 4>(
      static_cast<int>(value));
}
inline bool SpawnTiming_Parse(
    ::absl::string_view name, SpawnTiming* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<SpawnTiming>(SpawnTiming_descriptor(), name,
                                           value);
}
enum PatternType : int {
  PATTERN_TYPE_UNSPECIFIED = 0,
  PATTERN_TYPE_SCATTERED = 1,
  PATTERN_TYPE_CLUSTERED = 2,
  PATTERN_TYPE_FORMATION = 3,
  PATTERN_TYPE_PERIMETER = 4,
  PATTERN_TYPE_CENTRAL = 5,
  PATTERN_TYPE_TEAM_BASED = 6,
  PATTERN_TYPE_PLAYER_CHOICE = 7,
  PATTERN_TYPE_ENVIRONMENTAL = 8,
  PatternType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  PatternType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t PatternType_internal_data_[];
inline constexpr PatternType PatternType_MIN =
    static_cast<PatternType>(0);
inline constexpr PatternType PatternType_MAX =
    static_cast<PatternType>(8);
inline bool PatternType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int PatternType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL PatternType_descriptor();
template <typename T>
const ::std::string& PatternType_Name(T value) {
  static_assert(::std::is_same<T, PatternType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to PatternType_Name().");
  return PatternType_Name(static_cast<PatternType>(value));
}
template <>
inline const ::std::string& PatternType_Name(PatternType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PatternType_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool PatternType_Parse(
    ::absl::string_view name, PatternType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<PatternType>(PatternType_descriptor(), name,
                                           value);
}
enum ConstraintType : int {
  CONSTRAINT_TYPE_UNSPECIFIED = 0,
  CONSTRAINT_TYPE_SPATIAL = 1,
  CONSTRAINT_TYPE_LINE_OF_SIGHT = 2,
  CONSTRAINT_TYPE_DISTANCE = 3,
  CONSTRAINT_TYPE_AREA_OF_EFFECT = 4,
  CONSTRAINT_TYPE_WALL_PROXIMITY = 5,
  CONSTRAINT_TYPE_ENTITY_TYPE = 6,
  CONSTRAINT_TYPE_ENVIRONMENTAL = 7,
  CONSTRAINT_TYPE_CUSTOM = 8,
  ConstraintType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ConstraintType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ConstraintType_internal_data_[];
inline constexpr ConstraintType ConstraintType_MIN =
    static_cast<ConstraintType>(0);
inline constexpr ConstraintType ConstraintType_MAX =
    static_cast<ConstraintType>(8);
inline bool ConstraintType_IsValid(int value) {
  return 0 <= value && value <= 8;
}
inline constexpr int ConstraintType_ARRAYSIZE = 8 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ConstraintType_descriptor();
template <typename T>
const ::std::string& ConstraintType_Name(T value) {
  static_assert(::std::is_same<T, ConstraintType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to ConstraintType_Name().");
  return ConstraintType_Name(static_cast<ConstraintType>(value));
}
template <>
inline const ::std::string& ConstraintType_Name(ConstraintType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ConstraintType_descriptor, 0, 8>(
      static_cast<int>(value));
}
inline bool ConstraintType_Parse(
    ::absl::string_view name, ConstraintType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ConstraintType>(ConstraintType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class SpawnedEntity_SpawnMetadataEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnedEntity_SpawnMetadataEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnedEntity_SpawnMetadataEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnedEntity_SpawnMetadataEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnedEntity_SpawnMetadataEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 56,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnedEntity_SpawnMetadataEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 70,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SpawnHistoryEntry_DetailsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnHistoryEntry_DetailsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnHistoryEntry_DetailsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnHistoryEntry_DetailsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 54,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnHistoryEntry_DetailsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 67,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SpawnEntityRequest_SpawnOptionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnEntityRequest_SpawnOptionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnEntityRequest_SpawnOptionsEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnEntityRequest_SpawnOptionsEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnEntityRequest_SpawnOptionsEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 60,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnEntityRequest_SpawnOptionsEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class SpawnEngine_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  SpawnEngine_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnEngine_PropertiesEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit SpawnEngine_PropertiesEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_SpawnEngine_PropertiesEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 51,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull SpawnEngine_PropertiesEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class RemoveSpawnConstraintRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RemoveSpawnConstraintRequest) */ {
 public:
  inline RemoveSpawnConstraintRequest() : RemoveSpawnConstraintRequest(nullptr) {}
  ~RemoveSpawnConstraintRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveSpawnConstraintRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveSpawnConstraintRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveSpawnConstraintRequest(::google::protobuf::internal::ConstantInitialized);

  inline RemoveSpawnConstraintRequest(const RemoveSpawnConstraintRequest& from) : RemoveSpawnConstraintRequest(nullptr, from) {}
  inline RemoveSpawnConstraintRequest(RemoveSpawnConstraintRequest&& from) noexcept
      : RemoveSpawnConstraintRequest(nullptr, ::std::move(from)) {}
  inline RemoveSpawnConstraintRequest& operator=(const RemoveSpawnConstraintRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveSpawnConstraintRequest& operator=(RemoveSpawnConstraintRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveSpawnConstraintRequest& default_instance() {
    return *reinterpret_cast<const RemoveSpawnConstraintRequest*>(
        &_RemoveSpawnConstraintRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(RemoveSpawnConstraintRequest& a, RemoveSpawnConstraintRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveSpawnConstraintRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveSpawnConstraintRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveSpawnConstraintRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveSpawnConstraintRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveSpawnConstraintRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveSpawnConstraintRequest& from) { RemoveSpawnConstraintRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveSpawnConstraintRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RemoveSpawnConstraintRequest"; }

 protected:
  explicit RemoveSpawnConstraintRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoveSpawnConstraintRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoveSpawnConstraintRequest& from);
  RemoveSpawnConstraintRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoveSpawnConstraintRequest&& from) noexcept
      : RemoveSpawnConstraintRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kConstraintIdFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string constraint_id = 2 [json_name = "constraintId"];
  void clear_constraint_id() ;
  const ::std::string& constraint_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_constraint_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_constraint_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_constraint_id();
  void set_allocated_constraint_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_constraint_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_constraint_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_constraint_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.RemoveSpawnConstraintRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoveSpawnConstraintRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr constraint_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoveSpawnConstraintRequest_class_data_;
// -------------------------------------------------------------------

class RecommendRoomSplitRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RecommendRoomSplitRequest) */ {
 public:
  inline RecommendRoomSplitRequest() : RecommendRoomSplitRequest(nullptr) {}
  ~RecommendRoomSplitRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecommendRoomSplitRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecommendRoomSplitRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecommendRoomSplitRequest(::google::protobuf::internal::ConstantInitialized);

  inline RecommendRoomSplitRequest(const RecommendRoomSplitRequest& from) : RecommendRoomSplitRequest(nullptr, from) {}
  inline RecommendRoomSplitRequest(RecommendRoomSplitRequest&& from) noexcept
      : RecommendRoomSplitRequest(nullptr, ::std::move(from)) {}
  inline RecommendRoomSplitRequest& operator=(const RecommendRoomSplitRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecommendRoomSplitRequest& operator=(RecommendRoomSplitRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecommendRoomSplitRequest& default_instance() {
    return *reinterpret_cast<const RecommendRoomSplitRequest*>(
        &_RecommendRoomSplitRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(RecommendRoomSplitRequest& a, RecommendRoomSplitRequest& b) { a.Swap(&b); }
  inline void Swap(RecommendRoomSplitRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecommendRoomSplitRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecommendRoomSplitRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RecommendRoomSplitRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecommendRoomSplitRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecommendRoomSplitRequest& from) { RecommendRoomSplitRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RecommendRoomSplitRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RecommendRoomSplitRequest"; }

 protected:
  explicit RecommendRoomSplitRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RecommendRoomSplitRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RecommendRoomSplitRequest& from);
  RecommendRoomSplitRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RecommendRoomSplitRequest&& from) noexcept
      : RecommendRoomSplitRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityTypesFieldNumber = 3,
    kEngineIdFieldNumber = 1,
    kTargetEntityCountFieldNumber = 2,
  };
  // repeated string entity_types = 3 [json_name = "entityTypes"];
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  const ::std::string& entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_types();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // int32 target_entity_count = 2 [json_name = "targetEntityCount"];
  void clear_target_entity_count() ;
  ::int32_t target_entity_count() const;
  void set_target_entity_count(::int32_t value);

  private:
  ::int32_t _internal_target_entity_count() const;
  void _internal_set_target_entity_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.RecommendRoomSplitRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RecommendRoomSplitRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_types_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::int32_t target_entity_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RecommendRoomSplitRequest_class_data_;
// -------------------------------------------------------------------

class PatternParameters_CustomParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  PatternParameters_CustomParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatternParameters_CustomParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit PatternParameters_CustomParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_PatternParameters_CustomParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 63,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull PatternParameters_CustomParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class OptimalPosition_ConstraintScoresEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, float,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>;
  OptimalPosition_ConstraintScoresEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptimalPosition_ConstraintScoresEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit OptimalPosition_ConstraintScoresEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_OptimalPosition_ConstraintScoresEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 56,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull OptimalPosition_ConstraintScoresEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class GetSpawnPatternsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnPatternsRequest) */ {
 public:
  inline GetSpawnPatternsRequest() : GetSpawnPatternsRequest(nullptr) {}
  ~GetSpawnPatternsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnPatternsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnPatternsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnPatternsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnPatternsRequest(const GetSpawnPatternsRequest& from) : GetSpawnPatternsRequest(nullptr, from) {}
  inline GetSpawnPatternsRequest(GetSpawnPatternsRequest&& from) noexcept
      : GetSpawnPatternsRequest(nullptr, ::std::move(from)) {}
  inline GetSpawnPatternsRequest& operator=(const GetSpawnPatternsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnPatternsRequest& operator=(GetSpawnPatternsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnPatternsRequest& default_instance() {
    return *reinterpret_cast<const GetSpawnPatternsRequest*>(
        &_GetSpawnPatternsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(GetSpawnPatternsRequest& a, GetSpawnPatternsRequest& b) { a.Swap(&b); }
  inline void Swap(GetSpawnPatternsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnPatternsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnPatternsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnPatternsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnPatternsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnPatternsRequest& from) { GetSpawnPatternsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnPatternsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnPatternsRequest"; }

 protected:
  explicit GetSpawnPatternsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnPatternsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnPatternsRequest& from);
  GetSpawnPatternsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnPatternsRequest&& from) noexcept
      : GetSpawnPatternsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // .seshat.PatternType type = 2 [json_name = "type"];
  void clear_type() ;
  ::seshat::PatternType type() const;
  void set_type(::seshat::PatternType value);

  private:
  ::seshat::PatternType _internal_type() const;
  void _internal_set_type(::seshat::PatternType value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnPatternsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 48,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnPatternsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnPatternsRequest_class_data_;
// -------------------------------------------------------------------

class GetSpawnHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnHistoryRequest) */ {
 public:
  inline GetSpawnHistoryRequest() : GetSpawnHistoryRequest(nullptr) {}
  ~GetSpawnHistoryRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnHistoryRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnHistoryRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnHistoryRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnHistoryRequest(const GetSpawnHistoryRequest& from) : GetSpawnHistoryRequest(nullptr, from) {}
  inline GetSpawnHistoryRequest(GetSpawnHistoryRequest&& from) noexcept
      : GetSpawnHistoryRequest(nullptr, ::std::move(from)) {}
  inline GetSpawnHistoryRequest& operator=(const GetSpawnHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnHistoryRequest& operator=(GetSpawnHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnHistoryRequest& default_instance() {
    return *reinterpret_cast<const GetSpawnHistoryRequest*>(
        &_GetSpawnHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(GetSpawnHistoryRequest& a, GetSpawnHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(GetSpawnHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnHistoryRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnHistoryRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnHistoryRequest& from) { GetSpawnHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnHistoryRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnHistoryRequest"; }

 protected:
  explicit GetSpawnHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnHistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnHistoryRequest& from);
  GetSpawnHistoryRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnHistoryRequest&& from) noexcept
      : GetSpawnHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityTypesFieldNumber = 5,
    kEngineIdFieldNumber = 1,
    kRoomIdFieldNumber = 2,
    kSinceTimestampFieldNumber = 4,
    kLimitFieldNumber = 3,
  };
  // repeated string entity_types = 5 [json_name = "entityTypes"];
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  const ::std::string& entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_types();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string room_id = 2 [json_name = "roomId"];
  void clear_room_id() ;
  const ::std::string& room_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_room_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_room_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_room_id();
  void set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_room_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_room_id();

  public:
  // int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
  void clear_since_timestamp() ;
  ::int64_t since_timestamp() const;
  void set_since_timestamp(::int64_t value);

  private:
  ::int64_t _internal_since_timestamp() const;
  void _internal_set_since_timestamp(::int64_t value);

  public:
  // int32 limit = 3 [json_name = "limit"];
  void clear_limit() ;
  ::int32_t limit() const;
  void set_limit(::int32_t value);

  private:
  ::int32_t _internal_limit() const;
  void _internal_set_limit(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnHistoryRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_types_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr room_id_;
    ::int64_t since_timestamp_;
    ::int32_t limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnHistoryRequest_class_data_;
// -------------------------------------------------------------------

class GetSpawnEngineRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnEngineRequest) */ {
 public:
  inline GetSpawnEngineRequest() : GetSpawnEngineRequest(nullptr) {}
  ~GetSpawnEngineRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnEngineRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnEngineRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnEngineRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnEngineRequest(const GetSpawnEngineRequest& from) : GetSpawnEngineRequest(nullptr, from) {}
  inline GetSpawnEngineRequest(GetSpawnEngineRequest&& from) noexcept
      : GetSpawnEngineRequest(nullptr, ::std::move(from)) {}
  inline GetSpawnEngineRequest& operator=(const GetSpawnEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnEngineRequest& operator=(GetSpawnEngineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnEngineRequest& default_instance() {
    return *reinterpret_cast<const GetSpawnEngineRequest*>(
        &_GetSpawnEngineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(GetSpawnEngineRequest& a, GetSpawnEngineRequest& b) { a.Swap(&b); }
  inline void Swap(GetSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnEngineRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnEngineRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnEngineRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnEngineRequest& from) { GetSpawnEngineRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnEngineRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnEngineRequest"; }

 protected:
  explicit GetSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnEngineRequest& from);
  GetSpawnEngineRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnEngineRequest&& from) noexcept
      : GetSpawnEngineRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kRoomIdFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string room_id = 2 [json_name = "roomId"];
  void clear_room_id() ;
  const ::std::string& room_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_room_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_room_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_room_id();
  void set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_room_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_room_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnEngineRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnEngineRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr room_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnEngineRequest_class_data_;
// -------------------------------------------------------------------

class GetSpawnConstraintsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnConstraintsRequest) */ {
 public:
  inline GetSpawnConstraintsRequest() : GetSpawnConstraintsRequest(nullptr) {}
  ~GetSpawnConstraintsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnConstraintsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnConstraintsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnConstraintsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnConstraintsRequest(const GetSpawnConstraintsRequest& from) : GetSpawnConstraintsRequest(nullptr, from) {}
  inline GetSpawnConstraintsRequest(GetSpawnConstraintsRequest&& from) noexcept
      : GetSpawnConstraintsRequest(nullptr, ::std::move(from)) {}
  inline GetSpawnConstraintsRequest& operator=(const GetSpawnConstraintsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnConstraintsRequest& operator=(GetSpawnConstraintsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnConstraintsRequest& default_instance() {
    return *reinterpret_cast<const GetSpawnConstraintsRequest*>(
        &_GetSpawnConstraintsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(GetSpawnConstraintsRequest& a, GetSpawnConstraintsRequest& b) { a.Swap(&b); }
  inline void Swap(GetSpawnConstraintsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnConstraintsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnConstraintsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnConstraintsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnConstraintsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnConstraintsRequest& from) { GetSpawnConstraintsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnConstraintsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnConstraintsRequest"; }

 protected:
  explicit GetSpawnConstraintsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnConstraintsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnConstraintsRequest& from);
  GetSpawnConstraintsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnConstraintsRequest&& from) noexcept
      : GetSpawnConstraintsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // .seshat.ConstraintType type = 2 [json_name = "type"];
  void clear_type() ;
  ::seshat::ConstraintType type() const;
  void set_type(::seshat::ConstraintType value);

  private:
  ::seshat::ConstraintType _internal_type() const;
  void _internal_set_type(::seshat::ConstraintType value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnConstraintsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnConstraintsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnConstraintsRequest_class_data_;
// -------------------------------------------------------------------

class GetOptimalSpawnPositionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetOptimalSpawnPositionsRequest) */ {
 public:
  inline GetOptimalSpawnPositionsRequest() : GetOptimalSpawnPositionsRequest(nullptr) {}
  ~GetOptimalSpawnPositionsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOptimalSpawnPositionsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOptimalSpawnPositionsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOptimalSpawnPositionsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetOptimalSpawnPositionsRequest(const GetOptimalSpawnPositionsRequest& from) : GetOptimalSpawnPositionsRequest(nullptr, from) {}
  inline GetOptimalSpawnPositionsRequest(GetOptimalSpawnPositionsRequest&& from) noexcept
      : GetOptimalSpawnPositionsRequest(nullptr, ::std::move(from)) {}
  inline GetOptimalSpawnPositionsRequest& operator=(const GetOptimalSpawnPositionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOptimalSpawnPositionsRequest& operator=(GetOptimalSpawnPositionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOptimalSpawnPositionsRequest& default_instance() {
    return *reinterpret_cast<const GetOptimalSpawnPositionsRequest*>(
        &_GetOptimalSpawnPositionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(GetOptimalSpawnPositionsRequest& a, GetOptimalSpawnPositionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetOptimalSpawnPositionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOptimalSpawnPositionsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOptimalSpawnPositionsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOptimalSpawnPositionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOptimalSpawnPositionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOptimalSpawnPositionsRequest& from) { GetOptimalSpawnPositionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOptimalSpawnPositionsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetOptimalSpawnPositionsRequest"; }

 protected:
  explicit GetOptimalSpawnPositionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetOptimalSpawnPositionsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetOptimalSpawnPositionsRequest& from);
  GetOptimalSpawnPositionsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetOptimalSpawnPositionsRequest&& from) noexcept
      : GetOptimalSpawnPositionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kEntityTypeFieldNumber = 2,
    kPatternIdFieldNumber = 4,
    kCountFieldNumber = 3,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string entity_type = 2 [json_name = "entityType"];
  void clear_entity_type() ;
  const ::std::string& entity_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_type();
  void set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_type();

  public:
  // string pattern_id = 4 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // int32 count = 3 [json_name = "count"];
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetOptimalSpawnPositionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 77,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetOptimalSpawnPositionsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr entity_type_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetOptimalSpawnPositionsRequest_class_data_;
// -------------------------------------------------------------------

class GetActiveSpawnsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetActiveSpawnsRequest) */ {
 public:
  inline GetActiveSpawnsRequest() : GetActiveSpawnsRequest(nullptr) {}
  ~GetActiveSpawnsRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetActiveSpawnsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetActiveSpawnsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveSpawnsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveSpawnsRequest(const GetActiveSpawnsRequest& from) : GetActiveSpawnsRequest(nullptr, from) {}
  inline GetActiveSpawnsRequest(GetActiveSpawnsRequest&& from) noexcept
      : GetActiveSpawnsRequest(nullptr, ::std::move(from)) {}
  inline GetActiveSpawnsRequest& operator=(const GetActiveSpawnsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveSpawnsRequest& operator=(GetActiveSpawnsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveSpawnsRequest& default_instance() {
    return *reinterpret_cast<const GetActiveSpawnsRequest*>(
        &_GetActiveSpawnsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(GetActiveSpawnsRequest& a, GetActiveSpawnsRequest& b) { a.Swap(&b); }
  inline void Swap(GetActiveSpawnsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveSpawnsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveSpawnsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetActiveSpawnsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActiveSpawnsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetActiveSpawnsRequest& from) { GetActiveSpawnsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetActiveSpawnsRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetActiveSpawnsRequest"; }

 protected:
  explicit GetActiveSpawnsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetActiveSpawnsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetActiveSpawnsRequest& from);
  GetActiveSpawnsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetActiveSpawnsRequest&& from) noexcept
      : GetActiveSpawnsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityTypesFieldNumber = 3,
    kEngineIdFieldNumber = 1,
    kRoomIdFieldNumber = 2,
  };
  // repeated string entity_types = 3 [json_name = "entityTypes"];
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  const ::std::string& entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_types();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string room_id = 2 [json_name = "roomId"];
  void clear_room_id() ;
  const ::std::string& room_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_room_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_room_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_room_id();
  void set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_room_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_room_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetActiveSpawnsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetActiveSpawnsRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_types_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr room_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetActiveSpawnsRequest_class_data_;
// -------------------------------------------------------------------

class DespawnEntityRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.DespawnEntityRequest) */ {
 public:
  inline DespawnEntityRequest() : DespawnEntityRequest(nullptr) {}
  ~DespawnEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DespawnEntityRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DespawnEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DespawnEntityRequest(::google::protobuf::internal::ConstantInitialized);

  inline DespawnEntityRequest(const DespawnEntityRequest& from) : DespawnEntityRequest(nullptr, from) {}
  inline DespawnEntityRequest(DespawnEntityRequest&& from) noexcept
      : DespawnEntityRequest(nullptr, ::std::move(from)) {}
  inline DespawnEntityRequest& operator=(const DespawnEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DespawnEntityRequest& operator=(DespawnEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DespawnEntityRequest& default_instance() {
    return *reinterpret_cast<const DespawnEntityRequest*>(
        &_DespawnEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(DespawnEntityRequest& a, DespawnEntityRequest& b) { a.Swap(&b); }
  inline void Swap(DespawnEntityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DespawnEntityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DespawnEntityRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DespawnEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DespawnEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DespawnEntityRequest& from) { DespawnEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DespawnEntityRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.DespawnEntityRequest"; }

 protected:
  explicit DespawnEntityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DespawnEntityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DespawnEntityRequest& from);
  DespawnEntityRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DespawnEntityRequest&& from) noexcept
      : DespawnEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityIdFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // string entity_id = 1 [json_name = "entityId"];
  void clear_entity_id() ;
  const ::std::string& entity_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_id();
  void set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_id();

  public:
  // string reason = 2 [json_name = "reason"];
  void clear_reason() ;
  const ::std::string& reason() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reason();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reason();
  void set_allocated_reason(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reason(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reason();

  public:
  // @@protoc_insertion_point(class_scope:seshat.DespawnEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DespawnEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr entity_id_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DespawnEntityRequest_class_data_;
// -------------------------------------------------------------------

class DeleteSpawnEngineRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.DeleteSpawnEngineRequest) */ {
 public:
  inline DeleteSpawnEngineRequest() : DeleteSpawnEngineRequest(nullptr) {}
  ~DeleteSpawnEngineRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSpawnEngineRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSpawnEngineRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSpawnEngineRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeleteSpawnEngineRequest(const DeleteSpawnEngineRequest& from) : DeleteSpawnEngineRequest(nullptr, from) {}
  inline DeleteSpawnEngineRequest(DeleteSpawnEngineRequest&& from) noexcept
      : DeleteSpawnEngineRequest(nullptr, ::std::move(from)) {}
  inline DeleteSpawnEngineRequest& operator=(const DeleteSpawnEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSpawnEngineRequest& operator=(DeleteSpawnEngineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSpawnEngineRequest& default_instance() {
    return *reinterpret_cast<const DeleteSpawnEngineRequest*>(
        &_DeleteSpawnEngineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(DeleteSpawnEngineRequest& a, DeleteSpawnEngineRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSpawnEngineRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteSpawnEngineRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSpawnEngineRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteSpawnEngineRequest& from) { DeleteSpawnEngineRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteSpawnEngineRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.DeleteSpawnEngineRequest"; }

 protected:
  explicit DeleteSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteSpawnEngineRequest& from);
  DeleteSpawnEngineRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteSpawnEngineRequest&& from) noexcept
      : DeleteSpawnEngineRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kDespawnEntitiesFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // bool despawn_entities = 2 [json_name = "despawnEntities"];
  void clear_despawn_entities() ;
  bool despawn_entities() const;
  void set_despawn_entities(bool value);

  private:
  bool _internal_despawn_entities() const;
  void _internal_set_despawn_entities(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.DeleteSpawnEngineRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteSpawnEngineRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    bool despawn_entities_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteSpawnEngineRequest_class_data_;
// -------------------------------------------------------------------

class ConstraintParameters_CustomParametersEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<std::string, std::string,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                             ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType =
      ::google::protobuf::internal::MapEntry<std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  ConstraintParameters_CustomParametersEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConstraintParameters_CustomParametersEntry_DoNotUse(::google::protobuf::internal::ConstantInitialized);
  explicit ConstraintParameters_CustomParametersEntry_DoNotUse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr const void* PROTOBUF_NONNULL internal_default_instance() {
    return &_ConstraintParameters_CustomParametersEntry_DoNotUse_default_instance_;
  }


  static constexpr auto InternalGenerateClassData_();

 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_seshat_2fspawn_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 66,
                                   2>
      _table_;

  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();
};
extern const ::google::protobuf::internal::ClassDataFull ConstraintParameters_CustomParametersEntry_DoNotUse_class_data_;
// -------------------------------------------------------------------

class AnalyzeSpawnCapacityRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.AnalyzeSpawnCapacityRequest) */ {
 public:
  inline AnalyzeSpawnCapacityRequest() : AnalyzeSpawnCapacityRequest(nullptr) {}
  ~AnalyzeSpawnCapacityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AnalyzeSpawnCapacityRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AnalyzeSpawnCapacityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AnalyzeSpawnCapacityRequest(::google::protobuf::internal::ConstantInitialized);

  inline AnalyzeSpawnCapacityRequest(const AnalyzeSpawnCapacityRequest& from) : AnalyzeSpawnCapacityRequest(nullptr, from) {}
  inline AnalyzeSpawnCapacityRequest(AnalyzeSpawnCapacityRequest&& from) noexcept
      : AnalyzeSpawnCapacityRequest(nullptr, ::std::move(from)) {}
  inline AnalyzeSpawnCapacityRequest& operator=(const AnalyzeSpawnCapacityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnalyzeSpawnCapacityRequest& operator=(AnalyzeSpawnCapacityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnalyzeSpawnCapacityRequest& default_instance() {
    return *reinterpret_cast<const AnalyzeSpawnCapacityRequest*>(
        &_AnalyzeSpawnCapacityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(AnalyzeSpawnCapacityRequest& a, AnalyzeSpawnCapacityRequest& b) { a.Swap(&b); }
  inline void Swap(AnalyzeSpawnCapacityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnalyzeSpawnCapacityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnalyzeSpawnCapacityRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AnalyzeSpawnCapacityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AnalyzeSpawnCapacityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AnalyzeSpawnCapacityRequest& from) { AnalyzeSpawnCapacityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AnalyzeSpawnCapacityRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.AnalyzeSpawnCapacityRequest"; }

 protected:
  explicit AnalyzeSpawnCapacityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AnalyzeSpawnCapacityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AnalyzeSpawnCapacityRequest& from);
  AnalyzeSpawnCapacityRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AnalyzeSpawnCapacityRequest&& from) noexcept
      : AnalyzeSpawnCapacityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityTypesFieldNumber = 2,
    kEngineIdFieldNumber = 1,
  };
  // repeated string entity_types = 2 [json_name = "entityTypes"];
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  const ::std::string& entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_types();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.AnalyzeSpawnCapacityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AnalyzeSpawnCapacityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_types_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AnalyzeSpawnCapacityRequest_class_data_;
// -------------------------------------------------------------------

class ValidateSpawnPositionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ValidateSpawnPositionRequest) */ {
 public:
  inline ValidateSpawnPositionRequest() : ValidateSpawnPositionRequest(nullptr) {}
  ~ValidateSpawnPositionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateSpawnPositionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateSpawnPositionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateSpawnPositionRequest(::google::protobuf::internal::ConstantInitialized);

  inline ValidateSpawnPositionRequest(const ValidateSpawnPositionRequest& from) : ValidateSpawnPositionRequest(nullptr, from) {}
  inline ValidateSpawnPositionRequest(ValidateSpawnPositionRequest&& from) noexcept
      : ValidateSpawnPositionRequest(nullptr, ::std::move(from)) {}
  inline ValidateSpawnPositionRequest& operator=(const ValidateSpawnPositionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateSpawnPositionRequest& operator=(ValidateSpawnPositionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateSpawnPositionRequest& default_instance() {
    return *reinterpret_cast<const ValidateSpawnPositionRequest*>(
        &_ValidateSpawnPositionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(ValidateSpawnPositionRequest& a, ValidateSpawnPositionRequest& b) { a.Swap(&b); }
  inline void Swap(ValidateSpawnPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateSpawnPositionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateSpawnPositionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateSpawnPositionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateSpawnPositionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateSpawnPositionRequest& from) { ValidateSpawnPositionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateSpawnPositionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ValidateSpawnPositionRequest"; }

 protected:
  explicit ValidateSpawnPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ValidateSpawnPositionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ValidateSpawnPositionRequest& from);
  ValidateSpawnPositionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ValidateSpawnPositionRequest&& from) noexcept
      : ValidateSpawnPositionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kEntityTypeFieldNumber = 3,
    kPositionFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string entity_type = 3 [json_name = "entityType"];
  void clear_entity_type() ;
  const ::std::string& entity_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_type();
  void set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_type();

  public:
  // .seshat.Position position = 2 [json_name = "position"];
  bool has_position() const;
  void clear_position() ;
  const ::seshat::Position& position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::seshat::Position& _internal_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // @@protoc_insertion_point(class_scope:seshat.ValidateSpawnPositionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ValidateSpawnPositionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr entity_type_;
    ::seshat::Position* PROTOBUF_NULLABLE position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ValidateSpawnPositionRequest_class_data_;
// -------------------------------------------------------------------

class SpawnMultipleEntitiesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnMultipleEntitiesRequest) */ {
 public:
  inline SpawnMultipleEntitiesRequest() : SpawnMultipleEntitiesRequest(nullptr) {}
  ~SpawnMultipleEntitiesRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnMultipleEntitiesRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnMultipleEntitiesRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnMultipleEntitiesRequest(::google::protobuf::internal::ConstantInitialized);

  inline SpawnMultipleEntitiesRequest(const SpawnMultipleEntitiesRequest& from) : SpawnMultipleEntitiesRequest(nullptr, from) {}
  inline SpawnMultipleEntitiesRequest(SpawnMultipleEntitiesRequest&& from) noexcept
      : SpawnMultipleEntitiesRequest(nullptr, ::std::move(from)) {}
  inline SpawnMultipleEntitiesRequest& operator=(const SpawnMultipleEntitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnMultipleEntitiesRequest& operator=(SpawnMultipleEntitiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnMultipleEntitiesRequest& default_instance() {
    return *reinterpret_cast<const SpawnMultipleEntitiesRequest*>(
        &_SpawnMultipleEntitiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SpawnMultipleEntitiesRequest& a, SpawnMultipleEntitiesRequest& b) { a.Swap(&b); }
  inline void Swap(SpawnMultipleEntitiesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnMultipleEntitiesRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnMultipleEntitiesRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnMultipleEntitiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnMultipleEntitiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnMultipleEntitiesRequest& from) { SpawnMultipleEntitiesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnMultipleEntitiesRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnMultipleEntitiesRequest"; }

 protected:
  explicit SpawnMultipleEntitiesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnMultipleEntitiesRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnMultipleEntitiesRequest& from);
  SpawnMultipleEntitiesRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnMultipleEntitiesRequest&& from) noexcept
      : SpawnMultipleEntitiesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityTypesFieldNumber = 3,
    kSpawnOptionsFieldNumber = 5,
    kEngineIdFieldNumber = 1,
    kPatternIdFieldNumber = 4,
    kCountFieldNumber = 2,
  };
  // repeated string entity_types = 3 [json_name = "entityTypes"];
  int entity_types_size() const;
  private:
  int _internal_entity_types_size() const;

  public:
  void clear_entity_types() ;
  const ::std::string& entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_entity_types();

  public:
  // map<string, string> spawn_options = 5 [json_name = "spawnOptions"];
  int spawn_options_size() const;
  private:
  int _internal_spawn_options_size() const;

  public:
  void clear_spawn_options() ;
  const ::google::protobuf::Map<std::string, std::string>& spawn_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_spawn_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_spawn_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_spawn_options();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string pattern_id = 4 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // int32 count = 2 [json_name = "count"];
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnMultipleEntitiesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5,
                                   1, 88,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnMultipleEntitiesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> entity_types_;
    ::google::protobuf::internal::MapField<SpawnMultipleEntitiesRequest_SpawnOptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        spawn_options_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesRequest_class_data_;
// -------------------------------------------------------------------

class SpawnFromPatternRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnFromPatternRequest) */ {
 public:
  inline SpawnFromPatternRequest() : SpawnFromPatternRequest(nullptr) {}
  ~SpawnFromPatternRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnFromPatternRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnFromPatternRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnFromPatternRequest(::google::protobuf::internal::ConstantInitialized);

  inline SpawnFromPatternRequest(const SpawnFromPatternRequest& from) : SpawnFromPatternRequest(nullptr, from) {}
  inline SpawnFromPatternRequest(SpawnFromPatternRequest&& from) noexcept
      : SpawnFromPatternRequest(nullptr, ::std::move(from)) {}
  inline SpawnFromPatternRequest& operator=(const SpawnFromPatternRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnFromPatternRequest& operator=(SpawnFromPatternRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnFromPatternRequest& default_instance() {
    return *reinterpret_cast<const SpawnFromPatternRequest*>(
        &_SpawnFromPatternRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(SpawnFromPatternRequest& a, SpawnFromPatternRequest& b) { a.Swap(&b); }
  inline void Swap(SpawnFromPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnFromPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnFromPatternRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnFromPatternRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnFromPatternRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnFromPatternRequest& from) { SpawnFromPatternRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnFromPatternRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnFromPatternRequest"; }

 protected:
  explicit SpawnFromPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnFromPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnFromPatternRequest& from);
  SpawnFromPatternRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnFromPatternRequest&& from) noexcept
      : SpawnFromPatternRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternOptionsFieldNumber = 3,
    kEngineIdFieldNumber = 1,
    kPatternIdFieldNumber = 2,
  };
  // map<string, string> pattern_options = 3 [json_name = "patternOptions"];
  int pattern_options_size() const;
  private:
  int _internal_pattern_options_size() const;

  public:
  void clear_pattern_options() ;
  const ::google::protobuf::Map<std::string, std::string>& pattern_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_pattern_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_pattern_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_pattern_options();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string pattern_id = 2 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnFromPatternRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 3,
                                   1, 73,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnFromPatternRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SpawnFromPatternRequest_PatternOptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        pattern_options_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternRequest_class_data_;
// -------------------------------------------------------------------

class SpawnEntityRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnEntityRequest) */ {
 public:
  inline SpawnEntityRequest() : SpawnEntityRequest(nullptr) {}
  ~SpawnEntityRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnEntityRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnEntityRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnEntityRequest(::google::protobuf::internal::ConstantInitialized);

  inline SpawnEntityRequest(const SpawnEntityRequest& from) : SpawnEntityRequest(nullptr, from) {}
  inline SpawnEntityRequest(SpawnEntityRequest&& from) noexcept
      : SpawnEntityRequest(nullptr, ::std::move(from)) {}
  inline SpawnEntityRequest& operator=(const SpawnEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnEntityRequest& operator=(SpawnEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnEntityRequest& default_instance() {
    return *reinterpret_cast<const SpawnEntityRequest*>(
        &_SpawnEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(SpawnEntityRequest& a, SpawnEntityRequest& b) { a.Swap(&b); }
  inline void Swap(SpawnEntityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnEntityRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnEntityRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnEntityRequest& from) { SpawnEntityRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnEntityRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnEntityRequest"; }

 protected:
  explicit SpawnEntityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnEntityRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnEntityRequest& from);
  SpawnEntityRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnEntityRequest&& from) noexcept
      : SpawnEntityRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpawnOptionsFieldNumber = 5,
    kEngineIdFieldNumber = 1,
    kEntityTypeFieldNumber = 2,
    kPatternIdFieldNumber = 4,
    kPreferredPositionFieldNumber = 3,
  };
  // map<string, string> spawn_options = 5 [json_name = "spawnOptions"];
  int spawn_options_size() const;
  private:
  int _internal_spawn_options_size() const;

  public:
  void clear_spawn_options() ;
  const ::google::protobuf::Map<std::string, std::string>& spawn_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_spawn_options();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_spawn_options() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_spawn_options();

  public:
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // string entity_type = 2 [json_name = "entityType"];
  void clear_entity_type() ;
  const ::std::string& entity_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_type();
  void set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_type();

  public:
  // string pattern_id = 4 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // .seshat.Position preferred_position = 3 [json_name = "preferredPosition"];
  bool has_preferred_position() const;
  void clear_preferred_position() ;
  const ::seshat::Position& preferred_position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_preferred_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_preferred_position();
  void set_allocated_preferred_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_preferred_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_preferred_position();

  private:
  const ::seshat::Position& _internal_preferred_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_preferred_position();

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnEntityRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 5,
                                   2, 77,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnEntityRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SpawnEntityRequest_SpawnOptionsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        spawn_options_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::google::protobuf::internal::ArenaStringPtr entity_type_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    ::seshat::Position* PROTOBUF_NULLABLE preferred_position_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnEntityRequest_class_data_;
// -------------------------------------------------------------------

class SpawnConfiguration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnConfiguration) */ {
 public:
  inline SpawnConfiguration() : SpawnConfiguration(nullptr) {}
  ~SpawnConfiguration() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnConfiguration* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnConfiguration));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnConfiguration(::google::protobuf::internal::ConstantInitialized);

  inline SpawnConfiguration(const SpawnConfiguration& from) : SpawnConfiguration(nullptr, from) {}
  inline SpawnConfiguration(SpawnConfiguration&& from) noexcept
      : SpawnConfiguration(nullptr, ::std::move(from)) {}
  inline SpawnConfiguration& operator=(const SpawnConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnConfiguration& operator=(SpawnConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnConfiguration& default_instance() {
    return *reinterpret_cast<const SpawnConfiguration*>(
        &_SpawnConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SpawnConfiguration& a, SpawnConfiguration& b) { a.Swap(&b); }
  inline void Swap(SpawnConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnConfiguration* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnConfiguration* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnConfiguration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnConfiguration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnConfiguration& from) { SpawnConfiguration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnConfiguration* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnConfiguration"; }

 protected:
  explicit SpawnConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnConfiguration(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnConfiguration& from);
  SpawnConfiguration(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnConfiguration&& from) noexcept
      : SpawnConfiguration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpawnTriggersFieldNumber = 8,
    kSpawnIntervalFieldNumber = 3,
    kMaxEntitiesFieldNumber = 1,
    kSpawnRateFieldNumber = 2,
    kRespectCapacityFieldNumber = 4,
    kAllowOverlapFieldNumber = 5,
    kAutoDespawnFieldNumber = 6,
    kTimingFieldNumber = 7,
  };
  // repeated string spawn_triggers = 8 [json_name = "spawnTriggers"];
  int spawn_triggers_size() const;
  private:
  int _internal_spawn_triggers_size() const;

  public:
  void clear_spawn_triggers() ;
  const ::std::string& spawn_triggers(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_spawn_triggers(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_spawn_triggers(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_spawn_triggers();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_spawn_triggers(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& spawn_triggers() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_spawn_triggers();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_spawn_triggers() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_spawn_triggers();

  public:
  // .seshat.Duration spawn_interval = 3 [json_name = "spawnInterval"];
  bool has_spawn_interval() const;
  void clear_spawn_interval() ;
  const ::seshat::Duration& spawn_interval() const;
  [[nodiscard]] ::seshat::Duration* PROTOBUF_NULLABLE release_spawn_interval();
  ::seshat::Duration* PROTOBUF_NONNULL mutable_spawn_interval();
  void set_allocated_spawn_interval(::seshat::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_spawn_interval(::seshat::Duration* PROTOBUF_NULLABLE value);
  ::seshat::Duration* PROTOBUF_NULLABLE unsafe_arena_release_spawn_interval();

  private:
  const ::seshat::Duration& _internal_spawn_interval() const;
  ::seshat::Duration* PROTOBUF_NONNULL _internal_mutable_spawn_interval();

  public:
  // int32 max_entities = 1 [json_name = "maxEntities"];
  void clear_max_entities() ;
  ::int32_t max_entities() const;
  void set_max_entities(::int32_t value);

  private:
  ::int32_t _internal_max_entities() const;
  void _internal_set_max_entities(::int32_t value);

  public:
  // int32 spawn_rate = 2 [json_name = "spawnRate"];
  void clear_spawn_rate() ;
  ::int32_t spawn_rate() const;
  void set_spawn_rate(::int32_t value);

  private:
  ::int32_t _internal_spawn_rate() const;
  void _internal_set_spawn_rate(::int32_t value);

  public:
  // bool respect_capacity = 4 [json_name = "respectCapacity"];
  void clear_respect_capacity() ;
  bool respect_capacity() const;
  void set_respect_capacity(bool value);

  private:
  bool _internal_respect_capacity() const;
  void _internal_set_respect_capacity(bool value);

  public:
  // bool allow_overlap = 5 [json_name = "allowOverlap"];
  void clear_allow_overlap() ;
  bool allow_overlap() const;
  void set_allow_overlap(bool value);

  private:
  bool _internal_allow_overlap() const;
  void _internal_set_allow_overlap(bool value);

  public:
  // bool auto_despawn = 6 [json_name = "autoDespawn"];
  void clear_auto_despawn() ;
  bool auto_despawn() const;
  void set_auto_despawn(bool value);

  private:
  bool _internal_auto_despawn() const;
  void _internal_set_auto_despawn(bool value);

  public:
  // .seshat.SpawnTiming timing = 7 [json_name = "timing"];
  void clear_timing() ;
  ::seshat::SpawnTiming timing() const;
  void set_timing(::seshat::SpawnTiming value);

  private:
  ::seshat::SpawnTiming _internal_timing() const;
  void _internal_set_timing(::seshat::SpawnTiming value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnConfiguration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   1, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnConfiguration& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> spawn_triggers_;
    ::seshat::Duration* PROTOBUF_NULLABLE spawn_interval_;
    ::int32_t max_entities_;
    ::int32_t spawn_rate_;
    bool respect_capacity_;
    bool allow_overlap_;
    bool auto_despawn_;
    int timing_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnConfiguration_class_data_;
// -------------------------------------------------------------------

class SpawnAttemptResult final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnAttemptResult) */ {
 public:
  inline SpawnAttemptResult() : SpawnAttemptResult(nullptr) {}
  ~SpawnAttemptResult() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnAttemptResult* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnAttemptResult));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnAttemptResult(::google::protobuf::internal::ConstantInitialized);

  inline SpawnAttemptResult(const SpawnAttemptResult& from) : SpawnAttemptResult(nullptr, from) {}
  inline SpawnAttemptResult(SpawnAttemptResult&& from) noexcept
      : SpawnAttemptResult(nullptr, ::std::move(from)) {}
  inline SpawnAttemptResult& operator=(const SpawnAttemptResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnAttemptResult& operator=(SpawnAttemptResult&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnAttemptResult& default_instance() {
    return *reinterpret_cast<const SpawnAttemptResult*>(
        &_SpawnAttemptResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SpawnAttemptResult& a, SpawnAttemptResult& b) { a.Swap(&b); }
  inline void Swap(SpawnAttemptResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnAttemptResult* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnAttemptResult* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnAttemptResult>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnAttemptResult& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnAttemptResult& from) { SpawnAttemptResult::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnAttemptResult* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnAttemptResult"; }

 protected:
  explicit SpawnAttemptResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnAttemptResult(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnAttemptResult& from);
  SpawnAttemptResult(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnAttemptResult&& from) noexcept
      : SpawnAttemptResult(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailureReasonsFieldNumber = 4,
    kSpawnDurationFieldNumber = 6,
    kRequestedCountFieldNumber = 1,
    kSuccessfulSpawnsFieldNumber = 2,
    kFailedSpawnsFieldNumber = 3,
    kConstraintSatisfactionFieldNumber = 5,
  };
  // repeated string failure_reasons = 4 [json_name = "failureReasons"];
  int failure_reasons_size() const;
  private:
  int _internal_failure_reasons_size() const;

  public:
  void clear_failure_reasons() ;
  const ::std::string& failure_reasons(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_failure_reasons(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_failure_reasons(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_failure_reasons();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_failure_reasons(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& failure_reasons() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_failure_reasons();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_failure_reasons() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_failure_reasons();

  public:
  // .seshat.Duration spawn_duration = 6 [json_name = "spawnDuration"];
  bool has_spawn_duration() const;
  void clear_spawn_duration() ;
  const ::seshat::Duration& spawn_duration() const;
  [[nodiscard]] ::seshat::Duration* PROTOBUF_NULLABLE release_spawn_duration();
  ::seshat::Duration* PROTOBUF_NONNULL mutable_spawn_duration();
  void set_allocated_spawn_duration(::seshat::Duration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_spawn_duration(::seshat::Duration* PROTOBUF_NULLABLE value);
  ::seshat::Duration* PROTOBUF_NULLABLE unsafe_arena_release_spawn_duration();

  private:
  const ::seshat::Duration& _internal_spawn_duration() const;
  ::seshat::Duration* PROTOBUF_NONNULL _internal_mutable_spawn_duration();

  public:
  // int32 requested_count = 1 [json_name = "requestedCount"];
  void clear_requested_count() ;
  ::int32_t requested_count() const;
  void set_requested_count(::int32_t value);

  private:
  ::int32_t _internal_requested_count() const;
  void _internal_set_requested_count(::int32_t value);

  public:
  // int32 successful_spawns = 2 [json_name = "successfulSpawns"];
  void clear_successful_spawns() ;
  ::int32_t successful_spawns() const;
  void set_successful_spawns(::int32_t value);

  private:
  ::int32_t _internal_successful_spawns() const;
  void _internal_set_successful_spawns(::int32_t value);

  public:
  // int32 failed_spawns = 3 [json_name = "failedSpawns"];
  void clear_failed_spawns() ;
  ::int32_t failed_spawns() const;
  void set_failed_spawns(::int32_t value);

  private:
  ::int32_t _internal_failed_spawns() const;
  void _internal_set_failed_spawns(::int32_t value);

  public:
  // float constraint_satisfaction = 5 [json_name = "constraintSatisfaction"];
  void clear_constraint_satisfaction() ;
  float constraint_satisfaction() const;
  void set_constraint_satisfaction(float value);

  private:
  float _internal_constraint_satisfaction() const;
  void _internal_set_constraint_satisfaction(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnAttemptResult)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 49,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnAttemptResult& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> failure_reasons_;
    ::seshat::Duration* PROTOBUF_NULLABLE spawn_duration_;
    ::int32_t requested_count_;
    ::int32_t successful_spawns_;
    ::int32_t failed_spawns_;
    float constraint_satisfaction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnAttemptResult_class_data_;
// -------------------------------------------------------------------

class PatternParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.PatternParameters) */ {
 public:
  inline PatternParameters() : PatternParameters(nullptr) {}
  ~PatternParameters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PatternParameters* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PatternParameters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PatternParameters(::google::protobuf::internal::ConstantInitialized);

  inline PatternParameters(const PatternParameters& from) : PatternParameters(nullptr, from) {}
  inline PatternParameters(PatternParameters&& from) noexcept
      : PatternParameters(nullptr, ::std::move(from)) {}
  inline PatternParameters& operator=(const PatternParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline PatternParameters& operator=(PatternParameters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PatternParameters& default_instance() {
    return *reinterpret_cast<const PatternParameters*>(
        &_PatternParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PatternParameters& a, PatternParameters& b) { a.Swap(&b); }
  inline void Swap(PatternParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PatternParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PatternParameters* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PatternParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PatternParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PatternParameters& from) { PatternParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PatternParameters* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.PatternParameters"; }

 protected:
  explicit PatternParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  PatternParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const PatternParameters& from);
  PatternParameters(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, PatternParameters&& from) noexcept
      : PatternParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPreferredFeaturesFieldNumber = 12,
    kAvoidedFeaturesFieldNumber = 13,
    kCustomParametersFieldNumber = 14,
    kFormationShapeFieldNumber = 6,
    kFormationFacingFieldNumber = 8,
    kMinDistanceFieldNumber = 1,
    kMaxDistanceFieldNumber = 2,
    kClusterSizeFieldNumber = 3,
    kClusterRadiusFieldNumber = 4,
    kClusterSeparationFieldNumber = 5,
    kFormationSpacingFieldNumber = 7,
    kTeamCountFieldNumber = 9,
    kTeamSizeFieldNumber = 10,
    kTeamSeparationFieldNumber = 11,
  };
  // repeated string preferred_features = 12 [json_name = "preferredFeatures"];
  int preferred_features_size() const;
  private:
  int _internal_preferred_features_size() const;

  public:
  void clear_preferred_features() ;
  const ::std::string& preferred_features(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_preferred_features(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_preferred_features(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_preferred_features();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_preferred_features(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& preferred_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_preferred_features();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_preferred_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_preferred_features();

  public:
  // repeated string avoided_features = 13 [json_name = "avoidedFeatures"];
  int avoided_features_size() const;
  private:
  int _internal_avoided_features_size() const;

  public:
  void clear_avoided_features() ;
  const ::std::string& avoided_features(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_avoided_features(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_avoided_features(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_avoided_features();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_avoided_features(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& avoided_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_avoided_features();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_avoided_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_avoided_features();

  public:
  // map<string, string> custom_parameters = 14 [json_name = "customParameters"];
  int custom_parameters_size() const;
  private:
  int _internal_custom_parameters_size() const;

  public:
  void clear_custom_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& custom_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_custom_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_custom_parameters();

  public:
  // string formation_shape = 6 [json_name = "formationShape"];
  void clear_formation_shape() ;
  const ::std::string& formation_shape() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_formation_shape(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_formation_shape();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_formation_shape();
  void set_allocated_formation_shape(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_formation_shape() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_formation_shape(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_formation_shape();

  public:
  // string formation_facing = 8 [json_name = "formationFacing"];
  void clear_formation_facing() ;
  const ::std::string& formation_facing() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_formation_facing(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_formation_facing();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_formation_facing();
  void set_allocated_formation_facing(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_formation_facing() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_formation_facing(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_formation_facing();

  public:
  // int32 min_distance = 1 [json_name = "minDistance"];
  void clear_min_distance() ;
  ::int32_t min_distance() const;
  void set_min_distance(::int32_t value);

  private:
  ::int32_t _internal_min_distance() const;
  void _internal_set_min_distance(::int32_t value);

  public:
  // int32 max_distance = 2 [json_name = "maxDistance"];
  void clear_max_distance() ;
  ::int32_t max_distance() const;
  void set_max_distance(::int32_t value);

  private:
  ::int32_t _internal_max_distance() const;
  void _internal_set_max_distance(::int32_t value);

  public:
  // int32 cluster_size = 3 [json_name = "clusterSize"];
  void clear_cluster_size() ;
  ::int32_t cluster_size() const;
  void set_cluster_size(::int32_t value);

  private:
  ::int32_t _internal_cluster_size() const;
  void _internal_set_cluster_size(::int32_t value);

  public:
  // int32 cluster_radius = 4 [json_name = "clusterRadius"];
  void clear_cluster_radius() ;
  ::int32_t cluster_radius() const;
  void set_cluster_radius(::int32_t value);

  private:
  ::int32_t _internal_cluster_radius() const;
  void _internal_set_cluster_radius(::int32_t value);

  public:
  // int32 cluster_separation = 5 [json_name = "clusterSeparation"];
  void clear_cluster_separation() ;
  ::int32_t cluster_separation() const;
  void set_cluster_separation(::int32_t value);

  private:
  ::int32_t _internal_cluster_separation() const;
  void _internal_set_cluster_separation(::int32_t value);

  public:
  // int32 formation_spacing = 7 [json_name = "formationSpacing"];
  void clear_formation_spacing() ;
  ::int32_t formation_spacing() const;
  void set_formation_spacing(::int32_t value);

  private:
  ::int32_t _internal_formation_spacing() const;
  void _internal_set_formation_spacing(::int32_t value);

  public:
  // int32 team_count = 9 [json_name = "teamCount"];
  void clear_team_count() ;
  ::int32_t team_count() const;
  void set_team_count(::int32_t value);

  private:
  ::int32_t _internal_team_count() const;
  void _internal_set_team_count(::int32_t value);

  public:
  // int32 team_size = 10 [json_name = "teamSize"];
  void clear_team_size() ;
  ::int32_t team_size() const;
  void set_team_size(::int32_t value);

  private:
  ::int32_t _internal_team_size() const;
  void _internal_set_team_size(::int32_t value);

  public:
  // int32 team_separation = 11 [json_name = "teamSeparation"];
  void clear_team_separation() ;
  ::int32_t team_separation() const;
  void set_team_separation(::int32_t value);

  private:
  ::int32_t _internal_team_separation() const;
  void _internal_set_team_separation(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.PatternParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 14,
                                   1, 123,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const PatternParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> preferred_features_;
    ::google::protobuf::RepeatedPtrField<::std::string> avoided_features_;
    ::google::protobuf::internal::MapField<PatternParameters_CustomParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_parameters_;
    ::google::protobuf::internal::ArenaStringPtr formation_shape_;
    ::google::protobuf::internal::ArenaStringPtr formation_facing_;
    ::int32_t min_distance_;
    ::int32_t max_distance_;
    ::int32_t cluster_size_;
    ::int32_t cluster_radius_;
    ::int32_t cluster_separation_;
    ::int32_t formation_spacing_;
    ::int32_t team_count_;
    ::int32_t team_size_;
    ::int32_t team_separation_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull PatternParameters_class_data_;
// -------------------------------------------------------------------

class OptimalPosition final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.OptimalPosition) */ {
 public:
  inline OptimalPosition() : OptimalPosition(nullptr) {}
  ~OptimalPosition() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OptimalPosition* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OptimalPosition));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptimalPosition(::google::protobuf::internal::ConstantInitialized);

  inline OptimalPosition(const OptimalPosition& from) : OptimalPosition(nullptr, from) {}
  inline OptimalPosition(OptimalPosition&& from) noexcept
      : OptimalPosition(nullptr, ::std::move(from)) {}
  inline OptimalPosition& operator=(const OptimalPosition& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptimalPosition& operator=(OptimalPosition&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptimalPosition& default_instance() {
    return *reinterpret_cast<const OptimalPosition*>(
        &_OptimalPosition_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(OptimalPosition& a, OptimalPosition& b) { a.Swap(&b); }
  inline void Swap(OptimalPosition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptimalPosition* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptimalPosition* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OptimalPosition>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptimalPosition& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptimalPosition& from) { OptimalPosition::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OptimalPosition* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.OptimalPosition"; }

 protected:
  explicit OptimalPosition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  OptimalPosition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const OptimalPosition& from);
  OptimalPosition(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, OptimalPosition&& from) noexcept
      : OptimalPosition(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstraintScoresFieldNumber = 3,
    kBenefitsFieldNumber = 4,
    kDrawbacksFieldNumber = 5,
    kPositionFieldNumber = 1,
    kScoreFieldNumber = 2,
  };
  // map<string, float> constraint_scores = 3 [json_name = "constraintScores"];
  int constraint_scores_size() const;
  private:
  int _internal_constraint_scores_size() const;

  public:
  void clear_constraint_scores() ;
  const ::google::protobuf::Map<std::string, float>& constraint_scores() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL mutable_constraint_scores();

  private:
  const ::google::protobuf::Map<std::string, float>& _internal_constraint_scores() const;
  ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL _internal_mutable_constraint_scores();

  public:
  // repeated string benefits = 4 [json_name = "benefits"];
  int benefits_size() const;
  private:
  int _internal_benefits_size() const;

  public:
  void clear_benefits() ;
  const ::std::string& benefits(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_benefits(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_benefits(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_benefits();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_benefits(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& benefits() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_benefits();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_benefits() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_benefits();

  public:
  // repeated string drawbacks = 5 [json_name = "drawbacks"];
  int drawbacks_size() const;
  private:
  int _internal_drawbacks_size() const;

  public:
  void clear_drawbacks() ;
  const ::std::string& drawbacks(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_drawbacks(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_drawbacks(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_drawbacks();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_drawbacks(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& drawbacks() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_drawbacks();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_drawbacks() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_drawbacks();

  public:
  // .seshat.Position position = 1 [json_name = "position"];
  bool has_position() const;
  void clear_position() ;
  const ::seshat::Position& position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::seshat::Position& _internal_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // float score = 2 [json_name = "score"];
  void clear_score() ;
  float score() const;
  void set_score(float value);

  private:
  float _internal_score() const;
  void _internal_set_score(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.OptimalPosition)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const OptimalPosition& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<OptimalPosition_ConstraintScoresEntry_DoNotUse, std::string, float,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>
        constraint_scores_;
    ::google::protobuf::RepeatedPtrField<::std::string> benefits_;
    ::google::protobuf::RepeatedPtrField<::std::string> drawbacks_;
    ::seshat::Position* PROTOBUF_NULLABLE position_;
    float score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull OptimalPosition_class_data_;
// -------------------------------------------------------------------

class EntityTypeCapacity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.EntityTypeCapacity) */ {
 public:
  inline EntityTypeCapacity() : EntityTypeCapacity(nullptr) {}
  ~EntityTypeCapacity() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(EntityTypeCapacity* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(EntityTypeCapacity));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EntityTypeCapacity(::google::protobuf::internal::ConstantInitialized);

  inline EntityTypeCapacity(const EntityTypeCapacity& from) : EntityTypeCapacity(nullptr, from) {}
  inline EntityTypeCapacity(EntityTypeCapacity&& from) noexcept
      : EntityTypeCapacity(nullptr, ::std::move(from)) {}
  inline EntityTypeCapacity& operator=(const EntityTypeCapacity& from) {
    CopyFrom(from);
    return *this;
  }
  inline EntityTypeCapacity& operator=(EntityTypeCapacity&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EntityTypeCapacity& default_instance() {
    return *reinterpret_cast<const EntityTypeCapacity*>(
        &_EntityTypeCapacity_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(EntityTypeCapacity& a, EntityTypeCapacity& b) { a.Swap(&b); }
  inline void Swap(EntityTypeCapacity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EntityTypeCapacity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EntityTypeCapacity* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<EntityTypeCapacity>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EntityTypeCapacity& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EntityTypeCapacity& from) { EntityTypeCapacity::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(EntityTypeCapacity* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.EntityTypeCapacity"; }

 protected:
  explicit EntityTypeCapacity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  EntityTypeCapacity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const EntityTypeCapacity& from);
  EntityTypeCapacity(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, EntityTypeCapacity&& from) noexcept
      : EntityTypeCapacity(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvailablePositionsFieldNumber = 5,
    kEntityTypeFieldNumber = 1,
    kCurrentCountFieldNumber = 2,
    kMaxCapacityFieldNumber = 3,
    kRecommendedMaxFieldNumber = 4,
  };
  // repeated .seshat.Position available_positions = 5 [json_name = "availablePositions"];
  int available_positions_size() const;
  private:
  int _internal_available_positions_size() const;

  public:
  void clear_available_positions() ;
  ::seshat::Position* PROTOBUF_NONNULL mutable_available_positions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL mutable_available_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& _internal_available_positions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL _internal_mutable_available_positions();
  public:
  const ::seshat::Position& available_positions(int index) const;
  ::seshat::Position* PROTOBUF_NONNULL add_available_positions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& available_positions() const;
  // string entity_type = 1 [json_name = "entityType"];
  void clear_entity_type() ;
  const ::std::string& entity_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_entity_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_entity_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_entity_type();
  void set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_entity_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_entity_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_entity_type();

  public:
  // int32 current_count = 2 [json_name = "currentCount"];
  void clear_current_count() ;
  ::int32_t current_count() const;
  void set_current_count(::int32_t value);

  private:
  ::int32_t _internal_current_count() const;
  void _internal_set_current_count(::int32_t value);

  public:
  // int32 max_capacity = 3 [json_name = "maxCapacity"];
  void clear_max_capacity() ;
  ::int32_t max_capacity() const;
  void set_max_capacity(::int32_t value);

  private:
  ::int32_t _internal_max_capacity() const;
  void _internal_set_max_capacity(::int32_t value);

  public:
  // int32 recommended_max = 4 [json_name = "recommendedMax"];
  void clear_recommended_max() ;
  ::int32_t recommended_max() const;
  void set_recommended_max(::int32_t value);

  private:
  ::int32_t _internal_recommended_max() const;
  void _internal_set_recommended_max(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.EntityTypeCapacity)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 45,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const EntityTypeCapacity& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Position > available_positions_;
    ::google::protobuf::internal::ArenaStringPtr entity_type_;
    ::int32_t current_count_;
    ::int32_t max_capacity_;
    ::int32_t recommended_max_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull EntityTypeCapacity_class_data_;
// -------------------------------------------------------------------

class ConstraintParameters final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ConstraintParameters) */ {
 public:
  inline ConstraintParameters() : ConstraintParameters(nullptr) {}
  ~ConstraintParameters() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConstraintParameters* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConstraintParameters));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConstraintParameters(::google::protobuf::internal::ConstantInitialized);

  inline ConstraintParameters(const ConstraintParameters& from) : ConstraintParameters(nullptr, from) {}
  inline ConstraintParameters(ConstraintParameters&& from) noexcept
      : ConstraintParameters(nullptr, ::std::move(from)) {}
  inline ConstraintParameters& operator=(const ConstraintParameters& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstraintParameters& operator=(ConstraintParameters&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConstraintParameters& default_instance() {
    return *reinterpret_cast<const ConstraintParameters*>(
        &_ConstraintParameters_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ConstraintParameters& a, ConstraintParameters& b) { a.Swap(&b); }
  inline void Swap(ConstraintParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConstraintParameters* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConstraintParameters* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConstraintParameters>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConstraintParameters& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConstraintParameters& from) { ConstraintParameters::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConstraintParameters* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ConstraintParameters"; }

 protected:
  explicit ConstraintParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConstraintParameters(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConstraintParameters& from);
  ConstraintParameters(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConstraintParameters&& from) noexcept
      : ConstraintParameters(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForbiddenPositionsFieldNumber = 3,
    kRequiredPositionsFieldNumber = 4,
    kLineOfSightTargetsFieldNumber = 7,
    kDistanceEntityTypesFieldNumber = 12,
    kRequiredFeaturesFieldNumber = 15,
    kAvoidedFeaturesFieldNumber = 16,
    kCustomParametersFieldNumber = 17,
    kMinPositionFieldNumber = 1,
    kMaxPositionFieldNumber = 2,
    kRequiresLineOfSightToPlayerFieldNumber = 5,
    kRequiresLineOfSightToCenterFieldNumber = 6,
    kMinDistanceFromPlayerFieldNumber = 8,
    kMaxDistanceFromPlayerFieldNumber = 9,
    kMinDistanceFromEntitiesFieldNumber = 10,
    kMaxDistanceFromEntitiesFieldNumber = 11,
    kMinDistanceFromWallsFieldNumber = 13,
    kMaxDistanceFromWallsFieldNumber = 14,
  };
  // repeated .seshat.Position forbidden_positions = 3 [json_name = "forbiddenPositions"];
  int forbidden_positions_size() const;
  private:
  int _internal_forbidden_positions_size() const;

  public:
  void clear_forbidden_positions() ;
  ::seshat::Position* PROTOBUF_NONNULL mutable_forbidden_positions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL mutable_forbidden_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& _internal_forbidden_positions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL _internal_mutable_forbidden_positions();
  public:
  const ::seshat::Position& forbidden_positions(int index) const;
  ::seshat::Position* PROTOBUF_NONNULL add_forbidden_positions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& forbidden_positions() const;
  // repeated .seshat.Position required_positions = 4 [json_name = "requiredPositions"];
  int required_positions_size() const;
  private:
  int _internal_required_positions_size() const;

  public:
  void clear_required_positions() ;
  ::seshat::Position* PROTOBUF_NONNULL mutable_required_positions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL mutable_required_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& _internal_required_positions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL _internal_mutable_required_positions();
  public:
  const ::seshat::Position& required_positions(int index) const;
  ::seshat::Position* PROTOBUF_NONNULL add_required_positions();
  const ::google::protobuf::RepeatedPtrField<::seshat::Position>& required_positions() const;
  // repeated string line_of_sight_targets = 7 [json_name = "lineOfSightTargets"];
  int line_of_sight_targets_size() const;
  private:
  int _internal_line_of_sight_targets_size() const;

  public:
  void clear_line_of_sight_targets() ;
  const ::std::string& line_of_sight_targets(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_line_of_sight_targets(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_line_of_sight_targets(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_line_of_sight_targets();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_line_of_sight_targets(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& line_of_sight_targets() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_line_of_sight_targets();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_line_of_sight_targets() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_line_of_sight_targets();

  public:
  // repeated string distance_entity_types = 12 [json_name = "distanceEntityTypes"];
  int distance_entity_types_size() const;
  private:
  int _internal_distance_entity_types_size() const;

  public:
  void clear_distance_entity_types() ;
  const ::std::string& distance_entity_types(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_distance_entity_types(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_distance_entity_types(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_distance_entity_types();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_distance_entity_types(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& distance_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_distance_entity_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_distance_entity_types() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_distance_entity_types();

  public:
  // repeated string required_features = 15 [json_name = "requiredFeatures"];
  int required_features_size() const;
  private:
  int _internal_required_features_size() const;

  public:
  void clear_required_features() ;
  const ::std::string& required_features(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_required_features(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_required_features(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_required_features();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_required_features(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& required_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_required_features();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_required_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_required_features();

  public:
  // repeated string avoided_features = 16 [json_name = "avoidedFeatures"];
  int avoided_features_size() const;
  private:
  int _internal_avoided_features_size() const;

  public:
  void clear_avoided_features() ;
  const ::std::string& avoided_features(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_avoided_features(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_avoided_features(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_avoided_features();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_avoided_features(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& avoided_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_avoided_features();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_avoided_features() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_avoided_features();

  public:
  // map<string, string> custom_parameters = 17 [json_name = "customParameters"];
  int custom_parameters_size() const;
  private:
  int _internal_custom_parameters_size() const;

  public:
  void clear_custom_parameters() ;
  const ::google::protobuf::Map<std::string, std::string>& custom_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_custom_parameters();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_custom_parameters() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_custom_parameters();

  public:
  // .seshat.Position min_position = 1 [json_name = "minPosition"];
  bool has_min_position() const;
  void clear_min_position() ;
  const ::seshat::Position& min_position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_min_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_min_position();
  void set_allocated_min_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_min_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_min_position();

  private:
  const ::seshat::Position& _internal_min_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_min_position();

  public:
  // .seshat.Position max_position = 2 [json_name = "maxPosition"];
  bool has_max_position() const;
  void clear_max_position() ;
  const ::seshat::Position& max_position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_max_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_max_position();
  void set_allocated_max_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_max_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_max_position();

  private:
  const ::seshat::Position& _internal_max_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_max_position();

  public:
  // bool requires_line_of_sight_to_player = 5 [json_name = "requiresLineOfSightToPlayer"];
  void clear_requires_line_of_sight_to_player() ;
  bool requires_line_of_sight_to_player() const;
  void set_requires_line_of_sight_to_player(bool value);

  private:
  bool _internal_requires_line_of_sight_to_player() const;
  void _internal_set_requires_line_of_sight_to_player(bool value);

  public:
  // bool requires_line_of_sight_to_center = 6 [json_name = "requiresLineOfSightToCenter"];
  void clear_requires_line_of_sight_to_center() ;
  bool requires_line_of_sight_to_center() const;
  void set_requires_line_of_sight_to_center(bool value);

  private:
  bool _internal_requires_line_of_sight_to_center() const;
  void _internal_set_requires_line_of_sight_to_center(bool value);

  public:
  // int32 min_distance_from_player = 8 [json_name = "minDistanceFromPlayer"];
  void clear_min_distance_from_player() ;
  ::int32_t min_distance_from_player() const;
  void set_min_distance_from_player(::int32_t value);

  private:
  ::int32_t _internal_min_distance_from_player() const;
  void _internal_set_min_distance_from_player(::int32_t value);

  public:
  // int32 max_distance_from_player = 9 [json_name = "maxDistanceFromPlayer"];
  void clear_max_distance_from_player() ;
  ::int32_t max_distance_from_player() const;
  void set_max_distance_from_player(::int32_t value);

  private:
  ::int32_t _internal_max_distance_from_player() const;
  void _internal_set_max_distance_from_player(::int32_t value);

  public:
  // int32 min_distance_from_entities = 10 [json_name = "minDistanceFromEntities"];
  void clear_min_distance_from_entities() ;
  ::int32_t min_distance_from_entities() const;
  void set_min_distance_from_entities(::int32_t value);

  private:
  ::int32_t _internal_min_distance_from_entities() const;
  void _internal_set_min_distance_from_entities(::int32_t value);

  public:
  // int32 max_distance_from_entities = 11 [json_name = "maxDistanceFromEntities"];
  void clear_max_distance_from_entities() ;
  ::int32_t max_distance_from_entities() const;
  void set_max_distance_from_entities(::int32_t value);

  private:
  ::int32_t _internal_max_distance_from_entities() const;
  void _internal_set_max_distance_from_entities(::int32_t value);

  public:
  // int32 min_distance_from_walls = 13 [json_name = "minDistanceFromWalls"];
  void clear_min_distance_from_walls() ;
  ::int32_t min_distance_from_walls() const;
  void set_min_distance_from_walls(::int32_t value);

  private:
  ::int32_t _internal_min_distance_from_walls() const;
  void _internal_set_min_distance_from_walls(::int32_t value);

  public:
  // int32 max_distance_from_walls = 14 [json_name = "maxDistanceFromWalls"];
  void clear_max_distance_from_walls() ;
  ::int32_t max_distance_from_walls() const;
  void set_max_distance_from_walls(::int32_t value);

  private:
  ::int32_t _internal_max_distance_from_walls() const;
  void _internal_set_max_distance_from_walls(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ConstraintParameters)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 17,
                                   5, 144,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConstraintParameters& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Position > forbidden_positions_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Position > required_positions_;
    ::google::protobuf::RepeatedPtrField<::std::string> line_of_sight_targets_;
    ::google::protobuf::RepeatedPtrField<::std::string> distance_entity_types_;
    ::google::protobuf::RepeatedPtrField<::std::string> required_features_;
    ::google::protobuf::RepeatedPtrField<::std::string> avoided_features_;
    ::google::protobuf::internal::MapField<ConstraintParameters_CustomParametersEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        custom_parameters_;
    ::seshat::Position* PROTOBUF_NULLABLE min_position_;
    ::seshat::Position* PROTOBUF_NULLABLE max_position_;
    bool requires_line_of_sight_to_player_;
    bool requires_line_of_sight_to_center_;
    ::int32_t min_distance_from_player_;
    ::int32_t max_distance_from_player_;
    ::int32_t min_distance_from_entities_;
    ::int32_t max_distance_from_entities_;
    ::int32_t min_distance_from_walls_;
    ::int32_t max_distance_from_walls_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConstraintParameters_class_data_;
// -------------------------------------------------------------------

class SpawnedEntity final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnedEntity) */ {
 public:
  inline SpawnedEntity() : SpawnedEntity(nullptr) {}
  ~SpawnedEntity() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnedEntity* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnedEntity));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnedEntity(::google::protobuf::internal::ConstantInitialized);

  inline SpawnedEntity(const SpawnedEntity& from) : SpawnedEntity(nullptr, from) {}
  inline SpawnedEntity(SpawnedEntity&& from) noexcept
      : SpawnedEntity(nullptr, ::std::move(from)) {}
  inline SpawnedEntity& operator=(const SpawnedEntity& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnedEntity& operator=(SpawnedEntity&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnedEntity& default_instance() {
    return *reinterpret_cast<const SpawnedEntity*>(
        &_SpawnedEntity_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(SpawnedEntity& a, SpawnedEntity& b) { a.Swap(&b); }
  inline void Swap(SpawnedEntity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnedEntity* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnedEntity* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnedEntity>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnedEntity& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnedEntity& from) { SpawnedEntity::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnedEntity* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnedEntity"; }

 protected:
  explicit SpawnedEntity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnedEntity(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnedEntity& from);
  SpawnedEntity(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnedEntity&& from) noexcept
      : SpawnedEntity(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpawnMetadataFieldNumber = 6,
    kSpawnEngineIdFieldNumber = 3,
    kPatternIdFieldNumber = 4,
    kEntityFieldNumber = 1,
    kPositionFieldNumber = 2,
    kSpawnTimestampFieldNumber = 5,
  };
  // map<string, string> spawn_metadata = 6 [json_name = "spawnMetadata"];
  int spawn_metadata_size() const;
  private:
  int _internal_spawn_metadata_size() const;

  public:
  void clear_spawn_metadata() ;
  const ::google::protobuf::Map<std::string, std::string>& spawn_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_spawn_metadata();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_spawn_metadata() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_spawn_metadata();

  public:
  // string spawn_engine_id = 3 [json_name = "spawnEngineId"];
  void clear_spawn_engine_id() ;
  const ::std::string& spawn_engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_spawn_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_spawn_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_spawn_engine_id();
  void set_allocated_spawn_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_spawn_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_spawn_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_spawn_engine_id();

  public:
  // string pattern_id = 4 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // .seshat.Entity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::seshat::Entity& entity() const;
  [[nodiscard]] ::seshat::Entity* PROTOBUF_NULLABLE release_entity();
  ::seshat::Entity* PROTOBUF_NONNULL mutable_entity();
  void set_allocated_entity(::seshat::Entity* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_entity(::seshat::Entity* PROTOBUF_NULLABLE value);
  ::seshat::Entity* PROTOBUF_NULLABLE unsafe_arena_release_entity();

  private:
  const ::seshat::Entity& _internal_entity() const;
  ::seshat::Entity* PROTOBUF_NONNULL _internal_mutable_entity();

  public:
  // .seshat.Position position = 2 [json_name = "position"];
  bool has_position() const;
  void clear_position() ;
  const ::seshat::Position& position() const;
  [[nodiscard]] ::seshat::Position* PROTOBUF_NULLABLE release_position();
  ::seshat::Position* PROTOBUF_NONNULL mutable_position();
  void set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value);
  ::seshat::Position* PROTOBUF_NULLABLE unsafe_arena_release_position();

  private:
  const ::seshat::Position& _internal_position() const;
  ::seshat::Position* PROTOBUF_NONNULL _internal_mutable_position();

  public:
  // int64 spawn_timestamp = 5 [json_name = "spawnTimestamp"];
  void clear_spawn_timestamp() ;
  ::int64_t spawn_timestamp() const;
  void set_spawn_timestamp(::int64_t value);

  private:
  ::int64_t _internal_spawn_timestamp() const;
  void _internal_set_spawn_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnedEntity)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   3, 68,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnedEntity& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SpawnedEntity_SpawnMetadataEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        spawn_metadata_;
    ::google::protobuf::internal::ArenaStringPtr spawn_engine_id_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    ::seshat::Entity* PROTOBUF_NULLABLE entity_;
    ::seshat::Position* PROTOBUF_NULLABLE position_;
    ::int64_t spawn_timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnedEntity_class_data_;
// -------------------------------------------------------------------

class SpawnConstraint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnConstraint) */ {
 public:
  inline SpawnConstraint() : SpawnConstraint(nullptr) {}
  ~SpawnConstraint() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnConstraint* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnConstraint));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnConstraint(::google::protobuf::internal::ConstantInitialized);

  inline SpawnConstraint(const SpawnConstraint& from) : SpawnConstraint(nullptr, from) {}
  inline SpawnConstraint(SpawnConstraint&& from) noexcept
      : SpawnConstraint(nullptr, ::std::move(from)) {}
  inline SpawnConstraint& operator=(const SpawnConstraint& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnConstraint& operator=(SpawnConstraint&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnConstraint& default_instance() {
    return *reinterpret_cast<const SpawnConstraint*>(
        &_SpawnConstraint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SpawnConstraint& a, SpawnConstraint& b) { a.Swap(&b); }
  inline void Swap(SpawnConstraint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnConstraint* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnConstraint* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnConstraint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnConstraint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnConstraint& from) { SpawnConstraint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnConstraint* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnConstraint"; }

 protected:
  explicit SpawnConstraint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnConstraint(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnConstraint& from);
  SpawnConstraint(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnConstraint&& from) noexcept
      : SpawnConstraint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kParametersFieldNumber = 4,
    kTypeFieldNumber = 3,
    kIsHardConstraintFieldNumber = 5,
    kViolationPenaltyFieldNumber = 6,
  };
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // .seshat.ConstraintParameters parameters = 4 [json_name = "parameters"];
  bool has_parameters() const;
  void clear_parameters() ;
  const ::seshat::ConstraintParameters& parameters() const;
  [[nodiscard]] ::seshat::ConstraintParameters* PROTOBUF_NULLABLE release_parameters();
  ::seshat::ConstraintParameters* PROTOBUF_NONNULL mutable_parameters();
  void set_allocated_parameters(::seshat::ConstraintParameters* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_parameters(::seshat::ConstraintParameters* PROTOBUF_NULLABLE value);
  ::seshat::ConstraintParameters* PROTOBUF_NULLABLE unsafe_arena_release_parameters();

  private:
  const ::seshat::ConstraintParameters& _internal_parameters() const;
  ::seshat::ConstraintParameters* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // .seshat.ConstraintType type = 3 [json_name = "type"];
  void clear_type() ;
  ::seshat::ConstraintType type() const;
  void set_type(::seshat::ConstraintType value);

  private:
  ::seshat::ConstraintType _internal_type() const;
  void _internal_set_type(::seshat::ConstraintType value);

  public:
  // bool is_hard_constraint = 5 [json_name = "isHardConstraint"];
  void clear_is_hard_constraint() ;
  bool is_hard_constraint() const;
  void set_is_hard_constraint(bool value);

  private:
  bool _internal_is_hard_constraint() const;
  void _internal_set_is_hard_constraint(bool value);

  public:
  // float violation_penalty = 6 [json_name = "violationPenalty"];
  void clear_violation_penalty() ;
  float violation_penalty() const;
  void set_violation_penalty(float value);

  private:
  float _internal_violation_penalty() const;
  void _internal_set_violation_penalty(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnConstraint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 37,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnConstraint& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::seshat::ConstraintParameters* PROTOBUF_NULLABLE parameters_;
    int type_;
    bool is_hard_constraint_;
    float violation_penalty_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnConstraint_class_data_;
// -------------------------------------------------------------------

class SpawnCapacityAnalysis final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnCapacityAnalysis) */ {
 public:
  inline SpawnCapacityAnalysis() : SpawnCapacityAnalysis(nullptr) {}
  ~SpawnCapacityAnalysis() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnCapacityAnalysis* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnCapacityAnalysis));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnCapacityAnalysis(::google::protobuf::internal::ConstantInitialized);

  inline SpawnCapacityAnalysis(const SpawnCapacityAnalysis& from) : SpawnCapacityAnalysis(nullptr, from) {}
  inline SpawnCapacityAnalysis(SpawnCapacityAnalysis&& from) noexcept
      : SpawnCapacityAnalysis(nullptr, ::std::move(from)) {}
  inline SpawnCapacityAnalysis& operator=(const SpawnCapacityAnalysis& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnCapacityAnalysis& operator=(SpawnCapacityAnalysis&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnCapacityAnalysis& default_instance() {
    return *reinterpret_cast<const SpawnCapacityAnalysis*>(
        &_SpawnCapacityAnalysis_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(SpawnCapacityAnalysis& a, SpawnCapacityAnalysis& b) { a.Swap(&b); }
  inline void Swap(SpawnCapacityAnalysis* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnCapacityAnalysis* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnCapacityAnalysis* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnCapacityAnalysis>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnCapacityAnalysis& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnCapacityAnalysis& from) { SpawnCapacityAnalysis::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnCapacityAnalysis* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnCapacityAnalysis"; }

 protected:
  explicit SpawnCapacityAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnCapacityAnalysis(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnCapacityAnalysis& from);
  SpawnCapacityAnalysis(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnCapacityAnalysis&& from) noexcept
      : SpawnCapacityAnalysis(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypeCapacitiesFieldNumber = 5,
    kCapacityWarningsFieldNumber = 8,
    kOptimizationSuggestionsFieldNumber = 9,
    kTotalPositionsFieldNumber = 1,
    kValidPositionsFieldNumber = 2,
    kConstrainedPositionsFieldNumber = 3,
    kOccupiedPositionsFieldNumber = 4,
    kOverallUtilizationFieldNumber = 6,
    kIsOverCapacityFieldNumber = 7,
  };
  // repeated .seshat.EntityTypeCapacity type_capacities = 5 [json_name = "typeCapacities"];
  int type_capacities_size() const;
  private:
  int _internal_type_capacities_size() const;

  public:
  void clear_type_capacities() ;
  ::seshat::EntityTypeCapacity* PROTOBUF_NONNULL mutable_type_capacities(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>* PROTOBUF_NONNULL mutable_type_capacities();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>& _internal_type_capacities() const;
  ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>* PROTOBUF_NONNULL _internal_mutable_type_capacities();
  public:
  const ::seshat::EntityTypeCapacity& type_capacities(int index) const;
  ::seshat::EntityTypeCapacity* PROTOBUF_NONNULL add_type_capacities();
  const ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>& type_capacities() const;
  // repeated string capacity_warnings = 8 [json_name = "capacityWarnings"];
  int capacity_warnings_size() const;
  private:
  int _internal_capacity_warnings_size() const;

  public:
  void clear_capacity_warnings() ;
  const ::std::string& capacity_warnings(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_capacity_warnings(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_capacity_warnings(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_capacity_warnings();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_capacity_warnings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& capacity_warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_capacity_warnings();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_capacity_warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_capacity_warnings();

  public:
  // repeated string optimization_suggestions = 9 [json_name = "optimizationSuggestions"];
  int optimization_suggestions_size() const;
  private:
  int _internal_optimization_suggestions_size() const;

  public:
  void clear_optimization_suggestions() ;
  const ::std::string& optimization_suggestions(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_optimization_suggestions(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_optimization_suggestions(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_optimization_suggestions();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_optimization_suggestions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& optimization_suggestions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_optimization_suggestions();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_optimization_suggestions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_optimization_suggestions();

  public:
  // int32 total_positions = 1 [json_name = "totalPositions"];
  void clear_total_positions() ;
  ::int32_t total_positions() const;
  void set_total_positions(::int32_t value);

  private:
  ::int32_t _internal_total_positions() const;
  void _internal_set_total_positions(::int32_t value);

  public:
  // int32 valid_positions = 2 [json_name = "validPositions"];
  void clear_valid_positions() ;
  ::int32_t valid_positions() const;
  void set_valid_positions(::int32_t value);

  private:
  ::int32_t _internal_valid_positions() const;
  void _internal_set_valid_positions(::int32_t value);

  public:
  // int32 constrained_positions = 3 [json_name = "constrainedPositions"];
  void clear_constrained_positions() ;
  ::int32_t constrained_positions() const;
  void set_constrained_positions(::int32_t value);

  private:
  ::int32_t _internal_constrained_positions() const;
  void _internal_set_constrained_positions(::int32_t value);

  public:
  // int32 occupied_positions = 4 [json_name = "occupiedPositions"];
  void clear_occupied_positions() ;
  ::int32_t occupied_positions() const;
  void set_occupied_positions(::int32_t value);

  private:
  ::int32_t _internal_occupied_positions() const;
  void _internal_set_occupied_positions(::int32_t value);

  public:
  // float overall_utilization = 6 [json_name = "overallUtilization"];
  void clear_overall_utilization() ;
  float overall_utilization() const;
  void set_overall_utilization(float value);

  private:
  float _internal_overall_utilization() const;
  void _internal_set_overall_utilization(float value);

  public:
  // bool is_over_capacity = 7 [json_name = "isOverCapacity"];
  void clear_is_over_capacity() ;
  bool is_over_capacity() const;
  void set_is_over_capacity(bool value);

  private:
  bool _internal_is_over_capacity() const;
  void _internal_set_is_over_capacity(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnCapacityAnalysis)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   1, 86,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnCapacityAnalysis& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::EntityTypeCapacity > type_capacities_;
    ::google::protobuf::RepeatedPtrField<::std::string> capacity_warnings_;
    ::google::protobuf::RepeatedPtrField<::std::string> optimization_suggestions_;
    ::int32_t total_positions_;
    ::int32_t valid_positions_;
    ::int32_t constrained_positions_;
    ::int32_t occupied_positions_;
    float overall_utilization_;
    bool is_over_capacity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnCapacityAnalysis_class_data_;
// -------------------------------------------------------------------

class ValidateSpawnPositionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.ValidateSpawnPositionResponse) */ {
 public:
  inline ValidateSpawnPositionResponse() : ValidateSpawnPositionResponse(nullptr) {}
  ~ValidateSpawnPositionResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateSpawnPositionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateSpawnPositionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateSpawnPositionResponse(::google::protobuf::internal::ConstantInitialized);

  inline ValidateSpawnPositionResponse(const ValidateSpawnPositionResponse& from) : ValidateSpawnPositionResponse(nullptr, from) {}
  inline ValidateSpawnPositionResponse(ValidateSpawnPositionResponse&& from) noexcept
      : ValidateSpawnPositionResponse(nullptr, ::std::move(from)) {}
  inline ValidateSpawnPositionResponse& operator=(const ValidateSpawnPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateSpawnPositionResponse& operator=(ValidateSpawnPositionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateSpawnPositionResponse& default_instance() {
    return *reinterpret_cast<const ValidateSpawnPositionResponse*>(
        &_ValidateSpawnPositionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(ValidateSpawnPositionResponse& a, ValidateSpawnPositionResponse& b) { a.Swap(&b); }
  inline void Swap(ValidateSpawnPositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateSpawnPositionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateSpawnPositionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateSpawnPositionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateSpawnPositionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateSpawnPositionResponse& from) { ValidateSpawnPositionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateSpawnPositionResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.ValidateSpawnPositionResponse"; }

 protected:
  explicit ValidateSpawnPositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ValidateSpawnPositionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ValidateSpawnPositionResponse& from);
  ValidateSpawnPositionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ValidateSpawnPositionResponse&& from) noexcept
      : ValidateSpawnPositionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kViolationsFieldNumber = 2,
    kSuggestionsFieldNumber = 4,
    kStatusFieldNumber = 5,
    kIsValidFieldNumber = 1,
    kConstraintScoreFieldNumber = 3,
  };
  // repeated string violations = 2 [json_name = "violations"];
  int violations_size() const;
  private:
  int _internal_violations_size() const;

  public:
  void clear_violations() ;
  const ::std::string& violations(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_violations(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_violations(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_violations();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_violations(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& violations() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_violations();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_violations() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_violations();

  public:
  // repeated string suggestions = 4 [json_name = "suggestions"];
  int suggestions_size() const;
  private:
  int _internal_suggestions_size() const;

  public:
  void clear_suggestions() ;
  const ::std::string& suggestions(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_suggestions(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_suggestions(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_suggestions();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_suggestions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& suggestions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_suggestions();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_suggestions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_suggestions();

  public:
  // .seshat.Result status = 5 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // bool is_valid = 1 [json_name = "isValid"];
  void clear_is_valid() ;
  bool is_valid() const;
  void set_is_valid(bool value);

  private:
  bool _internal_is_valid() const;
  void _internal_set_is_valid(bool value);

  public:
  // float constraint_score = 3 [json_name = "constraintScore"];
  void clear_constraint_score() ;
  float constraint_score() const;
  void set_constraint_score(float value);

  private:
  float _internal_constraint_score() const;
  void _internal_set_constraint_score(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.ValidateSpawnPositionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   1, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ValidateSpawnPositionResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> violations_;
    ::google::protobuf::RepeatedPtrField<::std::string> suggestions_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    bool is_valid_;
    float constraint_score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ValidateSpawnPositionResponse_class_data_;
// -------------------------------------------------------------------

class SpawnPattern final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnPattern) */ {
 public:
  inline SpawnPattern() : SpawnPattern(nullptr) {}
  ~SpawnPattern() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnPattern* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnPattern));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnPattern(::google::protobuf::internal::ConstantInitialized);

  inline SpawnPattern(const SpawnPattern& from) : SpawnPattern(nullptr, from) {}
  inline SpawnPattern(SpawnPattern&& from) noexcept
      : SpawnPattern(nullptr, ::std::move(from)) {}
  inline SpawnPattern& operator=(const SpawnPattern& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnPattern& operator=(SpawnPattern&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnPattern& default_instance() {
    return *reinterpret_cast<const SpawnPattern*>(
        &_SpawnPattern_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(SpawnPattern& a, SpawnPattern& b) { a.Swap(&b); }
  inline void Swap(SpawnPattern* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnPattern* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnPattern* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnPattern>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnPattern& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnPattern& from) { SpawnPattern::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnPattern* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnPattern"; }

 protected:
  explicit SpawnPattern(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnPattern(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnPattern& from);
  SpawnPattern(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnPattern&& from) noexcept
      : SpawnPattern(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternConstraintsFieldNumber = 6,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kParametersFieldNumber = 5,
    kTypeFieldNumber = 4,
    kMinEntitiesFieldNumber = 7,
    kMaxEntitiesFieldNumber = 8,
    kWeightFieldNumber = 9,
  };
  // repeated .seshat.SpawnConstraint pattern_constraints = 6 [json_name = "patternConstraints"];
  int pattern_constraints_size() const;
  private:
  int _internal_pattern_constraints_size() const;

  public:
  void clear_pattern_constraints() ;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL mutable_pattern_constraints(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL mutable_pattern_constraints();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& _internal_pattern_constraints() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL _internal_mutable_pattern_constraints();
  public:
  const ::seshat::SpawnConstraint& pattern_constraints(int index) const;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL add_pattern_constraints();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& pattern_constraints() const;
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // .seshat.PatternParameters parameters = 5 [json_name = "parameters"];
  bool has_parameters() const;
  void clear_parameters() ;
  const ::seshat::PatternParameters& parameters() const;
  [[nodiscard]] ::seshat::PatternParameters* PROTOBUF_NULLABLE release_parameters();
  ::seshat::PatternParameters* PROTOBUF_NONNULL mutable_parameters();
  void set_allocated_parameters(::seshat::PatternParameters* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_parameters(::seshat::PatternParameters* PROTOBUF_NULLABLE value);
  ::seshat::PatternParameters* PROTOBUF_NULLABLE unsafe_arena_release_parameters();

  private:
  const ::seshat::PatternParameters& _internal_parameters() const;
  ::seshat::PatternParameters* PROTOBUF_NONNULL _internal_mutable_parameters();

  public:
  // .seshat.PatternType type = 4 [json_name = "type"];
  void clear_type() ;
  ::seshat::PatternType type() const;
  void set_type(::seshat::PatternType value);

  private:
  ::seshat::PatternType _internal_type() const;
  void _internal_set_type(::seshat::PatternType value);

  public:
  // int32 min_entities = 7 [json_name = "minEntities"];
  void clear_min_entities() ;
  ::int32_t min_entities() const;
  void set_min_entities(::int32_t value);

  private:
  ::int32_t _internal_min_entities() const;
  void _internal_set_min_entities(::int32_t value);

  public:
  // int32 max_entities = 8 [json_name = "maxEntities"];
  void clear_max_entities() ;
  ::int32_t max_entities() const;
  void set_max_entities(::int32_t value);

  private:
  ::int32_t _internal_max_entities() const;
  void _internal_set_max_entities(::int32_t value);

  public:
  // float weight = 9 [json_name = "weight"];
  void clear_weight() ;
  float weight() const;
  void set_weight(float value);

  private:
  float _internal_weight() const;
  void _internal_set_weight(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnPattern)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   2, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnPattern& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnConstraint > pattern_constraints_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::seshat::PatternParameters* PROTOBUF_NULLABLE parameters_;
    int type_;
    ::int32_t min_entities_;
    ::int32_t max_entities_;
    float weight_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnPattern_class_data_;
// -------------------------------------------------------------------

class SpawnMultipleEntitiesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnMultipleEntitiesResponse) */ {
 public:
  inline SpawnMultipleEntitiesResponse() : SpawnMultipleEntitiesResponse(nullptr) {}
  ~SpawnMultipleEntitiesResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnMultipleEntitiesResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnMultipleEntitiesResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnMultipleEntitiesResponse(::google::protobuf::internal::ConstantInitialized);

  inline SpawnMultipleEntitiesResponse(const SpawnMultipleEntitiesResponse& from) : SpawnMultipleEntitiesResponse(nullptr, from) {}
  inline SpawnMultipleEntitiesResponse(SpawnMultipleEntitiesResponse&& from) noexcept
      : SpawnMultipleEntitiesResponse(nullptr, ::std::move(from)) {}
  inline SpawnMultipleEntitiesResponse& operator=(const SpawnMultipleEntitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnMultipleEntitiesResponse& operator=(SpawnMultipleEntitiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnMultipleEntitiesResponse& default_instance() {
    return *reinterpret_cast<const SpawnMultipleEntitiesResponse*>(
        &_SpawnMultipleEntitiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SpawnMultipleEntitiesResponse& a, SpawnMultipleEntitiesResponse& b) { a.Swap(&b); }
  inline void Swap(SpawnMultipleEntitiesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnMultipleEntitiesResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnMultipleEntitiesResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnMultipleEntitiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnMultipleEntitiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnMultipleEntitiesResponse& from) { SpawnMultipleEntitiesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnMultipleEntitiesResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnMultipleEntitiesResponse"; }

 protected:
  explicit SpawnMultipleEntitiesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnMultipleEntitiesResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnMultipleEntitiesResponse& from);
  SpawnMultipleEntitiesResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnMultipleEntitiesResponse&& from) noexcept
      : SpawnMultipleEntitiesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpawnedEntitiesFieldNumber = 1,
    kWarningsFieldNumber = 2,
    kAttemptResultFieldNumber = 3,
    kStatusFieldNumber = 4,
  };
  // repeated .seshat.SpawnedEntity spawned_entities = 1 [json_name = "spawnedEntities"];
  int spawned_entities_size() const;
  private:
  int _internal_spawned_entities_size() const;

  public:
  void clear_spawned_entities() ;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_spawned_entities(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL mutable_spawned_entities();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& _internal_spawned_entities() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL _internal_mutable_spawned_entities();
  public:
  const ::seshat::SpawnedEntity& spawned_entities(int index) const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL add_spawned_entities();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& spawned_entities() const;
  // repeated string warnings = 2 [json_name = "warnings"];
  int warnings_size() const;
  private:
  int _internal_warnings_size() const;

  public:
  void clear_warnings() ;
  const ::std::string& warnings(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_warnings(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_warnings(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_warnings();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_warnings(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_warnings();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_warnings() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_warnings();

  public:
  // .seshat.SpawnAttemptResult attempt_result = 3 [json_name = "attemptResult"];
  bool has_attempt_result() const;
  void clear_attempt_result() ;
  const ::seshat::SpawnAttemptResult& attempt_result() const;
  [[nodiscard]] ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE release_attempt_result();
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL mutable_attempt_result();
  void set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE unsafe_arena_release_attempt_result();

  private:
  const ::seshat::SpawnAttemptResult& _internal_attempt_result() const;
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL _internal_mutable_attempt_result();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnMultipleEntitiesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   3, 53,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnMultipleEntitiesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnedEntity > spawned_entities_;
    ::google::protobuf::RepeatedPtrField<::std::string> warnings_;
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE attempt_result_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnMultipleEntitiesResponse_class_data_;
// -------------------------------------------------------------------

class SpawnHistoryEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnHistoryEntry) */ {
 public:
  inline SpawnHistoryEntry() : SpawnHistoryEntry(nullptr) {}
  ~SpawnHistoryEntry() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnHistoryEntry* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnHistoryEntry));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnHistoryEntry(::google::protobuf::internal::ConstantInitialized);

  inline SpawnHistoryEntry(const SpawnHistoryEntry& from) : SpawnHistoryEntry(nullptr, from) {}
  inline SpawnHistoryEntry(SpawnHistoryEntry&& from) noexcept
      : SpawnHistoryEntry(nullptr, ::std::move(from)) {}
  inline SpawnHistoryEntry& operator=(const SpawnHistoryEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnHistoryEntry& operator=(SpawnHistoryEntry&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnHistoryEntry& default_instance() {
    return *reinterpret_cast<const SpawnHistoryEntry*>(
        &_SpawnHistoryEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(SpawnHistoryEntry& a, SpawnHistoryEntry& b) { a.Swap(&b); }
  inline void Swap(SpawnHistoryEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnHistoryEntry* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnHistoryEntry* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnHistoryEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnHistoryEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnHistoryEntry& from) { SpawnHistoryEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnHistoryEntry* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnHistoryEntry"; }

 protected:
  explicit SpawnHistoryEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnHistoryEntry(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnHistoryEntry& from);
  SpawnHistoryEntry(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnHistoryEntry&& from) noexcept
      : SpawnHistoryEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDetailsFieldNumber = 6,
    kActionFieldNumber = 2,
    kReasonFieldNumber = 4,
    kEntityFieldNumber = 1,
    kAttemptResultFieldNumber = 5,
    kTimestampFieldNumber = 3,
  };
  // map<string, string> details = 6 [json_name = "details"];
  int details_size() const;
  private:
  int _internal_details_size() const;

  public:
  void clear_details() ;
  const ::google::protobuf::Map<std::string, std::string>& details() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_details();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_details() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_details();

  public:
  // string action = 2 [json_name = "action"];
  void clear_action() ;
  const ::std::string& action() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_action();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_action();
  void set_allocated_action(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_action() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_action(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_action();

  public:
  // string reason = 4 [json_name = "reason"];
  void clear_reason() ;
  const ::std::string& reason() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reason(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reason();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reason();
  void set_allocated_reason(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reason() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reason(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reason();

  public:
  // .seshat.SpawnedEntity entity = 1 [json_name = "entity"];
  bool has_entity() const;
  void clear_entity() ;
  const ::seshat::SpawnedEntity& entity() const;
  [[nodiscard]] ::seshat::SpawnedEntity* PROTOBUF_NULLABLE release_entity();
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_entity();
  void set_allocated_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  ::seshat::SpawnedEntity* PROTOBUF_NULLABLE unsafe_arena_release_entity();

  private:
  const ::seshat::SpawnedEntity& _internal_entity() const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL _internal_mutable_entity();

  public:
  // .seshat.SpawnAttemptResult attempt_result = 5 [json_name = "attemptResult"];
  bool has_attempt_result() const;
  void clear_attempt_result() ;
  const ::seshat::SpawnAttemptResult& attempt_result() const;
  [[nodiscard]] ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE release_attempt_result();
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL mutable_attempt_result();
  void set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE unsafe_arena_release_attempt_result();

  private:
  const ::seshat::SpawnAttemptResult& _internal_attempt_result() const;
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL _internal_mutable_attempt_result();

  public:
  // int64 timestamp = 3 [json_name = "timestamp"];
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnHistoryEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   3, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnHistoryEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SpawnHistoryEntry_DetailsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        details_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr reason_;
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE entity_;
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE attempt_result_;
    ::int64_t timestamp_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnHistoryEntry_class_data_;
// -------------------------------------------------------------------

class SpawnEntityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnEntityResponse) */ {
 public:
  inline SpawnEntityResponse() : SpawnEntityResponse(nullptr) {}
  ~SpawnEntityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnEntityResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnEntityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnEntityResponse(::google::protobuf::internal::ConstantInitialized);

  inline SpawnEntityResponse(const SpawnEntityResponse& from) : SpawnEntityResponse(nullptr, from) {}
  inline SpawnEntityResponse(SpawnEntityResponse&& from) noexcept
      : SpawnEntityResponse(nullptr, ::std::move(from)) {}
  inline SpawnEntityResponse& operator=(const SpawnEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnEntityResponse& operator=(SpawnEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnEntityResponse& default_instance() {
    return *reinterpret_cast<const SpawnEntityResponse*>(
        &_SpawnEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(SpawnEntityResponse& a, SpawnEntityResponse& b) { a.Swap(&b); }
  inline void Swap(SpawnEntityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnEntityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnEntityResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnEntityResponse& from) { SpawnEntityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnEntityResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnEntityResponse"; }

 protected:
  explicit SpawnEntityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnEntityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnEntityResponse& from);
  SpawnEntityResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnEntityResponse&& from) noexcept
      : SpawnEntityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstraintViolationsFieldNumber = 2,
    kSpawnedEntityFieldNumber = 1,
    kStatusFieldNumber = 3,
  };
  // repeated string constraint_violations = 2 [json_name = "constraintViolations"];
  int constraint_violations_size() const;
  private:
  int _internal_constraint_violations_size() const;

  public:
  void clear_constraint_violations() ;
  const ::std::string& constraint_violations(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_constraint_violations(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_constraint_violations(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_constraint_violations();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_constraint_violations(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& constraint_violations() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_constraint_violations();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_constraint_violations() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_constraint_violations();

  public:
  // .seshat.SpawnedEntity spawned_entity = 1 [json_name = "spawnedEntity"];
  bool has_spawned_entity() const;
  void clear_spawned_entity() ;
  const ::seshat::SpawnedEntity& spawned_entity() const;
  [[nodiscard]] ::seshat::SpawnedEntity* PROTOBUF_NULLABLE release_spawned_entity();
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_spawned_entity();
  void set_allocated_spawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_spawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  ::seshat::SpawnedEntity* PROTOBUF_NULLABLE unsafe_arena_release_spawned_entity();

  private:
  const ::seshat::SpawnedEntity& _internal_spawned_entity() const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL _internal_mutable_spawned_entity();

  public:
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnEntityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 56,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnEntityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> constraint_violations_;
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE spawned_entity_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnEntityResponse_class_data_;
// -------------------------------------------------------------------

class RemoveSpawnConstraintResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RemoveSpawnConstraintResponse) */ {
 public:
  inline RemoveSpawnConstraintResponse() : RemoveSpawnConstraintResponse(nullptr) {}
  ~RemoveSpawnConstraintResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveSpawnConstraintResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveSpawnConstraintResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveSpawnConstraintResponse(::google::protobuf::internal::ConstantInitialized);

  inline RemoveSpawnConstraintResponse(const RemoveSpawnConstraintResponse& from) : RemoveSpawnConstraintResponse(nullptr, from) {}
  inline RemoveSpawnConstraintResponse(RemoveSpawnConstraintResponse&& from) noexcept
      : RemoveSpawnConstraintResponse(nullptr, ::std::move(from)) {}
  inline RemoveSpawnConstraintResponse& operator=(const RemoveSpawnConstraintResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveSpawnConstraintResponse& operator=(RemoveSpawnConstraintResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveSpawnConstraintResponse& default_instance() {
    return *reinterpret_cast<const RemoveSpawnConstraintResponse*>(
        &_RemoveSpawnConstraintResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(RemoveSpawnConstraintResponse& a, RemoveSpawnConstraintResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveSpawnConstraintResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveSpawnConstraintResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveSpawnConstraintResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveSpawnConstraintResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveSpawnConstraintResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveSpawnConstraintResponse& from) { RemoveSpawnConstraintResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveSpawnConstraintResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RemoveSpawnConstraintResponse"; }

 protected:
  explicit RemoveSpawnConstraintResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RemoveSpawnConstraintResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RemoveSpawnConstraintResponse& from);
  RemoveSpawnConstraintResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RemoveSpawnConstraintResponse&& from) noexcept
      : RemoveSpawnConstraintResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // .seshat.Result status = 1 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.RemoveSpawnConstraintResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RemoveSpawnConstraintResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RemoveSpawnConstraintResponse_class_data_;
// -------------------------------------------------------------------

class GetSpawnConstraintsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnConstraintsResponse) */ {
 public:
  inline GetSpawnConstraintsResponse() : GetSpawnConstraintsResponse(nullptr) {}
  ~GetSpawnConstraintsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnConstraintsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnConstraintsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnConstraintsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnConstraintsResponse(const GetSpawnConstraintsResponse& from) : GetSpawnConstraintsResponse(nullptr, from) {}
  inline GetSpawnConstraintsResponse(GetSpawnConstraintsResponse&& from) noexcept
      : GetSpawnConstraintsResponse(nullptr, ::std::move(from)) {}
  inline GetSpawnConstraintsResponse& operator=(const GetSpawnConstraintsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnConstraintsResponse& operator=(GetSpawnConstraintsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnConstraintsResponse& default_instance() {
    return *reinterpret_cast<const GetSpawnConstraintsResponse*>(
        &_GetSpawnConstraintsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(GetSpawnConstraintsResponse& a, GetSpawnConstraintsResponse& b) { a.Swap(&b); }
  inline void Swap(GetSpawnConstraintsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnConstraintsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnConstraintsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnConstraintsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnConstraintsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnConstraintsResponse& from) { GetSpawnConstraintsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnConstraintsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnConstraintsResponse"; }

 protected:
  explicit GetSpawnConstraintsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnConstraintsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnConstraintsResponse& from);
  GetSpawnConstraintsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnConstraintsResponse&& from) noexcept
      : GetSpawnConstraintsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstraintsFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // repeated .seshat.SpawnConstraint constraints = 1 [json_name = "constraints"];
  int constraints_size() const;
  private:
  int _internal_constraints_size() const;

  public:
  void clear_constraints() ;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL mutable_constraints(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL mutable_constraints();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& _internal_constraints() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL _internal_mutable_constraints();
  public:
  const ::seshat::SpawnConstraint& constraints(int index) const;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL add_constraints();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& constraints() const;
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnConstraintsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnConstraintsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnConstraint > constraints_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnConstraintsResponse_class_data_;
// -------------------------------------------------------------------

class GetOptimalSpawnPositionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetOptimalSpawnPositionsResponse) */ {
 public:
  inline GetOptimalSpawnPositionsResponse() : GetOptimalSpawnPositionsResponse(nullptr) {}
  ~GetOptimalSpawnPositionsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetOptimalSpawnPositionsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetOptimalSpawnPositionsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetOptimalSpawnPositionsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetOptimalSpawnPositionsResponse(const GetOptimalSpawnPositionsResponse& from) : GetOptimalSpawnPositionsResponse(nullptr, from) {}
  inline GetOptimalSpawnPositionsResponse(GetOptimalSpawnPositionsResponse&& from) noexcept
      : GetOptimalSpawnPositionsResponse(nullptr, ::std::move(from)) {}
  inline GetOptimalSpawnPositionsResponse& operator=(const GetOptimalSpawnPositionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetOptimalSpawnPositionsResponse& operator=(GetOptimalSpawnPositionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetOptimalSpawnPositionsResponse& default_instance() {
    return *reinterpret_cast<const GetOptimalSpawnPositionsResponse*>(
        &_GetOptimalSpawnPositionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(GetOptimalSpawnPositionsResponse& a, GetOptimalSpawnPositionsResponse& b) { a.Swap(&b); }
  inline void Swap(GetOptimalSpawnPositionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetOptimalSpawnPositionsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetOptimalSpawnPositionsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetOptimalSpawnPositionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetOptimalSpawnPositionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetOptimalSpawnPositionsResponse& from) { GetOptimalSpawnPositionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetOptimalSpawnPositionsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetOptimalSpawnPositionsResponse"; }

 protected:
  explicit GetOptimalSpawnPositionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetOptimalSpawnPositionsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetOptimalSpawnPositionsResponse& from);
  GetOptimalSpawnPositionsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetOptimalSpawnPositionsResponse&& from) noexcept
      : GetOptimalSpawnPositionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPositionsFieldNumber = 1,
    kOptimizationNotesFieldNumber = 3,
    kStatusFieldNumber = 4,
    kOverallScoreFieldNumber = 2,
  };
  // repeated .seshat.OptimalPosition positions = 1 [json_name = "positions"];
  int positions_size() const;
  private:
  int _internal_positions_size() const;

  public:
  void clear_positions() ;
  ::seshat::OptimalPosition* PROTOBUF_NONNULL mutable_positions(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>* PROTOBUF_NONNULL mutable_positions();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>& _internal_positions() const;
  ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>* PROTOBUF_NONNULL _internal_mutable_positions();
  public:
  const ::seshat::OptimalPosition& positions(int index) const;
  ::seshat::OptimalPosition* PROTOBUF_NONNULL add_positions();
  const ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>& positions() const;
  // repeated string optimization_notes = 3 [json_name = "optimizationNotes"];
  int optimization_notes_size() const;
  private:
  int _internal_optimization_notes_size() const;

  public:
  void clear_optimization_notes() ;
  const ::std::string& optimization_notes(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_optimization_notes(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_optimization_notes(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_optimization_notes();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_optimization_notes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& optimization_notes() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_optimization_notes();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_optimization_notes() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_optimization_notes();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // float overall_score = 2 [json_name = "overallScore"];
  void clear_overall_score() ;
  float overall_score() const;
  void set_overall_score(float value);

  private:
  float _internal_overall_score() const;
  void _internal_set_overall_score(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetOptimalSpawnPositionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetOptimalSpawnPositionsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::OptimalPosition > positions_;
    ::google::protobuf::RepeatedPtrField<::std::string> optimization_notes_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    float overall_score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetOptimalSpawnPositionsResponse_class_data_;
// -------------------------------------------------------------------

class GetActiveSpawnsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetActiveSpawnsResponse) */ {
 public:
  inline GetActiveSpawnsResponse() : GetActiveSpawnsResponse(nullptr) {}
  ~GetActiveSpawnsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetActiveSpawnsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetActiveSpawnsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveSpawnsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveSpawnsResponse(const GetActiveSpawnsResponse& from) : GetActiveSpawnsResponse(nullptr, from) {}
  inline GetActiveSpawnsResponse(GetActiveSpawnsResponse&& from) noexcept
      : GetActiveSpawnsResponse(nullptr, ::std::move(from)) {}
  inline GetActiveSpawnsResponse& operator=(const GetActiveSpawnsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveSpawnsResponse& operator=(GetActiveSpawnsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveSpawnsResponse& default_instance() {
    return *reinterpret_cast<const GetActiveSpawnsResponse*>(
        &_GetActiveSpawnsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(GetActiveSpawnsResponse& a, GetActiveSpawnsResponse& b) { a.Swap(&b); }
  inline void Swap(GetActiveSpawnsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveSpawnsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveSpawnsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetActiveSpawnsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActiveSpawnsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetActiveSpawnsResponse& from) { GetActiveSpawnsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetActiveSpawnsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetActiveSpawnsResponse"; }

 protected:
  explicit GetActiveSpawnsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetActiveSpawnsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetActiveSpawnsResponse& from);
  GetActiveSpawnsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetActiveSpawnsResponse&& from) noexcept
      : GetActiveSpawnsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActiveSpawnsFieldNumber = 1,
    kCurrentCapacityFieldNumber = 3,
    kStatusFieldNumber = 4,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.SpawnedEntity active_spawns = 1 [json_name = "activeSpawns"];
  int active_spawns_size() const;
  private:
  int _internal_active_spawns_size() const;

  public:
  void clear_active_spawns() ;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_active_spawns(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL mutable_active_spawns();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& _internal_active_spawns() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL _internal_mutable_active_spawns();
  public:
  const ::seshat::SpawnedEntity& active_spawns(int index) const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL add_active_spawns();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& active_spawns() const;
  // .seshat.SpawnCapacityAnalysis current_capacity = 3 [json_name = "currentCapacity"];
  bool has_current_capacity() const;
  void clear_current_capacity() ;
  const ::seshat::SpawnCapacityAnalysis& current_capacity() const;
  [[nodiscard]] ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE release_current_capacity();
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL mutable_current_capacity();
  void set_allocated_current_capacity(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_current_capacity(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value);
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE unsafe_arena_release_current_capacity();

  private:
  const ::seshat::SpawnCapacityAnalysis& _internal_current_capacity() const;
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL _internal_mutable_current_capacity();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetActiveSpawnsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   3, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetActiveSpawnsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnedEntity > active_spawns_;
    ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE current_capacity_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetActiveSpawnsResponse_class_data_;
// -------------------------------------------------------------------

class DespawnEntityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.DespawnEntityResponse) */ {
 public:
  inline DespawnEntityResponse() : DespawnEntityResponse(nullptr) {}
  ~DespawnEntityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DespawnEntityResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DespawnEntityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DespawnEntityResponse(::google::protobuf::internal::ConstantInitialized);

  inline DespawnEntityResponse(const DespawnEntityResponse& from) : DespawnEntityResponse(nullptr, from) {}
  inline DespawnEntityResponse(DespawnEntityResponse&& from) noexcept
      : DespawnEntityResponse(nullptr, ::std::move(from)) {}
  inline DespawnEntityResponse& operator=(const DespawnEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DespawnEntityResponse& operator=(DespawnEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DespawnEntityResponse& default_instance() {
    return *reinterpret_cast<const DespawnEntityResponse*>(
        &_DespawnEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(DespawnEntityResponse& a, DespawnEntityResponse& b) { a.Swap(&b); }
  inline void Swap(DespawnEntityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DespawnEntityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DespawnEntityResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DespawnEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DespawnEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DespawnEntityResponse& from) { DespawnEntityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DespawnEntityResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.DespawnEntityResponse"; }

 protected:
  explicit DespawnEntityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DespawnEntityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DespawnEntityResponse& from);
  DespawnEntityResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DespawnEntityResponse&& from) noexcept
      : DespawnEntityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDespawnedEntityFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnedEntity despawned_entity = 1 [json_name = "despawnedEntity"];
  bool has_despawned_entity() const;
  void clear_despawned_entity() ;
  const ::seshat::SpawnedEntity& despawned_entity() const;
  [[nodiscard]] ::seshat::SpawnedEntity* PROTOBUF_NULLABLE release_despawned_entity();
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_despawned_entity();
  void set_allocated_despawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_despawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value);
  ::seshat::SpawnedEntity* PROTOBUF_NULLABLE unsafe_arena_release_despawned_entity();

  private:
  const ::seshat::SpawnedEntity& _internal_despawned_entity() const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL _internal_mutable_despawned_entity();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.DespawnEntityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DespawnEntityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE despawned_entity_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DespawnEntityResponse_class_data_;
// -------------------------------------------------------------------

class DeleteSpawnEngineResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.DeleteSpawnEngineResponse) */ {
 public:
  inline DeleteSpawnEngineResponse() : DeleteSpawnEngineResponse(nullptr) {}
  ~DeleteSpawnEngineResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DeleteSpawnEngineResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DeleteSpawnEngineResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteSpawnEngineResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeleteSpawnEngineResponse(const DeleteSpawnEngineResponse& from) : DeleteSpawnEngineResponse(nullptr, from) {}
  inline DeleteSpawnEngineResponse(DeleteSpawnEngineResponse&& from) noexcept
      : DeleteSpawnEngineResponse(nullptr, ::std::move(from)) {}
  inline DeleteSpawnEngineResponse& operator=(const DeleteSpawnEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteSpawnEngineResponse& operator=(DeleteSpawnEngineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteSpawnEngineResponse& default_instance() {
    return *reinterpret_cast<const DeleteSpawnEngineResponse*>(
        &_DeleteSpawnEngineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(DeleteSpawnEngineResponse& a, DeleteSpawnEngineResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteSpawnEngineResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DeleteSpawnEngineResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteSpawnEngineResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteSpawnEngineResponse& from) { DeleteSpawnEngineResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DeleteSpawnEngineResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.DeleteSpawnEngineResponse"; }

 protected:
  explicit DeleteSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DeleteSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DeleteSpawnEngineResponse& from);
  DeleteSpawnEngineResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DeleteSpawnEngineResponse&& from) noexcept
      : DeleteSpawnEngineResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 2,
    kDespawnedEntitiesFieldNumber = 1,
  };
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 despawned_entities = 1 [json_name = "despawnedEntities"];
  void clear_despawned_entities() ;
  ::int32_t despawned_entities() const;
  void set_despawned_entities(::int32_t value);

  private:
  ::int32_t _internal_despawned_entities() const;
  void _internal_set_despawned_entities(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.DeleteSpawnEngineResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DeleteSpawnEngineResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t despawned_entities_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DeleteSpawnEngineResponse_class_data_;
// -------------------------------------------------------------------

class CreateSpawnEngineRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateSpawnEngineRequest) */ {
 public:
  inline CreateSpawnEngineRequest() : CreateSpawnEngineRequest(nullptr) {}
  ~CreateSpawnEngineRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSpawnEngineRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSpawnEngineRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSpawnEngineRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateSpawnEngineRequest(const CreateSpawnEngineRequest& from) : CreateSpawnEngineRequest(nullptr, from) {}
  inline CreateSpawnEngineRequest(CreateSpawnEngineRequest&& from) noexcept
      : CreateSpawnEngineRequest(nullptr, ::std::move(from)) {}
  inline CreateSpawnEngineRequest& operator=(const CreateSpawnEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpawnEngineRequest& operator=(CreateSpawnEngineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSpawnEngineRequest& default_instance() {
    return *reinterpret_cast<const CreateSpawnEngineRequest*>(
        &_CreateSpawnEngineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(CreateSpawnEngineRequest& a, CreateSpawnEngineRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSpawnEngineRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSpawnEngineRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSpawnEngineRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSpawnEngineRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSpawnEngineRequest& from) { CreateSpawnEngineRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSpawnEngineRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateSpawnEngineRequest"; }

 protected:
  explicit CreateSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateSpawnEngineRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateSpawnEngineRequest& from);
  CreateSpawnEngineRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateSpawnEngineRequest&& from) noexcept
      : CreateSpawnEngineRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoomIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kConfigFieldNumber = 4,
    kEntityTableFieldNumber = 5,
  };
  // string room_id = 1 [json_name = "roomId"];
  void clear_room_id() ;
  const ::std::string& room_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_room_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_room_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_room_id();
  void set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_room_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_room_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // .seshat.SpawnConfiguration config = 4 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::seshat::SpawnConfiguration& config() const;
  [[nodiscard]] ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE release_config();
  ::seshat::SpawnConfiguration* PROTOBUF_NONNULL mutable_config();
  void set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value);
  ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_config();

  private:
  const ::seshat::SpawnConfiguration& _internal_config() const;
  ::seshat::SpawnConfiguration* PROTOBUF_NONNULL _internal_mutable_config();

  public:
  // .seshat.SelectionTable entity_table = 5 [json_name = "entityTable"];
  bool has_entity_table() const;
  void clear_entity_table() ;
  const ::seshat::SelectionTable& entity_table() const;
  [[nodiscard]] ::seshat::SelectionTable* PROTOBUF_NULLABLE release_entity_table();
  ::seshat::SelectionTable* PROTOBUF_NONNULL mutable_entity_table();
  void set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value);
  ::seshat::SelectionTable* PROTOBUF_NULLABLE unsafe_arena_release_entity_table();

  private:
  const ::seshat::SelectionTable& _internal_entity_table() const;
  ::seshat::SelectionTable* PROTOBUF_NONNULL _internal_mutable_entity_table();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateSpawnEngineRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5,
                                   2, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateSpawnEngineRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr room_id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE config_;
    ::seshat::SelectionTable* PROTOBUF_NULLABLE entity_table_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateSpawnEngineRequest_class_data_;
// -------------------------------------------------------------------

class AnalyzeSpawnCapacityResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.AnalyzeSpawnCapacityResponse) */ {
 public:
  inline AnalyzeSpawnCapacityResponse() : AnalyzeSpawnCapacityResponse(nullptr) {}
  ~AnalyzeSpawnCapacityResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AnalyzeSpawnCapacityResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AnalyzeSpawnCapacityResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AnalyzeSpawnCapacityResponse(::google::protobuf::internal::ConstantInitialized);

  inline AnalyzeSpawnCapacityResponse(const AnalyzeSpawnCapacityResponse& from) : AnalyzeSpawnCapacityResponse(nullptr, from) {}
  inline AnalyzeSpawnCapacityResponse(AnalyzeSpawnCapacityResponse&& from) noexcept
      : AnalyzeSpawnCapacityResponse(nullptr, ::std::move(from)) {}
  inline AnalyzeSpawnCapacityResponse& operator=(const AnalyzeSpawnCapacityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AnalyzeSpawnCapacityResponse& operator=(AnalyzeSpawnCapacityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AnalyzeSpawnCapacityResponse& default_instance() {
    return *reinterpret_cast<const AnalyzeSpawnCapacityResponse*>(
        &_AnalyzeSpawnCapacityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(AnalyzeSpawnCapacityResponse& a, AnalyzeSpawnCapacityResponse& b) { a.Swap(&b); }
  inline void Swap(AnalyzeSpawnCapacityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AnalyzeSpawnCapacityResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AnalyzeSpawnCapacityResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AnalyzeSpawnCapacityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AnalyzeSpawnCapacityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AnalyzeSpawnCapacityResponse& from) { AnalyzeSpawnCapacityResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AnalyzeSpawnCapacityResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.AnalyzeSpawnCapacityResponse"; }

 protected:
  explicit AnalyzeSpawnCapacityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AnalyzeSpawnCapacityResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AnalyzeSpawnCapacityResponse& from);
  AnalyzeSpawnCapacityResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AnalyzeSpawnCapacityResponse&& from) noexcept
      : AnalyzeSpawnCapacityResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAnalysisFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnCapacityAnalysis analysis = 1 [json_name = "analysis"];
  bool has_analysis() const;
  void clear_analysis() ;
  const ::seshat::SpawnCapacityAnalysis& analysis() const;
  [[nodiscard]] ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE release_analysis();
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL mutable_analysis();
  void set_allocated_analysis(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_analysis(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value);
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE unsafe_arena_release_analysis();

  private:
  const ::seshat::SpawnCapacityAnalysis& _internal_analysis() const;
  ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL _internal_mutable_analysis();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.AnalyzeSpawnCapacityResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AnalyzeSpawnCapacityResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE analysis_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AnalyzeSpawnCapacityResponse_class_data_;
// -------------------------------------------------------------------

class AddSpawnConstraintResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.AddSpawnConstraintResponse) */ {
 public:
  inline AddSpawnConstraintResponse() : AddSpawnConstraintResponse(nullptr) {}
  ~AddSpawnConstraintResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddSpawnConstraintResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddSpawnConstraintResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddSpawnConstraintResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddSpawnConstraintResponse(const AddSpawnConstraintResponse& from) : AddSpawnConstraintResponse(nullptr, from) {}
  inline AddSpawnConstraintResponse(AddSpawnConstraintResponse&& from) noexcept
      : AddSpawnConstraintResponse(nullptr, ::std::move(from)) {}
  inline AddSpawnConstraintResponse& operator=(const AddSpawnConstraintResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddSpawnConstraintResponse& operator=(AddSpawnConstraintResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddSpawnConstraintResponse& default_instance() {
    return *reinterpret_cast<const AddSpawnConstraintResponse*>(
        &_AddSpawnConstraintResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(AddSpawnConstraintResponse& a, AddSpawnConstraintResponse& b) { a.Swap(&b); }
  inline void Swap(AddSpawnConstraintResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddSpawnConstraintResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddSpawnConstraintResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddSpawnConstraintResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddSpawnConstraintResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddSpawnConstraintResponse& from) { AddSpawnConstraintResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddSpawnConstraintResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.AddSpawnConstraintResponse"; }

 protected:
  explicit AddSpawnConstraintResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AddSpawnConstraintResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AddSpawnConstraintResponse& from);
  AddSpawnConstraintResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AddSpawnConstraintResponse&& from) noexcept
      : AddSpawnConstraintResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddedConstraintFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnConstraint added_constraint = 1 [json_name = "addedConstraint"];
  bool has_added_constraint() const;
  void clear_added_constraint() ;
  const ::seshat::SpawnConstraint& added_constraint() const;
  [[nodiscard]] ::seshat::SpawnConstraint* PROTOBUF_NULLABLE release_added_constraint();
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL mutable_added_constraint();
  void set_allocated_added_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_added_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value);
  ::seshat::SpawnConstraint* PROTOBUF_NULLABLE unsafe_arena_release_added_constraint();

  private:
  const ::seshat::SpawnConstraint& _internal_added_constraint() const;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL _internal_mutable_added_constraint();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.AddSpawnConstraintResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AddSpawnConstraintResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnConstraint* PROTOBUF_NULLABLE added_constraint_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AddSpawnConstraintResponse_class_data_;
// -------------------------------------------------------------------

class AddSpawnConstraintRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.AddSpawnConstraintRequest) */ {
 public:
  inline AddSpawnConstraintRequest() : AddSpawnConstraintRequest(nullptr) {}
  ~AddSpawnConstraintRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddSpawnConstraintRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddSpawnConstraintRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddSpawnConstraintRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddSpawnConstraintRequest(const AddSpawnConstraintRequest& from) : AddSpawnConstraintRequest(nullptr, from) {}
  inline AddSpawnConstraintRequest(AddSpawnConstraintRequest&& from) noexcept
      : AddSpawnConstraintRequest(nullptr, ::std::move(from)) {}
  inline AddSpawnConstraintRequest& operator=(const AddSpawnConstraintRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddSpawnConstraintRequest& operator=(AddSpawnConstraintRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddSpawnConstraintRequest& default_instance() {
    return *reinterpret_cast<const AddSpawnConstraintRequest*>(
        &_AddSpawnConstraintRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(AddSpawnConstraintRequest& a, AddSpawnConstraintRequest& b) { a.Swap(&b); }
  inline void Swap(AddSpawnConstraintRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddSpawnConstraintRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddSpawnConstraintRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddSpawnConstraintRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddSpawnConstraintRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddSpawnConstraintRequest& from) { AddSpawnConstraintRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddSpawnConstraintRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.AddSpawnConstraintRequest"; }

 protected:
  explicit AddSpawnConstraintRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  AddSpawnConstraintRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const AddSpawnConstraintRequest& from);
  AddSpawnConstraintRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, AddSpawnConstraintRequest&& from) noexcept
      : AddSpawnConstraintRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kConstraintFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // .seshat.SpawnConstraint constraint = 2 [json_name = "constraint"];
  bool has_constraint() const;
  void clear_constraint() ;
  const ::seshat::SpawnConstraint& constraint() const;
  [[nodiscard]] ::seshat::SpawnConstraint* PROTOBUF_NULLABLE release_constraint();
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL mutable_constraint();
  void set_allocated_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value);
  ::seshat::SpawnConstraint* PROTOBUF_NULLABLE unsafe_arena_release_constraint();

  private:
  const ::seshat::SpawnConstraint& _internal_constraint() const;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL _internal_mutable_constraint();

  public:
  // @@protoc_insertion_point(class_scope:seshat.AddSpawnConstraintRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const AddSpawnConstraintRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::seshat::SpawnConstraint* PROTOBUF_NULLABLE constraint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull AddSpawnConstraintRequest_class_data_;
// -------------------------------------------------------------------

class UpdateSpawnPatternResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UpdateSpawnPatternResponse) */ {
 public:
  inline UpdateSpawnPatternResponse() : UpdateSpawnPatternResponse(nullptr) {}
  ~UpdateSpawnPatternResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSpawnPatternResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSpawnPatternResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSpawnPatternResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpdateSpawnPatternResponse(const UpdateSpawnPatternResponse& from) : UpdateSpawnPatternResponse(nullptr, from) {}
  inline UpdateSpawnPatternResponse(UpdateSpawnPatternResponse&& from) noexcept
      : UpdateSpawnPatternResponse(nullptr, ::std::move(from)) {}
  inline UpdateSpawnPatternResponse& operator=(const UpdateSpawnPatternResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSpawnPatternResponse& operator=(UpdateSpawnPatternResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSpawnPatternResponse& default_instance() {
    return *reinterpret_cast<const UpdateSpawnPatternResponse*>(
        &_UpdateSpawnPatternResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(UpdateSpawnPatternResponse& a, UpdateSpawnPatternResponse& b) { a.Swap(&b); }
  inline void Swap(UpdateSpawnPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSpawnPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSpawnPatternResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSpawnPatternResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSpawnPatternResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSpawnPatternResponse& from) { UpdateSpawnPatternResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSpawnPatternResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UpdateSpawnPatternResponse"; }

 protected:
  explicit UpdateSpawnPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateSpawnPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateSpawnPatternResponse& from);
  UpdateSpawnPatternResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateSpawnPatternResponse&& from) noexcept
      : UpdateSpawnPatternResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnPattern pattern = 1 [json_name = "pattern"];
  bool has_pattern() const;
  void clear_pattern() ;
  const ::seshat::SpawnPattern& pattern() const;
  [[nodiscard]] ::seshat::SpawnPattern* PROTOBUF_NULLABLE release_pattern();
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_pattern();
  void set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  ::seshat::SpawnPattern* PROTOBUF_NULLABLE unsafe_arena_release_pattern();

  private:
  const ::seshat::SpawnPattern& _internal_pattern() const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL _internal_mutable_pattern();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UpdateSpawnPatternResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateSpawnPatternResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE pattern_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateSpawnPatternResponse_class_data_;
// -------------------------------------------------------------------

class UpdateSpawnPatternRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.UpdateSpawnPatternRequest) */ {
 public:
  inline UpdateSpawnPatternRequest() : UpdateSpawnPatternRequest(nullptr) {}
  ~UpdateSpawnPatternRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateSpawnPatternRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateSpawnPatternRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateSpawnPatternRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpdateSpawnPatternRequest(const UpdateSpawnPatternRequest& from) : UpdateSpawnPatternRequest(nullptr, from) {}
  inline UpdateSpawnPatternRequest(UpdateSpawnPatternRequest&& from) noexcept
      : UpdateSpawnPatternRequest(nullptr, ::std::move(from)) {}
  inline UpdateSpawnPatternRequest& operator=(const UpdateSpawnPatternRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateSpawnPatternRequest& operator=(UpdateSpawnPatternRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateSpawnPatternRequest& default_instance() {
    return *reinterpret_cast<const UpdateSpawnPatternRequest*>(
        &_UpdateSpawnPatternRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(UpdateSpawnPatternRequest& a, UpdateSpawnPatternRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateSpawnPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateSpawnPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateSpawnPatternRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateSpawnPatternRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateSpawnPatternRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateSpawnPatternRequest& from) { UpdateSpawnPatternRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateSpawnPatternRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.UpdateSpawnPatternRequest"; }

 protected:
  explicit UpdateSpawnPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  UpdateSpawnPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const UpdateSpawnPatternRequest& from);
  UpdateSpawnPatternRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, UpdateSpawnPatternRequest&& from) noexcept
      : UpdateSpawnPatternRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternIdFieldNumber = 1,
    kUpdatedPatternFieldNumber = 2,
  };
  // string pattern_id = 1 [json_name = "patternId"];
  void clear_pattern_id() ;
  const ::std::string& pattern_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_pattern_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_pattern_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_pattern_id();
  void set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_pattern_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_pattern_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_pattern_id();

  public:
  // .seshat.SpawnPattern updated_pattern = 2 [json_name = "updatedPattern"];
  bool has_updated_pattern() const;
  void clear_updated_pattern() ;
  const ::seshat::SpawnPattern& updated_pattern() const;
  [[nodiscard]] ::seshat::SpawnPattern* PROTOBUF_NULLABLE release_updated_pattern();
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_updated_pattern();
  void set_allocated_updated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_updated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  ::seshat::SpawnPattern* PROTOBUF_NULLABLE unsafe_arena_release_updated_pattern();

  private:
  const ::seshat::SpawnPattern& _internal_updated_pattern() const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL _internal_mutable_updated_pattern();

  public:
  // @@protoc_insertion_point(class_scope:seshat.UpdateSpawnPatternRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const UpdateSpawnPatternRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr pattern_id_;
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE updated_pattern_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull UpdateSpawnPatternRequest_class_data_;
// -------------------------------------------------------------------

class SpawnFromPatternResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnFromPatternResponse) */ {
 public:
  inline SpawnFromPatternResponse() : SpawnFromPatternResponse(nullptr) {}
  ~SpawnFromPatternResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnFromPatternResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnFromPatternResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnFromPatternResponse(::google::protobuf::internal::ConstantInitialized);

  inline SpawnFromPatternResponse(const SpawnFromPatternResponse& from) : SpawnFromPatternResponse(nullptr, from) {}
  inline SpawnFromPatternResponse(SpawnFromPatternResponse&& from) noexcept
      : SpawnFromPatternResponse(nullptr, ::std::move(from)) {}
  inline SpawnFromPatternResponse& operator=(const SpawnFromPatternResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnFromPatternResponse& operator=(SpawnFromPatternResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnFromPatternResponse& default_instance() {
    return *reinterpret_cast<const SpawnFromPatternResponse*>(
        &_SpawnFromPatternResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(SpawnFromPatternResponse& a, SpawnFromPatternResponse& b) { a.Swap(&b); }
  inline void Swap(SpawnFromPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnFromPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnFromPatternResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnFromPatternResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnFromPatternResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnFromPatternResponse& from) { SpawnFromPatternResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnFromPatternResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnFromPatternResponse"; }

 protected:
  explicit SpawnFromPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnFromPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnFromPatternResponse& from);
  SpawnFromPatternResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnFromPatternResponse&& from) noexcept
      : SpawnFromPatternResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpawnedEntitiesFieldNumber = 1,
    kPatternUsedFieldNumber = 2,
    kAttemptResultFieldNumber = 3,
    kStatusFieldNumber = 4,
  };
  // repeated .seshat.SpawnedEntity spawned_entities = 1 [json_name = "spawnedEntities"];
  int spawned_entities_size() const;
  private:
  int _internal_spawned_entities_size() const;

  public:
  void clear_spawned_entities() ;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL mutable_spawned_entities(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL mutable_spawned_entities();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& _internal_spawned_entities() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL _internal_mutable_spawned_entities();
  public:
  const ::seshat::SpawnedEntity& spawned_entities(int index) const;
  ::seshat::SpawnedEntity* PROTOBUF_NONNULL add_spawned_entities();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& spawned_entities() const;
  // .seshat.SpawnPattern pattern_used = 2 [json_name = "patternUsed"];
  bool has_pattern_used() const;
  void clear_pattern_used() ;
  const ::seshat::SpawnPattern& pattern_used() const;
  [[nodiscard]] ::seshat::SpawnPattern* PROTOBUF_NULLABLE release_pattern_used();
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_pattern_used();
  void set_allocated_pattern_used(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pattern_used(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  ::seshat::SpawnPattern* PROTOBUF_NULLABLE unsafe_arena_release_pattern_used();

  private:
  const ::seshat::SpawnPattern& _internal_pattern_used() const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL _internal_mutable_pattern_used();

  public:
  // .seshat.SpawnAttemptResult attempt_result = 3 [json_name = "attemptResult"];
  bool has_attempt_result() const;
  void clear_attempt_result() ;
  const ::seshat::SpawnAttemptResult& attempt_result() const;
  [[nodiscard]] ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE release_attempt_result();
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL mutable_attempt_result();
  void set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value);
  ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE unsafe_arena_release_attempt_result();

  private:
  const ::seshat::SpawnAttemptResult& _internal_attempt_result() const;
  ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL _internal_mutable_attempt_result();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnFromPatternResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnFromPatternResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnedEntity > spawned_entities_;
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE pattern_used_;
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE attempt_result_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnFromPatternResponse_class_data_;
// -------------------------------------------------------------------

class SpawnEngine final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.SpawnEngine) */ {
 public:
  inline SpawnEngine() : SpawnEngine(nullptr) {}
  ~SpawnEngine() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SpawnEngine* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SpawnEngine));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpawnEngine(::google::protobuf::internal::ConstantInitialized);

  inline SpawnEngine(const SpawnEngine& from) : SpawnEngine(nullptr, from) {}
  inline SpawnEngine(SpawnEngine&& from) noexcept
      : SpawnEngine(nullptr, ::std::move(from)) {}
  inline SpawnEngine& operator=(const SpawnEngine& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpawnEngine& operator=(SpawnEngine&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpawnEngine& default_instance() {
    return *reinterpret_cast<const SpawnEngine*>(
        &_SpawnEngine_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(SpawnEngine& a, SpawnEngine& b) { a.Swap(&b); }
  inline void Swap(SpawnEngine* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpawnEngine* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpawnEngine* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SpawnEngine>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpawnEngine& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpawnEngine& from) { SpawnEngine::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SpawnEngine* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.SpawnEngine"; }

 protected:
  explicit SpawnEngine(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SpawnEngine(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SpawnEngine& from);
  SpawnEngine(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SpawnEngine&& from) noexcept
      : SpawnEngine(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConstraintsFieldNumber = 6,
    kPatternsFieldNumber = 7,
    kPropertiesFieldNumber = 9,
    kIdFieldNumber = 1,
    kNameFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kRoomIdFieldNumber = 4,
    kConfigFieldNumber = 5,
    kEntityTableFieldNumber = 8,
    kCreatedTimestampFieldNumber = 10,
    kLastSpawnTimestampFieldNumber = 11,
    kTotalSpawnsFieldNumber = 12,
    kIsActiveFieldNumber = 13,
  };
  // repeated .seshat.SpawnConstraint constraints = 6 [json_name = "constraints"];
  int constraints_size() const;
  private:
  int _internal_constraints_size() const;

  public:
  void clear_constraints() ;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL mutable_constraints(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL mutable_constraints();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& _internal_constraints() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL _internal_mutable_constraints();
  public:
  const ::seshat::SpawnConstraint& constraints(int index) const;
  ::seshat::SpawnConstraint* PROTOBUF_NONNULL add_constraints();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& constraints() const;
  // repeated .seshat.SpawnPattern patterns = 7 [json_name = "patterns"];
  int patterns_size() const;
  private:
  int _internal_patterns_size() const;

  public:
  void clear_patterns() ;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_patterns(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL mutable_patterns();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& _internal_patterns() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL _internal_mutable_patterns();
  public:
  const ::seshat::SpawnPattern& patterns(int index) const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL add_patterns();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& patterns() const;
  // map<string, string> properties = 9 [json_name = "properties"];
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, std::string>& properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_properties() const;
  ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL _internal_mutable_properties();

  public:
  // string id = 1 [json_name = "id"];
  void clear_id() ;
  const ::std::string& id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_id();
  void set_allocated_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_id();

  public:
  // string name = 2 [json_name = "name"];
  void clear_name() ;
  const ::std::string& name() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_name();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_name();
  void set_allocated_name(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_name() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_name(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_name();

  public:
  // string description = 3 [json_name = "description"];
  void clear_description() ;
  const ::std::string& description() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_description();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_description();
  void set_allocated_description(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_description() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_description(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_description();

  public:
  // string room_id = 4 [json_name = "roomId"];
  void clear_room_id() ;
  const ::std::string& room_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_room_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_room_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_room_id();
  void set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_room_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_room_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_room_id();

  public:
  // .seshat.SpawnConfiguration config = 5 [json_name = "config"];
  bool has_config() const;
  void clear_config() ;
  const ::seshat::SpawnConfiguration& config() const;
  [[nodiscard]] ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE release_config();
  ::seshat::SpawnConfiguration* PROTOBUF_NONNULL mutable_config();
  void set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value);
  ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE unsafe_arena_release_config();

  private:
  const ::seshat::SpawnConfiguration& _internal_config() const;
  ::seshat::SpawnConfiguration* PROTOBUF_NONNULL _internal_mutable_config();

  public:
  // .seshat.SelectionTable entity_table = 8 [json_name = "entityTable"];
  bool has_entity_table() const;
  void clear_entity_table() ;
  const ::seshat::SelectionTable& entity_table() const;
  [[nodiscard]] ::seshat::SelectionTable* PROTOBUF_NULLABLE release_entity_table();
  ::seshat::SelectionTable* PROTOBUF_NONNULL mutable_entity_table();
  void set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value);
  ::seshat::SelectionTable* PROTOBUF_NULLABLE unsafe_arena_release_entity_table();

  private:
  const ::seshat::SelectionTable& _internal_entity_table() const;
  ::seshat::SelectionTable* PROTOBUF_NONNULL _internal_mutable_entity_table();

  public:
  // int64 created_timestamp = 10 [json_name = "createdTimestamp"];
  void clear_created_timestamp() ;
  ::int64_t created_timestamp() const;
  void set_created_timestamp(::int64_t value);

  private:
  ::int64_t _internal_created_timestamp() const;
  void _internal_set_created_timestamp(::int64_t value);

  public:
  // int64 last_spawn_timestamp = 11 [json_name = "lastSpawnTimestamp"];
  void clear_last_spawn_timestamp() ;
  ::int64_t last_spawn_timestamp() const;
  void set_last_spawn_timestamp(::int64_t value);

  private:
  ::int64_t _internal_last_spawn_timestamp() const;
  void _internal_set_last_spawn_timestamp(::int64_t value);

  public:
  // int32 total_spawns = 12 [json_name = "totalSpawns"];
  void clear_total_spawns() ;
  ::int32_t total_spawns() const;
  void set_total_spawns(::int32_t value);

  private:
  ::int32_t _internal_total_spawns() const;
  void _internal_set_total_spawns(::int32_t value);

  public:
  // bool is_active = 13 [json_name = "isActive"];
  void clear_is_active() ;
  bool is_active() const;
  void set_is_active(bool value);

  private:
  bool _internal_is_active() const;
  void _internal_set_is_active(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.SpawnEngine)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 13,
                                   5, 69,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SpawnEngine& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnConstraint > constraints_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnPattern > patterns_;
    ::google::protobuf::internal::MapField<SpawnEngine_PropertiesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        properties_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr room_id_;
    ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE config_;
    ::seshat::SelectionTable* PROTOBUF_NULLABLE entity_table_;
    ::int64_t created_timestamp_;
    ::int64_t last_spawn_timestamp_;
    ::int32_t total_spawns_;
    bool is_active_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SpawnEngine_class_data_;
// -------------------------------------------------------------------

class RoomSplitOption final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RoomSplitOption) */ {
 public:
  inline RoomSplitOption() : RoomSplitOption(nullptr) {}
  ~RoomSplitOption() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RoomSplitOption* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RoomSplitOption));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoomSplitOption(::google::protobuf::internal::ConstantInitialized);

  inline RoomSplitOption(const RoomSplitOption& from) : RoomSplitOption(nullptr, from) {}
  inline RoomSplitOption(RoomSplitOption&& from) noexcept
      : RoomSplitOption(nullptr, ::std::move(from)) {}
  inline RoomSplitOption& operator=(const RoomSplitOption& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoomSplitOption& operator=(RoomSplitOption&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoomSplitOption& default_instance() {
    return *reinterpret_cast<const RoomSplitOption*>(
        &_RoomSplitOption_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(RoomSplitOption& a, RoomSplitOption& b) { a.Swap(&b); }
  inline void Swap(RoomSplitOption* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoomSplitOption* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoomSplitOption* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RoomSplitOption>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoomSplitOption& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoomSplitOption& from) { RoomSplitOption::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RoomSplitOption* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RoomSplitOption"; }

 protected:
  explicit RoomSplitOption(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RoomSplitOption(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RoomSplitOption& from);
  RoomSplitOption(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RoomSplitOption&& from) noexcept
      : RoomSplitOption(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuggestedRoomsFieldNumber = 2,
    kAdvantagesFieldNumber = 5,
    kDisadvantagesFieldNumber = 6,
    kSplitTypeFieldNumber = 1,
    kEstimatedCapacityFieldNumber = 3,
    kComplexityScoreFieldNumber = 4,
  };
  // repeated .seshat.Room suggested_rooms = 2 [json_name = "suggestedRooms"];
  int suggested_rooms_size() const;
  private:
  int _internal_suggested_rooms_size() const;

  public:
  void clear_suggested_rooms() ;
  ::seshat::Room* PROTOBUF_NONNULL mutable_suggested_rooms(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::Room>* PROTOBUF_NONNULL mutable_suggested_rooms();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::Room>& _internal_suggested_rooms() const;
  ::google::protobuf::RepeatedPtrField<::seshat::Room>* PROTOBUF_NONNULL _internal_mutable_suggested_rooms();
  public:
  const ::seshat::Room& suggested_rooms(int index) const;
  ::seshat::Room* PROTOBUF_NONNULL add_suggested_rooms();
  const ::google::protobuf::RepeatedPtrField<::seshat::Room>& suggested_rooms() const;
  // repeated string advantages = 5 [json_name = "advantages"];
  int advantages_size() const;
  private:
  int _internal_advantages_size() const;

  public:
  void clear_advantages() ;
  const ::std::string& advantages(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_advantages(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_advantages(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_advantages();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_advantages(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& advantages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_advantages();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_advantages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_advantages();

  public:
  // repeated string disadvantages = 6 [json_name = "disadvantages"];
  int disadvantages_size() const;
  private:
  int _internal_disadvantages_size() const;

  public:
  void clear_disadvantages() ;
  const ::std::string& disadvantages(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_disadvantages(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_disadvantages(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_disadvantages();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_disadvantages(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& disadvantages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_disadvantages();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_disadvantages() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_disadvantages();

  public:
  // string split_type = 1 [json_name = "splitType"];
  void clear_split_type() ;
  const ::std::string& split_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_split_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_split_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_split_type();
  void set_allocated_split_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_split_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_split_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_split_type();

  public:
  // int32 estimated_capacity = 3 [json_name = "estimatedCapacity"];
  void clear_estimated_capacity() ;
  ::int32_t estimated_capacity() const;
  void set_estimated_capacity(::int32_t value);

  private:
  ::int32_t _internal_estimated_capacity() const;
  void _internal_set_estimated_capacity(::int32_t value);

  public:
  // float complexity_score = 4 [json_name = "complexityScore"];
  void clear_complexity_score() ;
  float complexity_score() const;
  void set_complexity_score(float value);

  private:
  float _internal_complexity_score() const;
  void _internal_set_complexity_score(float value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.RoomSplitOption)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   1, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RoomSplitOption& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::Room > suggested_rooms_;
    ::google::protobuf::RepeatedPtrField<::std::string> advantages_;
    ::google::protobuf::RepeatedPtrField<::std::string> disadvantages_;
    ::google::protobuf::internal::ArenaStringPtr split_type_;
    ::int32_t estimated_capacity_;
    float complexity_score_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RoomSplitOption_class_data_;
// -------------------------------------------------------------------

class GetSpawnPatternsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnPatternsResponse) */ {
 public:
  inline GetSpawnPatternsResponse() : GetSpawnPatternsResponse(nullptr) {}
  ~GetSpawnPatternsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnPatternsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnPatternsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnPatternsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnPatternsResponse(const GetSpawnPatternsResponse& from) : GetSpawnPatternsResponse(nullptr, from) {}
  inline GetSpawnPatternsResponse(GetSpawnPatternsResponse&& from) noexcept
      : GetSpawnPatternsResponse(nullptr, ::std::move(from)) {}
  inline GetSpawnPatternsResponse& operator=(const GetSpawnPatternsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnPatternsResponse& operator=(GetSpawnPatternsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnPatternsResponse& default_instance() {
    return *reinterpret_cast<const GetSpawnPatternsResponse*>(
        &_GetSpawnPatternsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(GetSpawnPatternsResponse& a, GetSpawnPatternsResponse& b) { a.Swap(&b); }
  inline void Swap(GetSpawnPatternsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnPatternsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnPatternsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnPatternsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnPatternsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnPatternsResponse& from) { GetSpawnPatternsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnPatternsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnPatternsResponse"; }

 protected:
  explicit GetSpawnPatternsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnPatternsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnPatternsResponse& from);
  GetSpawnPatternsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnPatternsResponse&& from) noexcept
      : GetSpawnPatternsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPatternsFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // repeated .seshat.SpawnPattern patterns = 1 [json_name = "patterns"];
  int patterns_size() const;
  private:
  int _internal_patterns_size() const;

  public:
  void clear_patterns() ;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_patterns(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL mutable_patterns();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& _internal_patterns() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL _internal_mutable_patterns();
  public:
  const ::seshat::SpawnPattern& patterns(int index) const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL add_patterns();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& patterns() const;
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnPatternsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnPatternsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnPattern > patterns_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnPatternsResponse_class_data_;
// -------------------------------------------------------------------

class GetSpawnHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnHistoryResponse) */ {
 public:
  inline GetSpawnHistoryResponse() : GetSpawnHistoryResponse(nullptr) {}
  ~GetSpawnHistoryResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnHistoryResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnHistoryResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnHistoryResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnHistoryResponse(const GetSpawnHistoryResponse& from) : GetSpawnHistoryResponse(nullptr, from) {}
  inline GetSpawnHistoryResponse(GetSpawnHistoryResponse&& from) noexcept
      : GetSpawnHistoryResponse(nullptr, ::std::move(from)) {}
  inline GetSpawnHistoryResponse& operator=(const GetSpawnHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnHistoryResponse& operator=(GetSpawnHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnHistoryResponse& default_instance() {
    return *reinterpret_cast<const GetSpawnHistoryResponse*>(
        &_GetSpawnHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(GetSpawnHistoryResponse& a, GetSpawnHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(GetSpawnHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnHistoryResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnHistoryResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnHistoryResponse& from) { GetSpawnHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnHistoryResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnHistoryResponse"; }

 protected:
  explicit GetSpawnHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnHistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnHistoryResponse& from);
  GetSpawnHistoryResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnHistoryResponse&& from) noexcept
      : GetSpawnHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHistoryFieldNumber = 1,
    kStatusFieldNumber = 3,
    kTotalCountFieldNumber = 2,
  };
  // repeated .seshat.SpawnHistoryEntry history = 1 [json_name = "history"];
  int history_size() const;
  private:
  int _internal_history_size() const;

  public:
  void clear_history() ;
  ::seshat::SpawnHistoryEntry* PROTOBUF_NONNULL mutable_history(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>* PROTOBUF_NONNULL mutable_history();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>& _internal_history() const;
  ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>* PROTOBUF_NONNULL _internal_mutable_history();
  public:
  const ::seshat::SpawnHistoryEntry& history(int index) const;
  ::seshat::SpawnHistoryEntry* PROTOBUF_NONNULL add_history();
  const ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>& history() const;
  // .seshat.Result status = 3 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // int32 total_count = 2 [json_name = "totalCount"];
  void clear_total_count() ;
  ::int32_t total_count() const;
  void set_total_count(::int32_t value);

  private:
  ::int32_t _internal_total_count() const;
  void _internal_set_total_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnHistoryResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::SpawnHistoryEntry > history_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    ::int32_t total_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnHistoryResponse_class_data_;
// -------------------------------------------------------------------

class CreateSpawnPatternResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateSpawnPatternResponse) */ {
 public:
  inline CreateSpawnPatternResponse() : CreateSpawnPatternResponse(nullptr) {}
  ~CreateSpawnPatternResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSpawnPatternResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSpawnPatternResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSpawnPatternResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateSpawnPatternResponse(const CreateSpawnPatternResponse& from) : CreateSpawnPatternResponse(nullptr, from) {}
  inline CreateSpawnPatternResponse(CreateSpawnPatternResponse&& from) noexcept
      : CreateSpawnPatternResponse(nullptr, ::std::move(from)) {}
  inline CreateSpawnPatternResponse& operator=(const CreateSpawnPatternResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpawnPatternResponse& operator=(CreateSpawnPatternResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSpawnPatternResponse& default_instance() {
    return *reinterpret_cast<const CreateSpawnPatternResponse*>(
        &_CreateSpawnPatternResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(CreateSpawnPatternResponse& a, CreateSpawnPatternResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSpawnPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSpawnPatternResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSpawnPatternResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSpawnPatternResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSpawnPatternResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSpawnPatternResponse& from) { CreateSpawnPatternResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSpawnPatternResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateSpawnPatternResponse"; }

 protected:
  explicit CreateSpawnPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateSpawnPatternResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateSpawnPatternResponse& from);
  CreateSpawnPatternResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateSpawnPatternResponse&& from) noexcept
      : CreateSpawnPatternResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCreatedPatternFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnPattern created_pattern = 1 [json_name = "createdPattern"];
  bool has_created_pattern() const;
  void clear_created_pattern() ;
  const ::seshat::SpawnPattern& created_pattern() const;
  [[nodiscard]] ::seshat::SpawnPattern* PROTOBUF_NULLABLE release_created_pattern();
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_created_pattern();
  void set_allocated_created_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_created_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  ::seshat::SpawnPattern* PROTOBUF_NULLABLE unsafe_arena_release_created_pattern();

  private:
  const ::seshat::SpawnPattern& _internal_created_pattern() const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL _internal_mutable_created_pattern();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateSpawnPatternResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateSpawnPatternResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE created_pattern_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateSpawnPatternResponse_class_data_;
// -------------------------------------------------------------------

class CreateSpawnPatternRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateSpawnPatternRequest) */ {
 public:
  inline CreateSpawnPatternRequest() : CreateSpawnPatternRequest(nullptr) {}
  ~CreateSpawnPatternRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSpawnPatternRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSpawnPatternRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSpawnPatternRequest(::google::protobuf::internal::ConstantInitialized);

  inline CreateSpawnPatternRequest(const CreateSpawnPatternRequest& from) : CreateSpawnPatternRequest(nullptr, from) {}
  inline CreateSpawnPatternRequest(CreateSpawnPatternRequest&& from) noexcept
      : CreateSpawnPatternRequest(nullptr, ::std::move(from)) {}
  inline CreateSpawnPatternRequest& operator=(const CreateSpawnPatternRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpawnPatternRequest& operator=(CreateSpawnPatternRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSpawnPatternRequest& default_instance() {
    return *reinterpret_cast<const CreateSpawnPatternRequest*>(
        &_CreateSpawnPatternRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(CreateSpawnPatternRequest& a, CreateSpawnPatternRequest& b) { a.Swap(&b); }
  inline void Swap(CreateSpawnPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSpawnPatternRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSpawnPatternRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSpawnPatternRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSpawnPatternRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSpawnPatternRequest& from) { CreateSpawnPatternRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSpawnPatternRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateSpawnPatternRequest"; }

 protected:
  explicit CreateSpawnPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateSpawnPatternRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateSpawnPatternRequest& from);
  CreateSpawnPatternRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateSpawnPatternRequest&& from) noexcept
      : CreateSpawnPatternRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineIdFieldNumber = 1,
    kPatternFieldNumber = 2,
  };
  // string engine_id = 1 [json_name = "engineId"];
  void clear_engine_id() ;
  const ::std::string& engine_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_engine_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_engine_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_engine_id();
  void set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_engine_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_engine_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_engine_id();

  public:
  // .seshat.SpawnPattern pattern = 2 [json_name = "pattern"];
  bool has_pattern() const;
  void clear_pattern() ;
  const ::seshat::SpawnPattern& pattern() const;
  [[nodiscard]] ::seshat::SpawnPattern* PROTOBUF_NULLABLE release_pattern();
  ::seshat::SpawnPattern* PROTOBUF_NONNULL mutable_pattern();
  void set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value);
  ::seshat::SpawnPattern* PROTOBUF_NULLABLE unsafe_arena_release_pattern();

  private:
  const ::seshat::SpawnPattern& _internal_pattern() const;
  ::seshat::SpawnPattern* PROTOBUF_NONNULL _internal_mutable_pattern();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateSpawnPatternRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   1, 50,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateSpawnPatternRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr engine_id_;
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE pattern_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateSpawnPatternRequest_class_data_;
// -------------------------------------------------------------------

class RecommendRoomSplitResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.RecommendRoomSplitResponse) */ {
 public:
  inline RecommendRoomSplitResponse() : RecommendRoomSplitResponse(nullptr) {}
  ~RecommendRoomSplitResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RecommendRoomSplitResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RecommendRoomSplitResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RecommendRoomSplitResponse(::google::protobuf::internal::ConstantInitialized);

  inline RecommendRoomSplitResponse(const RecommendRoomSplitResponse& from) : RecommendRoomSplitResponse(nullptr, from) {}
  inline RecommendRoomSplitResponse(RecommendRoomSplitResponse&& from) noexcept
      : RecommendRoomSplitResponse(nullptr, ::std::move(from)) {}
  inline RecommendRoomSplitResponse& operator=(const RecommendRoomSplitResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RecommendRoomSplitResponse& operator=(RecommendRoomSplitResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RecommendRoomSplitResponse& default_instance() {
    return *reinterpret_cast<const RecommendRoomSplitResponse*>(
        &_RecommendRoomSplitResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(RecommendRoomSplitResponse& a, RecommendRoomSplitResponse& b) { a.Swap(&b); }
  inline void Swap(RecommendRoomSplitResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RecommendRoomSplitResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RecommendRoomSplitResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RecommendRoomSplitResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RecommendRoomSplitResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RecommendRoomSplitResponse& from) { RecommendRoomSplitResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RecommendRoomSplitResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.RecommendRoomSplitResponse"; }

 protected:
  explicit RecommendRoomSplitResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RecommendRoomSplitResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RecommendRoomSplitResponse& from);
  RecommendRoomSplitResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RecommendRoomSplitResponse&& from) noexcept
      : RecommendRoomSplitResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 2,
    kReasoningFieldNumber = 3,
    kStatusFieldNumber = 4,
    kShouldSplitFieldNumber = 1,
  };
  // repeated .seshat.RoomSplitOption options = 2 [json_name = "options"];
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  ::seshat::RoomSplitOption* PROTOBUF_NONNULL mutable_options(int index);
  ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>* PROTOBUF_NONNULL mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>* PROTOBUF_NONNULL _internal_mutable_options();
  public:
  const ::seshat::RoomSplitOption& options(int index) const;
  ::seshat::RoomSplitOption* PROTOBUF_NONNULL add_options();
  const ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>& options() const;
  // string reasoning = 3 [json_name = "reasoning"];
  void clear_reasoning() ;
  const ::std::string& reasoning() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_reasoning(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_reasoning();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_reasoning();
  void set_allocated_reasoning(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_reasoning() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_reasoning(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_reasoning();

  public:
  // .seshat.Result status = 4 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // bool should_split = 1 [json_name = "shouldSplit"];
  void clear_should_split() ;
  bool should_split() const;
  void set_should_split(bool value);

  private:
  bool _internal_should_split() const;
  void _internal_set_should_split(bool value);

  public:
  // @@protoc_insertion_point(class_scope:seshat.RecommendRoomSplitResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   2, 51,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RecommendRoomSplitResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::seshat::RoomSplitOption > options_;
    ::google::protobuf::internal::ArenaStringPtr reasoning_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    bool should_split_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RecommendRoomSplitResponse_class_data_;
// -------------------------------------------------------------------

class GetSpawnEngineResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.GetSpawnEngineResponse) */ {
 public:
  inline GetSpawnEngineResponse() : GetSpawnEngineResponse(nullptr) {}
  ~GetSpawnEngineResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetSpawnEngineResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetSpawnEngineResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSpawnEngineResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSpawnEngineResponse(const GetSpawnEngineResponse& from) : GetSpawnEngineResponse(nullptr, from) {}
  inline GetSpawnEngineResponse(GetSpawnEngineResponse&& from) noexcept
      : GetSpawnEngineResponse(nullptr, ::std::move(from)) {}
  inline GetSpawnEngineResponse& operator=(const GetSpawnEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSpawnEngineResponse& operator=(GetSpawnEngineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSpawnEngineResponse& default_instance() {
    return *reinterpret_cast<const GetSpawnEngineResponse*>(
        &_GetSpawnEngineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(GetSpawnEngineResponse& a, GetSpawnEngineResponse& b) { a.Swap(&b); }
  inline void Swap(GetSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSpawnEngineResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetSpawnEngineResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSpawnEngineResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSpawnEngineResponse& from) { GetSpawnEngineResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetSpawnEngineResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.GetSpawnEngineResponse"; }

 protected:
  explicit GetSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetSpawnEngineResponse& from);
  GetSpawnEngineResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetSpawnEngineResponse&& from) noexcept
      : GetSpawnEngineResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnEngine engine = 1 [json_name = "engine"];
  bool has_engine() const;
  void clear_engine() ;
  const ::seshat::SpawnEngine& engine() const;
  [[nodiscard]] ::seshat::SpawnEngine* PROTOBUF_NULLABLE release_engine();
  ::seshat::SpawnEngine* PROTOBUF_NONNULL mutable_engine();
  void set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value);
  ::seshat::SpawnEngine* PROTOBUF_NULLABLE unsafe_arena_release_engine();

  private:
  const ::seshat::SpawnEngine& _internal_engine() const;
  ::seshat::SpawnEngine* PROTOBUF_NONNULL _internal_mutable_engine();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.GetSpawnEngineResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetSpawnEngineResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnEngine* PROTOBUF_NULLABLE engine_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetSpawnEngineResponse_class_data_;
// -------------------------------------------------------------------

class CreateSpawnEngineResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:seshat.CreateSpawnEngineResponse) */ {
 public:
  inline CreateSpawnEngineResponse() : CreateSpawnEngineResponse(nullptr) {}
  ~CreateSpawnEngineResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(CreateSpawnEngineResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(CreateSpawnEngineResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CreateSpawnEngineResponse(::google::protobuf::internal::ConstantInitialized);

  inline CreateSpawnEngineResponse(const CreateSpawnEngineResponse& from) : CreateSpawnEngineResponse(nullptr, from) {}
  inline CreateSpawnEngineResponse(CreateSpawnEngineResponse&& from) noexcept
      : CreateSpawnEngineResponse(nullptr, ::std::move(from)) {}
  inline CreateSpawnEngineResponse& operator=(const CreateSpawnEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateSpawnEngineResponse& operator=(CreateSpawnEngineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CreateSpawnEngineResponse& default_instance() {
    return *reinterpret_cast<const CreateSpawnEngineResponse*>(
        &_CreateSpawnEngineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(CreateSpawnEngineResponse& a, CreateSpawnEngineResponse& b) { a.Swap(&b); }
  inline void Swap(CreateSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateSpawnEngineResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CreateSpawnEngineResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<CreateSpawnEngineResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CreateSpawnEngineResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CreateSpawnEngineResponse& from) { CreateSpawnEngineResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(CreateSpawnEngineResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "seshat.CreateSpawnEngineResponse"; }

 protected:
  explicit CreateSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  CreateSpawnEngineResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CreateSpawnEngineResponse& from);
  CreateSpawnEngineResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, CreateSpawnEngineResponse&& from) noexcept
      : CreateSpawnEngineResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEngineFieldNumber = 1,
    kStatusFieldNumber = 2,
  };
  // .seshat.SpawnEngine engine = 1 [json_name = "engine"];
  bool has_engine() const;
  void clear_engine() ;
  const ::seshat::SpawnEngine& engine() const;
  [[nodiscard]] ::seshat::SpawnEngine* PROTOBUF_NULLABLE release_engine();
  ::seshat::SpawnEngine* PROTOBUF_NONNULL mutable_engine();
  void set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value);
  ::seshat::SpawnEngine* PROTOBUF_NULLABLE unsafe_arena_release_engine();

  private:
  const ::seshat::SpawnEngine& _internal_engine() const;
  ::seshat::SpawnEngine* PROTOBUF_NONNULL _internal_mutable_engine();

  public:
  // .seshat.Result status = 2 [json_name = "status"];
  bool has_status() const;
  void clear_status() ;
  const ::seshat::Result& status() const;
  [[nodiscard]] ::seshat::Result* PROTOBUF_NULLABLE release_status();
  ::seshat::Result* PROTOBUF_NONNULL mutable_status();
  void set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value);
  ::seshat::Result* PROTOBUF_NULLABLE unsafe_arena_release_status();

  private:
  const ::seshat::Result& _internal_status() const;
  ::seshat::Result* PROTOBUF_NONNULL _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:seshat.CreateSpawnEngineResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const CreateSpawnEngineResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::seshat::SpawnEngine* PROTOBUF_NULLABLE engine_;
    ::seshat::Result* PROTOBUF_NULLABLE status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_seshat_2fspawn_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull CreateSpawnEngineResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnEngine

// string id = 1 [json_name = "id"];
inline void SpawnEngine::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnEngine::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEngine::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.id)
  return _s;
}
inline const ::std::string& SpawnEngine::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SpawnEngine::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEngine::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEngine::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.id)
}

// string name = 2 [json_name = "name"];
inline void SpawnEngine::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnEngine::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEngine::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.name)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.name)
  return _s;
}
inline const ::std::string& SpawnEngine::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SpawnEngine::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEngine::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEngine::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.name)
}

// string description = 3 [json_name = "description"];
inline void SpawnEngine::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& SpawnEngine::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEngine::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.description)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.description)
  return _s;
}
inline const ::std::string& SpawnEngine::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SpawnEngine::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEngine::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEngine::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.description)
}

// string room_id = 4 [json_name = "roomId"];
inline void SpawnEngine::clear_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::std::string& SpawnEngine::room_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.room_id)
  return _internal_room_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEngine::set_room_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.room_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.room_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::mutable_room_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_room_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.room_id)
  return _s;
}
inline const ::std::string& SpawnEngine::_internal_room_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_id_.Get();
}
inline void SpawnEngine::_internal_set_room_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.room_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.room_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEngine::release_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.room_id)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.room_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEngine::set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.room_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_id_.IsDefault()) {
    _impl_.room_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.room_id)
}

// .seshat.SpawnConfiguration config = 5 [json_name = "config"];
inline bool SpawnEngine::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline void SpawnEngine::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::seshat::SpawnConfiguration& SpawnEngine::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnConfiguration* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnConfiguration&>(::seshat::_SpawnConfiguration_default_instance_);
}
inline const ::seshat::SpawnConfiguration& SpawnEngine::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.config)
  return _internal_config();
}
inline void SpawnEngine::unsafe_arena_set_allocated_config(
    ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnEngine.config)
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE SpawnEngine::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::SpawnConfiguration* released = _impl_.config_;
  _impl_.config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE SpawnEngine::unsafe_arena_release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.config)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::SpawnConfiguration* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnConfiguration>(GetArena());
    _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(p);
  }
  return _impl_.config_;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NONNULL SpawnEngine::mutable_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::seshat::SpawnConfiguration* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.config)
  return _msg;
}
inline void SpawnEngine::set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.config)
}

// repeated .seshat.SpawnConstraint constraints = 6 [json_name = "constraints"];
inline int SpawnEngine::_internal_constraints_size() const {
  return _internal_constraints().size();
}
inline int SpawnEngine::constraints_size() const {
  return _internal_constraints_size();
}
inline void SpawnEngine::clear_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraints_.Clear();
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL SpawnEngine::mutable_constraints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.constraints)
  return _internal_mutable_constraints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL SpawnEngine::mutable_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnEngine.constraints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constraints();
}
inline const ::seshat::SpawnConstraint& SpawnEngine::constraints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.constraints)
  return _internal_constraints().Get(index);
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL SpawnEngine::add_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnConstraint* _add = _internal_mutable_constraints()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnEngine.constraints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& SpawnEngine::constraints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnEngine.constraints)
  return _internal_constraints();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>&
SpawnEngine::_internal_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraints_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL
SpawnEngine::_internal_mutable_constraints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constraints_;
}

// repeated .seshat.SpawnPattern patterns = 7 [json_name = "patterns"];
inline int SpawnEngine::_internal_patterns_size() const {
  return _internal_patterns().size();
}
inline int SpawnEngine::patterns_size() const {
  return _internal_patterns_size();
}
inline void SpawnEngine::clear_patterns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patterns_.Clear();
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL SpawnEngine::mutable_patterns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.patterns)
  return _internal_mutable_patterns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL SpawnEngine::mutable_patterns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnEngine.patterns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_patterns();
}
inline const ::seshat::SpawnPattern& SpawnEngine::patterns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.patterns)
  return _internal_patterns().Get(index);
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL SpawnEngine::add_patterns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnPattern* _add = _internal_mutable_patterns()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnEngine.patterns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& SpawnEngine::patterns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnEngine.patterns)
  return _internal_patterns();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>&
SpawnEngine::_internal_patterns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.patterns_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL
SpawnEngine::_internal_mutable_patterns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.patterns_;
}

// .seshat.SelectionTable entity_table = 8 [json_name = "entityTable"];
inline bool SpawnEngine::has_entity_table() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_table_ != nullptr);
  return value;
}
inline const ::seshat::SelectionTable& SpawnEngine::_internal_entity_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SelectionTable* p = _impl_.entity_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SelectionTable&>(::seshat::_SelectionTable_default_instance_);
}
inline const ::seshat::SelectionTable& SpawnEngine::entity_table() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.entity_table)
  return _internal_entity_table();
}
inline void SpawnEngine::unsafe_arena_set_allocated_entity_table(
    ::seshat::SelectionTable* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_table_);
  }
  _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnEngine.entity_table)
}
inline ::seshat::SelectionTable* PROTOBUF_NULLABLE SpawnEngine::release_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::seshat::SelectionTable* released = _impl_.entity_table_;
  _impl_.entity_table_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SelectionTable* PROTOBUF_NULLABLE SpawnEngine::unsafe_arena_release_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEngine.entity_table)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::seshat::SelectionTable* temp = _impl_.entity_table_;
  _impl_.entity_table_ = nullptr;
  return temp;
}
inline ::seshat::SelectionTable* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_table_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SelectionTable>(GetArena());
    _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(p);
  }
  return _impl_.entity_table_;
}
inline ::seshat::SelectionTable* PROTOBUF_NONNULL SpawnEngine::mutable_entity_table()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::seshat::SelectionTable* _msg = _internal_mutable_entity_table();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEngine.entity_table)
  return _msg;
}
inline void SpawnEngine::set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_table_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEngine.entity_table)
}

// map<string, string> properties = 9 [json_name = "properties"];
inline int SpawnEngine::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int SpawnEngine::properties_size() const {
  return _internal_properties_size();
}
inline void SpawnEngine::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnEngine::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnEngine::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnEngine.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnEngine::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnEngine::mutable_properties()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnEngine.properties)
  return _internal_mutable_properties();
}

// int64 created_timestamp = 10 [json_name = "createdTimestamp"];
inline void SpawnEngine::clear_created_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t SpawnEngine::created_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.created_timestamp)
  return _internal_created_timestamp();
}
inline void SpawnEngine::set_created_timestamp(::int64_t value) {
  _internal_set_created_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.created_timestamp)
}
inline ::int64_t SpawnEngine::_internal_created_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.created_timestamp_;
}
inline void SpawnEngine::_internal_set_created_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.created_timestamp_ = value;
}

// int64 last_spawn_timestamp = 11 [json_name = "lastSpawnTimestamp"];
inline void SpawnEngine::clear_last_spawn_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_spawn_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t SpawnEngine::last_spawn_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.last_spawn_timestamp)
  return _internal_last_spawn_timestamp();
}
inline void SpawnEngine::set_last_spawn_timestamp(::int64_t value) {
  _internal_set_last_spawn_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.last_spawn_timestamp)
}
inline ::int64_t SpawnEngine::_internal_last_spawn_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_spawn_timestamp_;
}
inline void SpawnEngine::_internal_set_last_spawn_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_spawn_timestamp_ = value;
}

// int32 total_spawns = 12 [json_name = "totalSpawns"];
inline void SpawnEngine::clear_total_spawns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_spawns_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t SpawnEngine::total_spawns() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.total_spawns)
  return _internal_total_spawns();
}
inline void SpawnEngine::set_total_spawns(::int32_t value) {
  _internal_set_total_spawns(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.total_spawns)
}
inline ::int32_t SpawnEngine::_internal_total_spawns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_spawns_;
}
inline void SpawnEngine::_internal_set_total_spawns(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_spawns_ = value;
}

// bool is_active = 13 [json_name = "isActive"];
inline void SpawnEngine::clear_is_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool SpawnEngine::is_active() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnEngine.is_active)
  return _internal_is_active();
}
inline void SpawnEngine::set_is_active(bool value) {
  _internal_set_is_active(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:seshat.SpawnEngine.is_active)
}
inline bool SpawnEngine::_internal_is_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_active_;
}
inline void SpawnEngine::_internal_set_is_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_active_ = value;
}

// -------------------------------------------------------------------

// SpawnConfiguration

// int32 max_entities = 1 [json_name = "maxEntities"];
inline void SpawnConfiguration::clear_max_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SpawnConfiguration::max_entities() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.max_entities)
  return _internal_max_entities();
}
inline void SpawnConfiguration::set_max_entities(::int32_t value) {
  _internal_set_max_entities(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.max_entities)
}
inline ::int32_t SpawnConfiguration::_internal_max_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_entities_;
}
inline void SpawnConfiguration::_internal_set_max_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_entities_ = value;
}

// int32 spawn_rate = 2 [json_name = "spawnRate"];
inline void SpawnConfiguration::clear_spawn_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_rate_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SpawnConfiguration::spawn_rate() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.spawn_rate)
  return _internal_spawn_rate();
}
inline void SpawnConfiguration::set_spawn_rate(::int32_t value) {
  _internal_set_spawn_rate(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.spawn_rate)
}
inline ::int32_t SpawnConfiguration::_internal_spawn_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_rate_;
}
inline void SpawnConfiguration::_internal_set_spawn_rate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_rate_ = value;
}

// .seshat.Duration spawn_interval = 3 [json_name = "spawnInterval"];
inline bool SpawnConfiguration::has_spawn_interval() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spawn_interval_ != nullptr);
  return value;
}
inline const ::seshat::Duration& SpawnConfiguration::_internal_spawn_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Duration* p = _impl_.spawn_interval_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Duration&>(::seshat::_Duration_default_instance_);
}
inline const ::seshat::Duration& SpawnConfiguration::spawn_interval() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.spawn_interval)
  return _internal_spawn_interval();
}
inline void SpawnConfiguration::unsafe_arena_set_allocated_spawn_interval(
    ::seshat::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawn_interval_);
  }
  _impl_.spawn_interval_ = reinterpret_cast<::seshat::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnConfiguration.spawn_interval)
}
inline ::seshat::Duration* PROTOBUF_NULLABLE SpawnConfiguration::release_spawn_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Duration* released = _impl_.spawn_interval_;
  _impl_.spawn_interval_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Duration* PROTOBUF_NULLABLE SpawnConfiguration::unsafe_arena_release_spawn_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnConfiguration.spawn_interval)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Duration* temp = _impl_.spawn_interval_;
  _impl_.spawn_interval_ = nullptr;
  return temp;
}
inline ::seshat::Duration* PROTOBUF_NONNULL SpawnConfiguration::_internal_mutable_spawn_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spawn_interval_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Duration>(GetArena());
    _impl_.spawn_interval_ = reinterpret_cast<::seshat::Duration*>(p);
  }
  return _impl_.spawn_interval_;
}
inline ::seshat::Duration* PROTOBUF_NONNULL SpawnConfiguration::mutable_spawn_interval()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Duration* _msg = _internal_mutable_spawn_interval();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnConfiguration.spawn_interval)
  return _msg;
}
inline void SpawnConfiguration::set_allocated_spawn_interval(::seshat::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawn_interval_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spawn_interval_ = reinterpret_cast<::seshat::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnConfiguration.spawn_interval)
}

// bool respect_capacity = 4 [json_name = "respectCapacity"];
inline void SpawnConfiguration::clear_respect_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respect_capacity_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool SpawnConfiguration::respect_capacity() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.respect_capacity)
  return _internal_respect_capacity();
}
inline void SpawnConfiguration::set_respect_capacity(bool value) {
  _internal_set_respect_capacity(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.respect_capacity)
}
inline bool SpawnConfiguration::_internal_respect_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.respect_capacity_;
}
inline void SpawnConfiguration::_internal_set_respect_capacity(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.respect_capacity_ = value;
}

// bool allow_overlap = 5 [json_name = "allowOverlap"];
inline void SpawnConfiguration::clear_allow_overlap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_overlap_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool SpawnConfiguration::allow_overlap() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.allow_overlap)
  return _internal_allow_overlap();
}
inline void SpawnConfiguration::set_allow_overlap(bool value) {
  _internal_set_allow_overlap(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.allow_overlap)
}
inline bool SpawnConfiguration::_internal_allow_overlap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_overlap_;
}
inline void SpawnConfiguration::_internal_set_allow_overlap(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_overlap_ = value;
}

// bool auto_despawn = 6 [json_name = "autoDespawn"];
inline void SpawnConfiguration::clear_auto_despawn() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_despawn_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool SpawnConfiguration::auto_despawn() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.auto_despawn)
  return _internal_auto_despawn();
}
inline void SpawnConfiguration::set_auto_despawn(bool value) {
  _internal_set_auto_despawn(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.auto_despawn)
}
inline bool SpawnConfiguration::_internal_auto_despawn() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.auto_despawn_;
}
inline void SpawnConfiguration::_internal_set_auto_despawn(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.auto_despawn_ = value;
}

// .seshat.SpawnTiming timing = 7 [json_name = "timing"];
inline void SpawnConfiguration::clear_timing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timing_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::seshat::SpawnTiming SpawnConfiguration::timing() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.timing)
  return _internal_timing();
}
inline void SpawnConfiguration::set_timing(::seshat::SpawnTiming value) {
  _internal_set_timing(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.timing)
}
inline ::seshat::SpawnTiming SpawnConfiguration::_internal_timing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::SpawnTiming>(_impl_.timing_);
}
inline void SpawnConfiguration::_internal_set_timing(::seshat::SpawnTiming value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timing_ = value;
}

// repeated string spawn_triggers = 8 [json_name = "spawnTriggers"];
inline int SpawnConfiguration::_internal_spawn_triggers_size() const {
  return _internal_spawn_triggers().size();
}
inline int SpawnConfiguration::spawn_triggers_size() const {
  return _internal_spawn_triggers_size();
}
inline void SpawnConfiguration::clear_spawn_triggers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_triggers_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnConfiguration::add_spawn_triggers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_spawn_triggers()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnConfiguration.spawn_triggers)
  return _s;
}
inline const ::std::string& SpawnConfiguration::spawn_triggers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnConfiguration.spawn_triggers)
  return _internal_spawn_triggers().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnConfiguration::mutable_spawn_triggers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnConfiguration.spawn_triggers)
  return _internal_mutable_spawn_triggers()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnConfiguration::set_spawn_triggers(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_spawn_triggers()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnConfiguration.spawn_triggers)
}
template <typename Arg_, typename... Args_>
inline void SpawnConfiguration::add_spawn_triggers(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_spawn_triggers(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnConfiguration.spawn_triggers)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnConfiguration::spawn_triggers()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnConfiguration.spawn_triggers)
  return _internal_spawn_triggers();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnConfiguration::mutable_spawn_triggers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnConfiguration.spawn_triggers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_spawn_triggers();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnConfiguration::_internal_spawn_triggers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_triggers_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnConfiguration::_internal_mutable_spawn_triggers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.spawn_triggers_;
}

// -------------------------------------------------------------------

// SpawnPattern

// string id = 1 [json_name = "id"];
inline void SpawnPattern::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnPattern::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnPattern::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnPattern.id)
  return _s;
}
inline const ::std::string& SpawnPattern::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SpawnPattern::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnPattern::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnPattern.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnPattern::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnPattern.id)
}

// string name = 2 [json_name = "name"];
inline void SpawnPattern::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnPattern::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnPattern::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.name)
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnPattern.name)
  return _s;
}
inline const ::std::string& SpawnPattern::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SpawnPattern::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnPattern::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnPattern.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void SpawnPattern::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnPattern.name)
}

// string description = 3 [json_name = "description"];
inline void SpawnPattern::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& SpawnPattern::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnPattern::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.description)
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnPattern.description)
  return _s;
}
inline const ::std::string& SpawnPattern::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void SpawnPattern::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnPattern::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnPattern::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnPattern.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void SpawnPattern::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnPattern.description)
}

// .seshat.PatternType type = 4 [json_name = "type"];
inline void SpawnPattern::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::seshat::PatternType SpawnPattern::type() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.type)
  return _internal_type();
}
inline void SpawnPattern::set_type(::seshat::PatternType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.type)
}
inline ::seshat::PatternType SpawnPattern::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::PatternType>(_impl_.type_);
}
inline void SpawnPattern::_internal_set_type(::seshat::PatternType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .seshat.PatternParameters parameters = 5 [json_name = "parameters"];
inline bool SpawnPattern::has_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parameters_ != nullptr);
  return value;
}
inline void SpawnPattern::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ != nullptr) _impl_.parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::seshat::PatternParameters& SpawnPattern::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::PatternParameters* p = _impl_.parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::PatternParameters&>(::seshat::_PatternParameters_default_instance_);
}
inline const ::seshat::PatternParameters& SpawnPattern::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.parameters)
  return _internal_parameters();
}
inline void SpawnPattern::unsafe_arena_set_allocated_parameters(
    ::seshat::PatternParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }
  _impl_.parameters_ = reinterpret_cast<::seshat::PatternParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnPattern.parameters)
}
inline ::seshat::PatternParameters* PROTOBUF_NULLABLE SpawnPattern::release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::PatternParameters* released = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::PatternParameters* PROTOBUF_NULLABLE SpawnPattern::unsafe_arena_release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnPattern.parameters)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::PatternParameters* temp = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  return temp;
}
inline ::seshat::PatternParameters* PROTOBUF_NONNULL SpawnPattern::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::PatternParameters>(GetArena());
    _impl_.parameters_ = reinterpret_cast<::seshat::PatternParameters*>(p);
  }
  return _impl_.parameters_;
}
inline ::seshat::PatternParameters* PROTOBUF_NONNULL SpawnPattern::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::PatternParameters* _msg = _internal_mutable_parameters();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnPattern.parameters)
  return _msg;
}
inline void SpawnPattern::set_allocated_parameters(::seshat::PatternParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.parameters_ = reinterpret_cast<::seshat::PatternParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnPattern.parameters)
}

// repeated .seshat.SpawnConstraint pattern_constraints = 6 [json_name = "patternConstraints"];
inline int SpawnPattern::_internal_pattern_constraints_size() const {
  return _internal_pattern_constraints().size();
}
inline int SpawnPattern::pattern_constraints_size() const {
  return _internal_pattern_constraints_size();
}
inline void SpawnPattern::clear_pattern_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_constraints_.Clear();
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL SpawnPattern::mutable_pattern_constraints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnPattern.pattern_constraints)
  return _internal_mutable_pattern_constraints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL SpawnPattern::mutable_pattern_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnPattern.pattern_constraints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pattern_constraints();
}
inline const ::seshat::SpawnConstraint& SpawnPattern::pattern_constraints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.pattern_constraints)
  return _internal_pattern_constraints().Get(index);
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL SpawnPattern::add_pattern_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnConstraint* _add = _internal_mutable_pattern_constraints()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnPattern.pattern_constraints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& SpawnPattern::pattern_constraints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnPattern.pattern_constraints)
  return _internal_pattern_constraints();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>&
SpawnPattern::_internal_pattern_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_constraints_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL
SpawnPattern::_internal_mutable_pattern_constraints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pattern_constraints_;
}

// int32 min_entities = 7 [json_name = "minEntities"];
inline void SpawnPattern::clear_min_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t SpawnPattern::min_entities() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.min_entities)
  return _internal_min_entities();
}
inline void SpawnPattern::set_min_entities(::int32_t value) {
  _internal_set_min_entities(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.min_entities)
}
inline ::int32_t SpawnPattern::_internal_min_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_entities_;
}
inline void SpawnPattern::_internal_set_min_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_entities_ = value;
}

// int32 max_entities = 8 [json_name = "maxEntities"];
inline void SpawnPattern::clear_max_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t SpawnPattern::max_entities() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.max_entities)
  return _internal_max_entities();
}
inline void SpawnPattern::set_max_entities(::int32_t value) {
  _internal_set_max_entities(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.max_entities)
}
inline ::int32_t SpawnPattern::_internal_max_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_entities_;
}
inline void SpawnPattern::_internal_set_max_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_entities_ = value;
}

// float weight = 9 [json_name = "weight"];
inline void SpawnPattern::clear_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weight_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline float SpawnPattern::weight() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnPattern.weight)
  return _internal_weight();
}
inline void SpawnPattern::set_weight(float value) {
  _internal_set_weight(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:seshat.SpawnPattern.weight)
}
inline float SpawnPattern::_internal_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.weight_;
}
inline void SpawnPattern::_internal_set_weight(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.weight_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PatternParameters

// int32 min_distance = 1 [json_name = "minDistance"];
inline void PatternParameters::clear_min_distance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t PatternParameters::min_distance() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.min_distance)
  return _internal_min_distance();
}
inline void PatternParameters::set_min_distance(::int32_t value) {
  _internal_set_min_distance(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.min_distance)
}
inline ::int32_t PatternParameters::_internal_min_distance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_distance_;
}
inline void PatternParameters::_internal_set_min_distance(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_ = value;
}

// int32 max_distance = 2 [json_name = "maxDistance"];
inline void PatternParameters::clear_max_distance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t PatternParameters::max_distance() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.max_distance)
  return _internal_max_distance();
}
inline void PatternParameters::set_max_distance(::int32_t value) {
  _internal_set_max_distance(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.max_distance)
}
inline ::int32_t PatternParameters::_internal_max_distance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_distance_;
}
inline void PatternParameters::_internal_set_max_distance(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_ = value;
}

// int32 cluster_size = 3 [json_name = "clusterSize"];
inline void PatternParameters::clear_cluster_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t PatternParameters::cluster_size() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.cluster_size)
  return _internal_cluster_size();
}
inline void PatternParameters::set_cluster_size(::int32_t value) {
  _internal_set_cluster_size(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.cluster_size)
}
inline ::int32_t PatternParameters::_internal_cluster_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_size_;
}
inline void PatternParameters::_internal_set_cluster_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_size_ = value;
}

// int32 cluster_radius = 4 [json_name = "clusterRadius"];
inline void PatternParameters::clear_cluster_radius() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_radius_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t PatternParameters::cluster_radius() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.cluster_radius)
  return _internal_cluster_radius();
}
inline void PatternParameters::set_cluster_radius(::int32_t value) {
  _internal_set_cluster_radius(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.cluster_radius)
}
inline ::int32_t PatternParameters::_internal_cluster_radius() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_radius_;
}
inline void PatternParameters::_internal_set_cluster_radius(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_radius_ = value;
}

// int32 cluster_separation = 5 [json_name = "clusterSeparation"];
inline void PatternParameters::clear_cluster_separation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_separation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t PatternParameters::cluster_separation() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.cluster_separation)
  return _internal_cluster_separation();
}
inline void PatternParameters::set_cluster_separation(::int32_t value) {
  _internal_set_cluster_separation(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.cluster_separation)
}
inline ::int32_t PatternParameters::_internal_cluster_separation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cluster_separation_;
}
inline void PatternParameters::_internal_set_cluster_separation(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cluster_separation_ = value;
}

// string formation_shape = 6 [json_name = "formationShape"];
inline void PatternParameters::clear_formation_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formation_shape_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& PatternParameters::formation_shape() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.formation_shape)
  return _internal_formation_shape();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PatternParameters::set_formation_shape(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.formation_shape_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.formation_shape)
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::mutable_formation_shape()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_formation_shape();
  // @@protoc_insertion_point(field_mutable:seshat.PatternParameters.formation_shape)
  return _s;
}
inline const ::std::string& PatternParameters::_internal_formation_shape() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.formation_shape_.Get();
}
inline void PatternParameters::_internal_set_formation_shape(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.formation_shape_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::_internal_mutable_formation_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.formation_shape_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PatternParameters::release_formation_shape() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.PatternParameters.formation_shape)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.formation_shape_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.formation_shape_.Set("", GetArena());
  }
  return released;
}
inline void PatternParameters::set_allocated_formation_shape(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.formation_shape_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.formation_shape_.IsDefault()) {
    _impl_.formation_shape_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.PatternParameters.formation_shape)
}

// int32 formation_spacing = 7 [json_name = "formationSpacing"];
inline void PatternParameters::clear_formation_spacing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formation_spacing_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t PatternParameters::formation_spacing() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.formation_spacing)
  return _internal_formation_spacing();
}
inline void PatternParameters::set_formation_spacing(::int32_t value) {
  _internal_set_formation_spacing(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.formation_spacing)
}
inline ::int32_t PatternParameters::_internal_formation_spacing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.formation_spacing_;
}
inline void PatternParameters::_internal_set_formation_spacing(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formation_spacing_ = value;
}

// string formation_facing = 8 [json_name = "formationFacing"];
inline void PatternParameters::clear_formation_facing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formation_facing_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& PatternParameters::formation_facing() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.formation_facing)
  return _internal_formation_facing();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void PatternParameters::set_formation_facing(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.formation_facing_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.formation_facing)
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::mutable_formation_facing()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_formation_facing();
  // @@protoc_insertion_point(field_mutable:seshat.PatternParameters.formation_facing)
  return _s;
}
inline const ::std::string& PatternParameters::_internal_formation_facing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.formation_facing_.Get();
}
inline void PatternParameters::_internal_set_formation_facing(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.formation_facing_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::_internal_mutable_formation_facing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.formation_facing_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE PatternParameters::release_formation_facing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.PatternParameters.formation_facing)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.formation_facing_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.formation_facing_.Set("", GetArena());
  }
  return released;
}
inline void PatternParameters::set_allocated_formation_facing(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.formation_facing_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.formation_facing_.IsDefault()) {
    _impl_.formation_facing_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.PatternParameters.formation_facing)
}

// int32 team_count = 9 [json_name = "teamCount"];
inline void PatternParameters::clear_team_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t PatternParameters::team_count() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.team_count)
  return _internal_team_count();
}
inline void PatternParameters::set_team_count(::int32_t value) {
  _internal_set_team_count(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.team_count)
}
inline ::int32_t PatternParameters::_internal_team_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_count_;
}
inline void PatternParameters::_internal_set_team_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_count_ = value;
}

// int32 team_size = 10 [json_name = "teamSize"];
inline void PatternParameters::clear_team_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_size_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t PatternParameters::team_size() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.team_size)
  return _internal_team_size();
}
inline void PatternParameters::set_team_size(::int32_t value) {
  _internal_set_team_size(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.team_size)
}
inline ::int32_t PatternParameters::_internal_team_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_size_;
}
inline void PatternParameters::_internal_set_team_size(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_size_ = value;
}

// int32 team_separation = 11 [json_name = "teamSeparation"];
inline void PatternParameters::clear_team_separation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_separation_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t PatternParameters::team_separation() const {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.team_separation)
  return _internal_team_separation();
}
inline void PatternParameters::set_team_separation(::int32_t value) {
  _internal_set_team_separation(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.team_separation)
}
inline ::int32_t PatternParameters::_internal_team_separation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.team_separation_;
}
inline void PatternParameters::_internal_set_team_separation(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.team_separation_ = value;
}

// repeated string preferred_features = 12 [json_name = "preferredFeatures"];
inline int PatternParameters::_internal_preferred_features_size() const {
  return _internal_preferred_features().size();
}
inline int PatternParameters::preferred_features_size() const {
  return _internal_preferred_features_size();
}
inline void PatternParameters::clear_preferred_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preferred_features_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::add_preferred_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_preferred_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.PatternParameters.preferred_features)
  return _s;
}
inline const ::std::string& PatternParameters::preferred_features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.preferred_features)
  return _internal_preferred_features().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::mutable_preferred_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.PatternParameters.preferred_features)
  return _internal_mutable_preferred_features()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PatternParameters::set_preferred_features(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_preferred_features()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.preferred_features)
}
template <typename Arg_, typename... Args_>
inline void PatternParameters::add_preferred_features(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_preferred_features(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.PatternParameters.preferred_features)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& PatternParameters::preferred_features()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.PatternParameters.preferred_features)
  return _internal_preferred_features();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
PatternParameters::mutable_preferred_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.PatternParameters.preferred_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_preferred_features();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
PatternParameters::_internal_preferred_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preferred_features_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
PatternParameters::_internal_mutable_preferred_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.preferred_features_;
}

// repeated string avoided_features = 13 [json_name = "avoidedFeatures"];
inline int PatternParameters::_internal_avoided_features_size() const {
  return _internal_avoided_features().size();
}
inline int PatternParameters::avoided_features_size() const {
  return _internal_avoided_features_size();
}
inline void PatternParameters::clear_avoided_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avoided_features_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::add_avoided_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_avoided_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.PatternParameters.avoided_features)
  return _s;
}
inline const ::std::string& PatternParameters::avoided_features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.PatternParameters.avoided_features)
  return _internal_avoided_features().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL PatternParameters::mutable_avoided_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.PatternParameters.avoided_features)
  return _internal_mutable_avoided_features()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void PatternParameters::set_avoided_features(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_avoided_features()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.PatternParameters.avoided_features)
}
template <typename Arg_, typename... Args_>
inline void PatternParameters::add_avoided_features(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_avoided_features(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.PatternParameters.avoided_features)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& PatternParameters::avoided_features()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.PatternParameters.avoided_features)
  return _internal_avoided_features();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
PatternParameters::mutable_avoided_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.PatternParameters.avoided_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_avoided_features();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
PatternParameters::_internal_avoided_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avoided_features_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
PatternParameters::_internal_mutable_avoided_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.avoided_features_;
}

// map<string, string> custom_parameters = 14 [json_name = "customParameters"];
inline int PatternParameters::_internal_custom_parameters_size() const {
  return _internal_custom_parameters().size();
}
inline int PatternParameters::custom_parameters_size() const {
  return _internal_custom_parameters_size();
}
inline void PatternParameters::clear_custom_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& PatternParameters::_internal_custom_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& PatternParameters::custom_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.PatternParameters.custom_parameters)
  return _internal_custom_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL PatternParameters::_internal_mutable_custom_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL PatternParameters::mutable_custom_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.PatternParameters.custom_parameters)
  return _internal_mutable_custom_parameters();
}

// -------------------------------------------------------------------

// SpawnConstraint

// string id = 1 [json_name = "id"];
inline void SpawnConstraint::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnConstraint::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnConstraint::set_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnConstraint.id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnConstraint::mutable_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnConstraint.id)
  return _s;
}
inline const ::std::string& SpawnConstraint::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void SpawnConstraint::_internal_set_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnConstraint::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnConstraint::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnConstraint.id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnConstraint::set_allocated_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnConstraint.id)
}

// string name = 2 [json_name = "name"];
inline void SpawnConstraint::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnConstraint::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnConstraint::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnConstraint.name)
}
inline ::std::string* PROTOBUF_NONNULL SpawnConstraint::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnConstraint.name)
  return _s;
}
inline const ::std::string& SpawnConstraint::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void SpawnConstraint::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnConstraint::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnConstraint::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnConstraint.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void SpawnConstraint::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnConstraint.name)
}

// .seshat.ConstraintType type = 3 [json_name = "type"];
inline void SpawnConstraint::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::seshat::ConstraintType SpawnConstraint::type() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.type)
  return _internal_type();
}
inline void SpawnConstraint::set_type(::seshat::ConstraintType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConstraint.type)
}
inline ::seshat::ConstraintType SpawnConstraint::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::ConstraintType>(_impl_.type_);
}
inline void SpawnConstraint::_internal_set_type(::seshat::ConstraintType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// .seshat.ConstraintParameters parameters = 4 [json_name = "parameters"];
inline bool SpawnConstraint::has_parameters() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parameters_ != nullptr);
  return value;
}
inline void SpawnConstraint::clear_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ != nullptr) _impl_.parameters_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::seshat::ConstraintParameters& SpawnConstraint::_internal_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::ConstraintParameters* p = _impl_.parameters_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::ConstraintParameters&>(::seshat::_ConstraintParameters_default_instance_);
}
inline const ::seshat::ConstraintParameters& SpawnConstraint::parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.parameters)
  return _internal_parameters();
}
inline void SpawnConstraint::unsafe_arena_set_allocated_parameters(
    ::seshat::ConstraintParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }
  _impl_.parameters_ = reinterpret_cast<::seshat::ConstraintParameters*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnConstraint.parameters)
}
inline ::seshat::ConstraintParameters* PROTOBUF_NULLABLE SpawnConstraint::release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::ConstraintParameters* released = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::ConstraintParameters* PROTOBUF_NULLABLE SpawnConstraint::unsafe_arena_release_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnConstraint.parameters)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::ConstraintParameters* temp = _impl_.parameters_;
  _impl_.parameters_ = nullptr;
  return temp;
}
inline ::seshat::ConstraintParameters* PROTOBUF_NONNULL SpawnConstraint::_internal_mutable_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parameters_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::ConstraintParameters>(GetArena());
    _impl_.parameters_ = reinterpret_cast<::seshat::ConstraintParameters*>(p);
  }
  return _impl_.parameters_;
}
inline ::seshat::ConstraintParameters* PROTOBUF_NONNULL SpawnConstraint::mutable_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seshat::ConstraintParameters* _msg = _internal_mutable_parameters();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnConstraint.parameters)
  return _msg;
}
inline void SpawnConstraint::set_allocated_parameters(::seshat::ConstraintParameters* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parameters_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.parameters_ = reinterpret_cast<::seshat::ConstraintParameters*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnConstraint.parameters)
}

// bool is_hard_constraint = 5 [json_name = "isHardConstraint"];
inline void SpawnConstraint::clear_is_hard_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_hard_constraint_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool SpawnConstraint::is_hard_constraint() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.is_hard_constraint)
  return _internal_is_hard_constraint();
}
inline void SpawnConstraint::set_is_hard_constraint(bool value) {
  _internal_set_is_hard_constraint(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConstraint.is_hard_constraint)
}
inline bool SpawnConstraint::_internal_is_hard_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_hard_constraint_;
}
inline void SpawnConstraint::_internal_set_is_hard_constraint(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_hard_constraint_ = value;
}

// float violation_penalty = 6 [json_name = "violationPenalty"];
inline void SpawnConstraint::clear_violation_penalty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.violation_penalty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline float SpawnConstraint::violation_penalty() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnConstraint.violation_penalty)
  return _internal_violation_penalty();
}
inline void SpawnConstraint::set_violation_penalty(float value) {
  _internal_set_violation_penalty(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.SpawnConstraint.violation_penalty)
}
inline float SpawnConstraint::_internal_violation_penalty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.violation_penalty_;
}
inline void SpawnConstraint::_internal_set_violation_penalty(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.violation_penalty_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ConstraintParameters

// .seshat.Position min_position = 1 [json_name = "minPosition"];
inline bool ConstraintParameters::has_min_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_position_ != nullptr);
  return value;
}
inline const ::seshat::Position& ConstraintParameters::_internal_min_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.min_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& ConstraintParameters::min_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.min_position)
  return _internal_min_position();
}
inline void ConstraintParameters::unsafe_arena_set_allocated_min_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_position_);
  }
  _impl_.min_position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ConstraintParameters.min_position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE ConstraintParameters::release_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Position* released = _impl_.min_position_;
  _impl_.min_position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE ConstraintParameters::unsafe_arena_release_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConstraintParameters.min_position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Position* temp = _impl_.min_position_;
  _impl_.min_position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::_internal_mutable_min_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.min_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.min_position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.min_position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::mutable_min_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Position* _msg = _internal_mutable_min_position();
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.min_position)
  return _msg;
}
inline void ConstraintParameters::set_allocated_min_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.min_position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ConstraintParameters.min_position)
}

// .seshat.Position max_position = 2 [json_name = "maxPosition"];
inline bool ConstraintParameters::has_max_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_position_ != nullptr);
  return value;
}
inline const ::seshat::Position& ConstraintParameters::_internal_max_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.max_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& ConstraintParameters::max_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.max_position)
  return _internal_max_position();
}
inline void ConstraintParameters::unsafe_arena_set_allocated_max_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_position_);
  }
  _impl_.max_position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ConstraintParameters.max_position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE ConstraintParameters::release_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Position* released = _impl_.max_position_;
  _impl_.max_position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE ConstraintParameters::unsafe_arena_release_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ConstraintParameters.max_position)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Position* temp = _impl_.max_position_;
  _impl_.max_position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::_internal_mutable_max_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.max_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.max_position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.max_position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::mutable_max_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Position* _msg = _internal_mutable_max_position();
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.max_position)
  return _msg;
}
inline void ConstraintParameters::set_allocated_max_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.max_position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ConstraintParameters.max_position)
}

// repeated .seshat.Position forbidden_positions = 3 [json_name = "forbiddenPositions"];
inline int ConstraintParameters::_internal_forbidden_positions_size() const {
  return _internal_forbidden_positions().size();
}
inline int ConstraintParameters::forbidden_positions_size() const {
  return _internal_forbidden_positions_size();
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::mutable_forbidden_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.forbidden_positions)
  return _internal_mutable_forbidden_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL ConstraintParameters::mutable_forbidden_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.forbidden_positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_forbidden_positions();
}
inline const ::seshat::Position& ConstraintParameters::forbidden_positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.forbidden_positions)
  return _internal_forbidden_positions().Get(index);
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::add_forbidden_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Position* _add = _internal_mutable_forbidden_positions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.forbidden_positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>& ConstraintParameters::forbidden_positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.forbidden_positions)
  return _internal_forbidden_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>&
ConstraintParameters::_internal_forbidden_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forbidden_positions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_forbidden_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.forbidden_positions_;
}

// repeated .seshat.Position required_positions = 4 [json_name = "requiredPositions"];
inline int ConstraintParameters::_internal_required_positions_size() const {
  return _internal_required_positions().size();
}
inline int ConstraintParameters::required_positions_size() const {
  return _internal_required_positions_size();
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::mutable_required_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.required_positions)
  return _internal_mutable_required_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL ConstraintParameters::mutable_required_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.required_positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_required_positions();
}
inline const ::seshat::Position& ConstraintParameters::required_positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.required_positions)
  return _internal_required_positions().Get(index);
}
inline ::seshat::Position* PROTOBUF_NONNULL ConstraintParameters::add_required_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Position* _add = _internal_mutable_required_positions()->Add();
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.required_positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>& ConstraintParameters::required_positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.required_positions)
  return _internal_required_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>&
ConstraintParameters::_internal_required_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_positions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_required_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.required_positions_;
}

// bool requires_line_of_sight_to_player = 5 [json_name = "requiresLineOfSightToPlayer"];
inline void ConstraintParameters::clear_requires_line_of_sight_to_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_line_of_sight_to_player_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool ConstraintParameters::requires_line_of_sight_to_player() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.requires_line_of_sight_to_player)
  return _internal_requires_line_of_sight_to_player();
}
inline void ConstraintParameters::set_requires_line_of_sight_to_player(bool value) {
  _internal_set_requires_line_of_sight_to_player(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.requires_line_of_sight_to_player)
}
inline bool ConstraintParameters::_internal_requires_line_of_sight_to_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requires_line_of_sight_to_player_;
}
inline void ConstraintParameters::_internal_set_requires_line_of_sight_to_player(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_line_of_sight_to_player_ = value;
}

// bool requires_line_of_sight_to_center = 6 [json_name = "requiresLineOfSightToCenter"];
inline void ConstraintParameters::clear_requires_line_of_sight_to_center() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_line_of_sight_to_center_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool ConstraintParameters::requires_line_of_sight_to_center() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.requires_line_of_sight_to_center)
  return _internal_requires_line_of_sight_to_center();
}
inline void ConstraintParameters::set_requires_line_of_sight_to_center(bool value) {
  _internal_set_requires_line_of_sight_to_center(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.requires_line_of_sight_to_center)
}
inline bool ConstraintParameters::_internal_requires_line_of_sight_to_center() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requires_line_of_sight_to_center_;
}
inline void ConstraintParameters::_internal_set_requires_line_of_sight_to_center(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requires_line_of_sight_to_center_ = value;
}

// repeated string line_of_sight_targets = 7 [json_name = "lineOfSightTargets"];
inline int ConstraintParameters::_internal_line_of_sight_targets_size() const {
  return _internal_line_of_sight_targets().size();
}
inline int ConstraintParameters::line_of_sight_targets_size() const {
  return _internal_line_of_sight_targets_size();
}
inline void ConstraintParameters::clear_line_of_sight_targets() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_of_sight_targets_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::add_line_of_sight_targets()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_line_of_sight_targets()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConstraintParameters.line_of_sight_targets)
  return _s;
}
inline const ::std::string& ConstraintParameters::line_of_sight_targets(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.line_of_sight_targets)
  return _internal_line_of_sight_targets().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::mutable_line_of_sight_targets(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.line_of_sight_targets)
  return _internal_mutable_line_of_sight_targets()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::set_line_of_sight_targets(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_line_of_sight_targets()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.line_of_sight_targets)
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::add_line_of_sight_targets(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_line_of_sight_targets(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.line_of_sight_targets)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConstraintParameters::line_of_sight_targets()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.line_of_sight_targets)
  return _internal_line_of_sight_targets();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::mutable_line_of_sight_targets() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.line_of_sight_targets)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_line_of_sight_targets();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConstraintParameters::_internal_line_of_sight_targets() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.line_of_sight_targets_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_line_of_sight_targets() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.line_of_sight_targets_;
}

// int32 min_distance_from_player = 8 [json_name = "minDistanceFromPlayer"];
inline void ConstraintParameters::clear_min_distance_from_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_player_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t ConstraintParameters::min_distance_from_player() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.min_distance_from_player)
  return _internal_min_distance_from_player();
}
inline void ConstraintParameters::set_min_distance_from_player(::int32_t value) {
  _internal_set_min_distance_from_player(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.min_distance_from_player)
}
inline ::int32_t ConstraintParameters::_internal_min_distance_from_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_distance_from_player_;
}
inline void ConstraintParameters::_internal_set_min_distance_from_player(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_player_ = value;
}

// int32 max_distance_from_player = 9 [json_name = "maxDistanceFromPlayer"];
inline void ConstraintParameters::clear_max_distance_from_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_player_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t ConstraintParameters::max_distance_from_player() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.max_distance_from_player)
  return _internal_max_distance_from_player();
}
inline void ConstraintParameters::set_max_distance_from_player(::int32_t value) {
  _internal_set_max_distance_from_player(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.max_distance_from_player)
}
inline ::int32_t ConstraintParameters::_internal_max_distance_from_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_distance_from_player_;
}
inline void ConstraintParameters::_internal_set_max_distance_from_player(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_player_ = value;
}

// int32 min_distance_from_entities = 10 [json_name = "minDistanceFromEntities"];
inline void ConstraintParameters::clear_min_distance_from_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int32_t ConstraintParameters::min_distance_from_entities() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.min_distance_from_entities)
  return _internal_min_distance_from_entities();
}
inline void ConstraintParameters::set_min_distance_from_entities(::int32_t value) {
  _internal_set_min_distance_from_entities(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.min_distance_from_entities)
}
inline ::int32_t ConstraintParameters::_internal_min_distance_from_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_distance_from_entities_;
}
inline void ConstraintParameters::_internal_set_min_distance_from_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_entities_ = value;
}

// int32 max_distance_from_entities = 11 [json_name = "maxDistanceFromEntities"];
inline void ConstraintParameters::clear_max_distance_from_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int32_t ConstraintParameters::max_distance_from_entities() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.max_distance_from_entities)
  return _internal_max_distance_from_entities();
}
inline void ConstraintParameters::set_max_distance_from_entities(::int32_t value) {
  _internal_set_max_distance_from_entities(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.max_distance_from_entities)
}
inline ::int32_t ConstraintParameters::_internal_max_distance_from_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_distance_from_entities_;
}
inline void ConstraintParameters::_internal_set_max_distance_from_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_entities_ = value;
}

// repeated string distance_entity_types = 12 [json_name = "distanceEntityTypes"];
inline int ConstraintParameters::_internal_distance_entity_types_size() const {
  return _internal_distance_entity_types().size();
}
inline int ConstraintParameters::distance_entity_types_size() const {
  return _internal_distance_entity_types_size();
}
inline void ConstraintParameters::clear_distance_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.distance_entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::add_distance_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_distance_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConstraintParameters.distance_entity_types)
  return _s;
}
inline const ::std::string& ConstraintParameters::distance_entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.distance_entity_types)
  return _internal_distance_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::mutable_distance_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.distance_entity_types)
  return _internal_mutable_distance_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::set_distance_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_distance_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.distance_entity_types)
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::add_distance_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_distance_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.distance_entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConstraintParameters::distance_entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.distance_entity_types)
  return _internal_distance_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::mutable_distance_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.distance_entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_distance_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConstraintParameters::_internal_distance_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.distance_entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_distance_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.distance_entity_types_;
}

// int32 min_distance_from_walls = 13 [json_name = "minDistanceFromWalls"];
inline void ConstraintParameters::clear_min_distance_from_walls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_walls_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline ::int32_t ConstraintParameters::min_distance_from_walls() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.min_distance_from_walls)
  return _internal_min_distance_from_walls();
}
inline void ConstraintParameters::set_min_distance_from_walls(::int32_t value) {
  _internal_set_min_distance_from_walls(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.min_distance_from_walls)
}
inline ::int32_t ConstraintParameters::_internal_min_distance_from_walls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_distance_from_walls_;
}
inline void ConstraintParameters::_internal_set_min_distance_from_walls(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_distance_from_walls_ = value;
}

// int32 max_distance_from_walls = 14 [json_name = "maxDistanceFromWalls"];
inline void ConstraintParameters::clear_max_distance_from_walls() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_walls_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline ::int32_t ConstraintParameters::max_distance_from_walls() const {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.max_distance_from_walls)
  return _internal_max_distance_from_walls();
}
inline void ConstraintParameters::set_max_distance_from_walls(::int32_t value) {
  _internal_set_max_distance_from_walls(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.max_distance_from_walls)
}
inline ::int32_t ConstraintParameters::_internal_max_distance_from_walls() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_distance_from_walls_;
}
inline void ConstraintParameters::_internal_set_max_distance_from_walls(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_distance_from_walls_ = value;
}

// repeated string required_features = 15 [json_name = "requiredFeatures"];
inline int ConstraintParameters::_internal_required_features_size() const {
  return _internal_required_features().size();
}
inline int ConstraintParameters::required_features_size() const {
  return _internal_required_features_size();
}
inline void ConstraintParameters::clear_required_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_features_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::add_required_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_required_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConstraintParameters.required_features)
  return _s;
}
inline const ::std::string& ConstraintParameters::required_features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.required_features)
  return _internal_required_features().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::mutable_required_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.required_features)
  return _internal_mutable_required_features()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::set_required_features(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_required_features()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.required_features)
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::add_required_features(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_required_features(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.required_features)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConstraintParameters::required_features()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.required_features)
  return _internal_required_features();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::mutable_required_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.required_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_required_features();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConstraintParameters::_internal_required_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_features_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_required_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.required_features_;
}

// repeated string avoided_features = 16 [json_name = "avoidedFeatures"];
inline int ConstraintParameters::_internal_avoided_features_size() const {
  return _internal_avoided_features().size();
}
inline int ConstraintParameters::avoided_features_size() const {
  return _internal_avoided_features_size();
}
inline void ConstraintParameters::clear_avoided_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avoided_features_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::add_avoided_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_avoided_features()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ConstraintParameters.avoided_features)
  return _s;
}
inline const ::std::string& ConstraintParameters::avoided_features(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ConstraintParameters.avoided_features)
  return _internal_avoided_features().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ConstraintParameters::mutable_avoided_features(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ConstraintParameters.avoided_features)
  return _internal_mutable_avoided_features()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::set_avoided_features(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_avoided_features()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ConstraintParameters.avoided_features)
}
template <typename Arg_, typename... Args_>
inline void ConstraintParameters::add_avoided_features(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_avoided_features(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ConstraintParameters.avoided_features)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ConstraintParameters::avoided_features()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ConstraintParameters.avoided_features)
  return _internal_avoided_features();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::mutable_avoided_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ConstraintParameters.avoided_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_avoided_features();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ConstraintParameters::_internal_avoided_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avoided_features_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ConstraintParameters::_internal_mutable_avoided_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.avoided_features_;
}

// map<string, string> custom_parameters = 17 [json_name = "customParameters"];
inline int ConstraintParameters::_internal_custom_parameters_size() const {
  return _internal_custom_parameters().size();
}
inline int ConstraintParameters::custom_parameters_size() const {
  return _internal_custom_parameters_size();
}
inline void ConstraintParameters::clear_custom_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_parameters_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConstraintParameters::_internal_custom_parameters() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_parameters_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& ConstraintParameters::custom_parameters() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.ConstraintParameters.custom_parameters)
  return _internal_custom_parameters();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConstraintParameters::_internal_mutable_custom_parameters() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_parameters_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL ConstraintParameters::mutable_custom_parameters()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.ConstraintParameters.custom_parameters)
  return _internal_mutable_custom_parameters();
}

// -------------------------------------------------------------------

// CreateSpawnEngineRequest

// string room_id = 1 [json_name = "roomId"];
inline void CreateSpawnEngineRequest::clear_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CreateSpawnEngineRequest::room_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineRequest.room_id)
  return _internal_room_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateSpawnEngineRequest::set_room_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CreateSpawnEngineRequest.room_id)
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::mutable_room_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_room_id();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineRequest.room_id)
  return _s;
}
inline const ::std::string& CreateSpawnEngineRequest::_internal_room_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_id_.Get();
}
inline void CreateSpawnEngineRequest::_internal_set_room_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.room_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::_internal_mutable_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.room_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateSpawnEngineRequest::release_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineRequest.room_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.room_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_id_.Set("", GetArena());
  }
  return released;
}
inline void CreateSpawnEngineRequest::set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.room_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_id_.IsDefault()) {
    _impl_.room_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineRequest.room_id)
}

// string name = 2 [json_name = "name"];
inline void CreateSpawnEngineRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& CreateSpawnEngineRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateSpawnEngineRequest::set_name(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CreateSpawnEngineRequest.name)
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::mutable_name()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineRequest.name)
  return _s;
}
inline const ::std::string& CreateSpawnEngineRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void CreateSpawnEngineRequest::_internal_set_name(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateSpawnEngineRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineRequest.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.name_.Set("", GetArena());
  }
  return released;
}
inline void CreateSpawnEngineRequest::set_allocated_name(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.name_.IsDefault()) {
    _impl_.name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineRequest.name)
}

// string description = 3 [json_name = "description"];
inline void CreateSpawnEngineRequest::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& CreateSpawnEngineRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateSpawnEngineRequest::set_description(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CreateSpawnEngineRequest.description)
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::mutable_description()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineRequest.description)
  return _s;
}
inline const ::std::string& CreateSpawnEngineRequest::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void CreateSpawnEngineRequest::_internal_set_description(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.description_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnEngineRequest::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.description_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateSpawnEngineRequest::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineRequest.description)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.description_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.description_.Set("", GetArena());
  }
  return released;
}
inline void CreateSpawnEngineRequest::set_allocated_description(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.description_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.description_.IsDefault()) {
    _impl_.description_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineRequest.description)
}

// .seshat.SpawnConfiguration config = 4 [json_name = "config"];
inline bool CreateSpawnEngineRequest::has_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.config_ != nullptr);
  return value;
}
inline void CreateSpawnEngineRequest::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ != nullptr) _impl_.config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::seshat::SpawnConfiguration& CreateSpawnEngineRequest::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnConfiguration* p = _impl_.config_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnConfiguration&>(::seshat::_SpawnConfiguration_default_instance_);
}
inline const ::seshat::SpawnConfiguration& CreateSpawnEngineRequest::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineRequest.config)
  return _internal_config();
}
inline void CreateSpawnEngineRequest::unsafe_arena_set_allocated_config(
    ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }
  _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnEngineRequest.config)
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE CreateSpawnEngineRequest::release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::SpawnConfiguration* released = _impl_.config_;
  _impl_.config_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NULLABLE CreateSpawnEngineRequest::unsafe_arena_release_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineRequest.config)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::SpawnConfiguration* temp = _impl_.config_;
  _impl_.config_ = nullptr;
  return temp;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NONNULL CreateSpawnEngineRequest::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnConfiguration>(GetArena());
    _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(p);
  }
  return _impl_.config_;
}
inline ::seshat::SpawnConfiguration* PROTOBUF_NONNULL CreateSpawnEngineRequest::mutable_config()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::SpawnConfiguration* _msg = _internal_mutable_config();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineRequest.config)
  return _msg;
}
inline void CreateSpawnEngineRequest::set_allocated_config(::seshat::SpawnConfiguration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.config_ = reinterpret_cast<::seshat::SpawnConfiguration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineRequest.config)
}

// .seshat.SelectionTable entity_table = 5 [json_name = "entityTable"];
inline bool CreateSpawnEngineRequest::has_entity_table() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_table_ != nullptr);
  return value;
}
inline const ::seshat::SelectionTable& CreateSpawnEngineRequest::_internal_entity_table() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SelectionTable* p = _impl_.entity_table_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SelectionTable&>(::seshat::_SelectionTable_default_instance_);
}
inline const ::seshat::SelectionTable& CreateSpawnEngineRequest::entity_table() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineRequest.entity_table)
  return _internal_entity_table();
}
inline void CreateSpawnEngineRequest::unsafe_arena_set_allocated_entity_table(
    ::seshat::SelectionTable* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_table_);
  }
  _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnEngineRequest.entity_table)
}
inline ::seshat::SelectionTable* PROTOBUF_NULLABLE CreateSpawnEngineRequest::release_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::SelectionTable* released = _impl_.entity_table_;
  _impl_.entity_table_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SelectionTable* PROTOBUF_NULLABLE CreateSpawnEngineRequest::unsafe_arena_release_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineRequest.entity_table)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::seshat::SelectionTable* temp = _impl_.entity_table_;
  _impl_.entity_table_ = nullptr;
  return temp;
}
inline ::seshat::SelectionTable* PROTOBUF_NONNULL CreateSpawnEngineRequest::_internal_mutable_entity_table() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_table_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SelectionTable>(GetArena());
    _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(p);
  }
  return _impl_.entity_table_;
}
inline ::seshat::SelectionTable* PROTOBUF_NONNULL CreateSpawnEngineRequest::mutable_entity_table()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::seshat::SelectionTable* _msg = _internal_mutable_entity_table();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineRequest.entity_table)
  return _msg;
}
inline void CreateSpawnEngineRequest::set_allocated_entity_table(::seshat::SelectionTable* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_table_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.entity_table_ = reinterpret_cast<::seshat::SelectionTable*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineRequest.entity_table)
}

// -------------------------------------------------------------------

// CreateSpawnEngineResponse

// .seshat.SpawnEngine engine = 1 [json_name = "engine"];
inline bool CreateSpawnEngineResponse::has_engine() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.engine_ != nullptr);
  return value;
}
inline void CreateSpawnEngineResponse::clear_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.engine_ != nullptr) _impl_.engine_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnEngine& CreateSpawnEngineResponse::_internal_engine() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnEngine* p = _impl_.engine_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnEngine&>(::seshat::_SpawnEngine_default_instance_);
}
inline const ::seshat::SpawnEngine& CreateSpawnEngineResponse::engine() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineResponse.engine)
  return _internal_engine();
}
inline void CreateSpawnEngineResponse::unsafe_arena_set_allocated_engine(
    ::seshat::SpawnEngine* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engine_);
  }
  _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnEngineResponse.engine)
}
inline ::seshat::SpawnEngine* PROTOBUF_NULLABLE CreateSpawnEngineResponse::release_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnEngine* released = _impl_.engine_;
  _impl_.engine_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnEngine* PROTOBUF_NULLABLE CreateSpawnEngineResponse::unsafe_arena_release_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineResponse.engine)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnEngine* temp = _impl_.engine_;
  _impl_.engine_ = nullptr;
  return temp;
}
inline ::seshat::SpawnEngine* PROTOBUF_NONNULL CreateSpawnEngineResponse::_internal_mutable_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.engine_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnEngine>(GetArena());
    _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(p);
  }
  return _impl_.engine_;
}
inline ::seshat::SpawnEngine* PROTOBUF_NONNULL CreateSpawnEngineResponse::mutable_engine()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnEngine* _msg = _internal_mutable_engine();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineResponse.engine)
  return _msg;
}
inline void CreateSpawnEngineResponse::set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engine_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineResponse.engine)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool CreateSpawnEngineResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& CreateSpawnEngineResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& CreateSpawnEngineResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnEngineResponse.status)
  return _internal_status();
}
inline void CreateSpawnEngineResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnEngineResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateSpawnEngineResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateSpawnEngineResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnEngineResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateSpawnEngineResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateSpawnEngineResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnEngineResponse.status)
  return _msg;
}
inline void CreateSpawnEngineResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnEngineResponse.status)
}

// -------------------------------------------------------------------

// GetSpawnEngineRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetSpawnEngineRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetSpawnEngineRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnEngineRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnEngineRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnEngineRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnEngineRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnEngineRequest.engine_id)
  return _s;
}
inline const ::std::string& GetSpawnEngineRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetSpawnEngineRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnEngineRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnEngineRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnEngineRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnEngineRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnEngineRequest.engine_id)
}

// string room_id = 2 [json_name = "roomId"];
inline void GetSpawnEngineRequest::clear_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetSpawnEngineRequest::room_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnEngineRequest.room_id)
  return _internal_room_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnEngineRequest::set_room_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnEngineRequest.room_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnEngineRequest::mutable_room_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_room_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnEngineRequest.room_id)
  return _s;
}
inline const ::std::string& GetSpawnEngineRequest::_internal_room_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_id_.Get();
}
inline void GetSpawnEngineRequest::_internal_set_room_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnEngineRequest::_internal_mutable_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.room_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnEngineRequest::release_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnEngineRequest.room_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.room_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnEngineRequest::set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.room_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_id_.IsDefault()) {
    _impl_.room_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnEngineRequest.room_id)
}

// -------------------------------------------------------------------

// GetSpawnEngineResponse

// .seshat.SpawnEngine engine = 1 [json_name = "engine"];
inline bool GetSpawnEngineResponse::has_engine() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.engine_ != nullptr);
  return value;
}
inline void GetSpawnEngineResponse::clear_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.engine_ != nullptr) _impl_.engine_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnEngine& GetSpawnEngineResponse::_internal_engine() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnEngine* p = _impl_.engine_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnEngine&>(::seshat::_SpawnEngine_default_instance_);
}
inline const ::seshat::SpawnEngine& GetSpawnEngineResponse::engine() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnEngineResponse.engine)
  return _internal_engine();
}
inline void GetSpawnEngineResponse::unsafe_arena_set_allocated_engine(
    ::seshat::SpawnEngine* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engine_);
  }
  _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSpawnEngineResponse.engine)
}
inline ::seshat::SpawnEngine* PROTOBUF_NULLABLE GetSpawnEngineResponse::release_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnEngine* released = _impl_.engine_;
  _impl_.engine_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnEngine* PROTOBUF_NULLABLE GetSpawnEngineResponse::unsafe_arena_release_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnEngineResponse.engine)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnEngine* temp = _impl_.engine_;
  _impl_.engine_ = nullptr;
  return temp;
}
inline ::seshat::SpawnEngine* PROTOBUF_NONNULL GetSpawnEngineResponse::_internal_mutable_engine() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.engine_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnEngine>(GetArena());
    _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(p);
  }
  return _impl_.engine_;
}
inline ::seshat::SpawnEngine* PROTOBUF_NONNULL GetSpawnEngineResponse::mutable_engine()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnEngine* _msg = _internal_mutable_engine();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnEngineResponse.engine)
  return _msg;
}
inline void GetSpawnEngineResponse::set_allocated_engine(::seshat::SpawnEngine* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.engine_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.engine_ = reinterpret_cast<::seshat::SpawnEngine*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnEngineResponse.engine)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetSpawnEngineResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetSpawnEngineResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetSpawnEngineResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnEngineResponse.status)
  return _internal_status();
}
inline void GetSpawnEngineResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSpawnEngineResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnEngineResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnEngineResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnEngineResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnEngineResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnEngineResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnEngineResponse.status)
  return _msg;
}
inline void GetSpawnEngineResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnEngineResponse.status)
}

// -------------------------------------------------------------------

// DeleteSpawnEngineRequest

// string engine_id = 1 [json_name = "engineId"];
inline void DeleteSpawnEngineRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DeleteSpawnEngineRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DeleteSpawnEngineRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DeleteSpawnEngineRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.DeleteSpawnEngineRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL DeleteSpawnEngineRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.DeleteSpawnEngineRequest.engine_id)
  return _s;
}
inline const ::std::string& DeleteSpawnEngineRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void DeleteSpawnEngineRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DeleteSpawnEngineRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DeleteSpawnEngineRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DeleteSpawnEngineRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void DeleteSpawnEngineRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.DeleteSpawnEngineRequest.engine_id)
}

// bool despawn_entities = 2 [json_name = "despawnEntities"];
inline void DeleteSpawnEngineRequest::clear_despawn_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.despawn_entities_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool DeleteSpawnEngineRequest::despawn_entities() const {
  // @@protoc_insertion_point(field_get:seshat.DeleteSpawnEngineRequest.despawn_entities)
  return _internal_despawn_entities();
}
inline void DeleteSpawnEngineRequest::set_despawn_entities(bool value) {
  _internal_set_despawn_entities(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.DeleteSpawnEngineRequest.despawn_entities)
}
inline bool DeleteSpawnEngineRequest::_internal_despawn_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.despawn_entities_;
}
inline void DeleteSpawnEngineRequest::_internal_set_despawn_entities(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.despawn_entities_ = value;
}

// -------------------------------------------------------------------

// DeleteSpawnEngineResponse

// int32 despawned_entities = 1 [json_name = "despawnedEntities"];
inline void DeleteSpawnEngineResponse::clear_despawned_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.despawned_entities_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t DeleteSpawnEngineResponse::despawned_entities() const {
  // @@protoc_insertion_point(field_get:seshat.DeleteSpawnEngineResponse.despawned_entities)
  return _internal_despawned_entities();
}
inline void DeleteSpawnEngineResponse::set_despawned_entities(::int32_t value) {
  _internal_set_despawned_entities(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.DeleteSpawnEngineResponse.despawned_entities)
}
inline ::int32_t DeleteSpawnEngineResponse::_internal_despawned_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.despawned_entities_;
}
inline void DeleteSpawnEngineResponse::_internal_set_despawned_entities(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.despawned_entities_ = value;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool DeleteSpawnEngineResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& DeleteSpawnEngineResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& DeleteSpawnEngineResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DeleteSpawnEngineResponse.status)
  return _internal_status();
}
inline void DeleteSpawnEngineResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.DeleteSpawnEngineResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE DeleteSpawnEngineResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE DeleteSpawnEngineResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DeleteSpawnEngineResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL DeleteSpawnEngineResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL DeleteSpawnEngineResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.DeleteSpawnEngineResponse.status)
  return _msg;
}
inline void DeleteSpawnEngineResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.DeleteSpawnEngineResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnEntityRequest

// string engine_id = 1 [json_name = "engineId"];
inline void SpawnEntityRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnEntityRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEntityRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEntityRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityRequest.engine_id)
  return _s;
}
inline const ::std::string& SpawnEntityRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void SpawnEntityRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEntityRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEntityRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityRequest.engine_id)
}

// string entity_type = 2 [json_name = "entityType"];
inline void SpawnEntityRequest::clear_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnEntityRequest::entity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityRequest.entity_type)
  return _internal_entity_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEntityRequest::set_entity_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEntityRequest.entity_type)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::mutable_entity_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_type();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityRequest.entity_type)
  return _s;
}
inline const ::std::string& SpawnEntityRequest::_internal_entity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_type_.Get();
}
inline void SpawnEntityRequest::_internal_set_entity_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::_internal_mutable_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEntityRequest::release_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityRequest.entity_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.entity_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEntityRequest::set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_type_.IsDefault()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityRequest.entity_type)
}

// .seshat.Position preferred_position = 3 [json_name = "preferredPosition"];
inline bool SpawnEntityRequest::has_preferred_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.preferred_position_ != nullptr);
  return value;
}
inline const ::seshat::Position& SpawnEntityRequest::_internal_preferred_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.preferred_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& SpawnEntityRequest::preferred_position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityRequest.preferred_position)
  return _internal_preferred_position();
}
inline void SpawnEntityRequest::unsafe_arena_set_allocated_preferred_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferred_position_);
  }
  _impl_.preferred_position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnEntityRequest.preferred_position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE SpawnEntityRequest::release_preferred_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Position* released = _impl_.preferred_position_;
  _impl_.preferred_position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE SpawnEntityRequest::unsafe_arena_release_preferred_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityRequest.preferred_position)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Position* temp = _impl_.preferred_position_;
  _impl_.preferred_position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL SpawnEntityRequest::_internal_mutable_preferred_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.preferred_position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.preferred_position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.preferred_position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL SpawnEntityRequest::mutable_preferred_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::Position* _msg = _internal_mutable_preferred_position();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityRequest.preferred_position)
  return _msg;
}
inline void SpawnEntityRequest::set_allocated_preferred_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.preferred_position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.preferred_position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityRequest.preferred_position)
}

// string pattern_id = 4 [json_name = "patternId"];
inline void SpawnEntityRequest::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& SpawnEntityRequest::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityRequest.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnEntityRequest::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnEntityRequest.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityRequest.pattern_id)
  return _s;
}
inline const ::std::string& SpawnEntityRequest::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void SpawnEntityRequest::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityRequest::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnEntityRequest::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityRequest.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnEntityRequest::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityRequest.pattern_id)
}

// map<string, string> spawn_options = 5 [json_name = "spawnOptions"];
inline int SpawnEntityRequest::_internal_spawn_options_size() const {
  return _internal_spawn_options().size();
}
inline int SpawnEntityRequest::spawn_options_size() const {
  return _internal_spawn_options_size();
}
inline void SpawnEntityRequest::clear_spawn_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnEntityRequest::_internal_spawn_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnEntityRequest::spawn_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnEntityRequest.spawn_options)
  return _internal_spawn_options();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnEntityRequest::_internal_mutable_spawn_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.spawn_options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnEntityRequest::mutable_spawn_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnEntityRequest.spawn_options)
  return _internal_mutable_spawn_options();
}

// -------------------------------------------------------------------

// SpawnEntityResponse

// .seshat.SpawnedEntity spawned_entity = 1 [json_name = "spawnedEntity"];
inline bool SpawnEntityResponse::has_spawned_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spawned_entity_ != nullptr);
  return value;
}
inline void SpawnEntityResponse::clear_spawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spawned_entity_ != nullptr) _impl_.spawned_entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnedEntity& SpawnEntityResponse::_internal_spawned_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnedEntity* p = _impl_.spawned_entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnedEntity&>(::seshat::_SpawnedEntity_default_instance_);
}
inline const ::seshat::SpawnedEntity& SpawnEntityResponse::spawned_entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityResponse.spawned_entity)
  return _internal_spawned_entity();
}
inline void SpawnEntityResponse::unsafe_arena_set_allocated_spawned_entity(
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawned_entity_);
  }
  _impl_.spawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnEntityResponse.spawned_entity)
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE SpawnEntityResponse::release_spawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnedEntity* released = _impl_.spawned_entity_;
  _impl_.spawned_entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE SpawnEntityResponse::unsafe_arena_release_spawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityResponse.spawned_entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnedEntity* temp = _impl_.spawned_entity_;
  _impl_.spawned_entity_ = nullptr;
  return temp;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnEntityResponse::_internal_mutable_spawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spawned_entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnedEntity>(GetArena());
    _impl_.spawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(p);
  }
  return _impl_.spawned_entity_;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnEntityResponse::mutable_spawned_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnedEntity* _msg = _internal_mutable_spawned_entity();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityResponse.spawned_entity)
  return _msg;
}
inline void SpawnEntityResponse::set_allocated_spawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawned_entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityResponse.spawned_entity)
}

// repeated string constraint_violations = 2 [json_name = "constraintViolations"];
inline int SpawnEntityResponse::_internal_constraint_violations_size() const {
  return _internal_constraint_violations().size();
}
inline int SpawnEntityResponse::constraint_violations_size() const {
  return _internal_constraint_violations_size();
}
inline void SpawnEntityResponse::clear_constraint_violations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_violations_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityResponse::add_constraint_violations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_constraint_violations()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnEntityResponse.constraint_violations)
  return _s;
}
inline const ::std::string& SpawnEntityResponse::constraint_violations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityResponse.constraint_violations)
  return _internal_constraint_violations().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnEntityResponse::mutable_constraint_violations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityResponse.constraint_violations)
  return _internal_mutable_constraint_violations()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnEntityResponse::set_constraint_violations(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_constraint_violations()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnEntityResponse.constraint_violations)
}
template <typename Arg_, typename... Args_>
inline void SpawnEntityResponse::add_constraint_violations(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_constraint_violations(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnEntityResponse.constraint_violations)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnEntityResponse::constraint_violations()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnEntityResponse.constraint_violations)
  return _internal_constraint_violations();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnEntityResponse::mutable_constraint_violations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnEntityResponse.constraint_violations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constraint_violations();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnEntityResponse::_internal_constraint_violations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_violations_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnEntityResponse::_internal_mutable_constraint_violations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constraint_violations_;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool SpawnEntityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& SpawnEntityResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& SpawnEntityResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnEntityResponse.status)
  return _internal_status();
}
inline void SpawnEntityResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnEntityResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnEntityResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnEntityResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnEntityResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnEntityResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnEntityResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnEntityResponse.status)
  return _msg;
}
inline void SpawnEntityResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnEntityResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnMultipleEntitiesRequest

// string engine_id = 1 [json_name = "engineId"];
inline void SpawnMultipleEntitiesRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnMultipleEntitiesRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnMultipleEntitiesRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnMultipleEntitiesRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesRequest.engine_id)
  return _s;
}
inline const ::std::string& SpawnMultipleEntitiesRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void SpawnMultipleEntitiesRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnMultipleEntitiesRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnMultipleEntitiesRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnMultipleEntitiesRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnMultipleEntitiesRequest.engine_id)
}

// int32 count = 2 [json_name = "count"];
inline void SpawnMultipleEntitiesRequest::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SpawnMultipleEntitiesRequest::count() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesRequest.count)
  return _internal_count();
}
inline void SpawnMultipleEntitiesRequest::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SpawnMultipleEntitiesRequest.count)
}
inline ::int32_t SpawnMultipleEntitiesRequest::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void SpawnMultipleEntitiesRequest::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// repeated string entity_types = 3 [json_name = "entityTypes"];
inline int SpawnMultipleEntitiesRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int SpawnMultipleEntitiesRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void SpawnMultipleEntitiesRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::add_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnMultipleEntitiesRequest.entity_types)
  return _s;
}
inline const ::std::string& SpawnMultipleEntitiesRequest::entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesRequest.entity_types)
  return _internal_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::mutable_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesRequest.entity_types)
  return _internal_mutable_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnMultipleEntitiesRequest::set_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnMultipleEntitiesRequest.entity_types)
}
template <typename Arg_, typename... Args_>
inline void SpawnMultipleEntitiesRequest::add_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnMultipleEntitiesRequest.entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnMultipleEntitiesRequest::entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnMultipleEntitiesRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnMultipleEntitiesRequest::mutable_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnMultipleEntitiesRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnMultipleEntitiesRequest::_internal_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnMultipleEntitiesRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// string pattern_id = 4 [json_name = "patternId"];
inline void SpawnMultipleEntitiesRequest::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnMultipleEntitiesRequest::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesRequest.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnMultipleEntitiesRequest::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnMultipleEntitiesRequest.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesRequest.pattern_id)
  return _s;
}
inline const ::std::string& SpawnMultipleEntitiesRequest::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void SpawnMultipleEntitiesRequest::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnMultipleEntitiesRequest::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnMultipleEntitiesRequest.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnMultipleEntitiesRequest::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnMultipleEntitiesRequest.pattern_id)
}

// map<string, string> spawn_options = 5 [json_name = "spawnOptions"];
inline int SpawnMultipleEntitiesRequest::_internal_spawn_options_size() const {
  return _internal_spawn_options().size();
}
inline int SpawnMultipleEntitiesRequest::spawn_options_size() const {
  return _internal_spawn_options_size();
}
inline void SpawnMultipleEntitiesRequest::clear_spawn_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnMultipleEntitiesRequest::_internal_spawn_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnMultipleEntitiesRequest::spawn_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnMultipleEntitiesRequest.spawn_options)
  return _internal_spawn_options();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::_internal_mutable_spawn_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.spawn_options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnMultipleEntitiesRequest::mutable_spawn_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnMultipleEntitiesRequest.spawn_options)
  return _internal_mutable_spawn_options();
}

// -------------------------------------------------------------------

// SpawnMultipleEntitiesResponse

// repeated .seshat.SpawnedEntity spawned_entities = 1 [json_name = "spawnedEntities"];
inline int SpawnMultipleEntitiesResponse::_internal_spawned_entities_size() const {
  return _internal_spawned_entities().size();
}
inline int SpawnMultipleEntitiesResponse::spawned_entities_size() const {
  return _internal_spawned_entities_size();
}
inline void SpawnMultipleEntitiesResponse::clear_spawned_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawned_entities_.Clear();
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::mutable_spawned_entities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesResponse.spawned_entities)
  return _internal_mutable_spawned_entities()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::mutable_spawned_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnMultipleEntitiesResponse.spawned_entities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_spawned_entities();
}
inline const ::seshat::SpawnedEntity& SpawnMultipleEntitiesResponse::spawned_entities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesResponse.spawned_entities)
  return _internal_spawned_entities().Get(index);
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::add_spawned_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnedEntity* _add = _internal_mutable_spawned_entities()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnMultipleEntitiesResponse.spawned_entities)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& SpawnMultipleEntitiesResponse::spawned_entities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnMultipleEntitiesResponse.spawned_entities)
  return _internal_spawned_entities();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>&
SpawnMultipleEntitiesResponse::_internal_spawned_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawned_entities_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL
SpawnMultipleEntitiesResponse::_internal_mutable_spawned_entities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.spawned_entities_;
}

// repeated string warnings = 2 [json_name = "warnings"];
inline int SpawnMultipleEntitiesResponse::_internal_warnings_size() const {
  return _internal_warnings().size();
}
inline int SpawnMultipleEntitiesResponse::warnings_size() const {
  return _internal_warnings_size();
}
inline void SpawnMultipleEntitiesResponse::clear_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warnings_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::add_warnings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_warnings()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnMultipleEntitiesResponse.warnings)
  return _s;
}
inline const ::std::string& SpawnMultipleEntitiesResponse::warnings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesResponse.warnings)
  return _internal_warnings().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::mutable_warnings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesResponse.warnings)
  return _internal_mutable_warnings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnMultipleEntitiesResponse::set_warnings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_warnings()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnMultipleEntitiesResponse.warnings)
}
template <typename Arg_, typename... Args_>
inline void SpawnMultipleEntitiesResponse::add_warnings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_warnings(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnMultipleEntitiesResponse.warnings)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnMultipleEntitiesResponse::warnings()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnMultipleEntitiesResponse.warnings)
  return _internal_warnings();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnMultipleEntitiesResponse::mutable_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnMultipleEntitiesResponse.warnings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_warnings();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnMultipleEntitiesResponse::_internal_warnings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warnings_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnMultipleEntitiesResponse::_internal_mutable_warnings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.warnings_;
}

// .seshat.SpawnAttemptResult attempt_result = 3 [json_name = "attemptResult"];
inline bool SpawnMultipleEntitiesResponse::has_attempt_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attempt_result_ != nullptr);
  return value;
}
inline void SpawnMultipleEntitiesResponse::clear_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ != nullptr) _impl_.attempt_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnAttemptResult& SpawnMultipleEntitiesResponse::_internal_attempt_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnAttemptResult* p = _impl_.attempt_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnAttemptResult&>(::seshat::_SpawnAttemptResult_default_instance_);
}
inline const ::seshat::SpawnAttemptResult& SpawnMultipleEntitiesResponse::attempt_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesResponse.attempt_result)
  return _internal_attempt_result();
}
inline void SpawnMultipleEntitiesResponse::unsafe_arena_set_allocated_attempt_result(
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }
  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnMultipleEntitiesResponse.attempt_result)
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnMultipleEntitiesResponse::release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnAttemptResult* released = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnMultipleEntitiesResponse::unsafe_arena_release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnMultipleEntitiesResponse.attempt_result)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnAttemptResult* temp = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  return temp;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::_internal_mutable_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnAttemptResult>(GetArena());
    _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(p);
  }
  return _impl_.attempt_result_;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::mutable_attempt_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnAttemptResult* _msg = _internal_mutable_attempt_result();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesResponse.attempt_result)
  return _msg;
}
inline void SpawnMultipleEntitiesResponse::set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnMultipleEntitiesResponse.attempt_result)
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool SpawnMultipleEntitiesResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& SpawnMultipleEntitiesResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& SpawnMultipleEntitiesResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnMultipleEntitiesResponse.status)
  return _internal_status();
}
inline void SpawnMultipleEntitiesResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnMultipleEntitiesResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnMultipleEntitiesResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnMultipleEntitiesResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnMultipleEntitiesResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnMultipleEntitiesResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnMultipleEntitiesResponse.status)
  return _msg;
}
inline void SpawnMultipleEntitiesResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnMultipleEntitiesResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnFromPatternRequest

// string engine_id = 1 [json_name = "engineId"];
inline void SpawnFromPatternRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnFromPatternRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnFromPatternRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnFromPatternRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnFromPatternRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternRequest.engine_id)
  return _s;
}
inline const ::std::string& SpawnFromPatternRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void SpawnFromPatternRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnFromPatternRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnFromPatternRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnFromPatternRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnFromPatternRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnFromPatternRequest.engine_id)
}

// string pattern_id = 2 [json_name = "patternId"];
inline void SpawnFromPatternRequest::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnFromPatternRequest::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternRequest.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnFromPatternRequest::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnFromPatternRequest.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnFromPatternRequest::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternRequest.pattern_id)
  return _s;
}
inline const ::std::string& SpawnFromPatternRequest::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void SpawnFromPatternRequest::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnFromPatternRequest::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnFromPatternRequest::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnFromPatternRequest.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnFromPatternRequest::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnFromPatternRequest.pattern_id)
}

// map<string, string> pattern_options = 3 [json_name = "patternOptions"];
inline int SpawnFromPatternRequest::_internal_pattern_options_size() const {
  return _internal_pattern_options().size();
}
inline int SpawnFromPatternRequest::pattern_options_size() const {
  return _internal_pattern_options_size();
}
inline void SpawnFromPatternRequest::clear_pattern_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_options_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnFromPatternRequest::_internal_pattern_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_options_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnFromPatternRequest::pattern_options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnFromPatternRequest.pattern_options)
  return _internal_pattern_options();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnFromPatternRequest::_internal_mutable_pattern_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pattern_options_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnFromPatternRequest::mutable_pattern_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnFromPatternRequest.pattern_options)
  return _internal_mutable_pattern_options();
}

// -------------------------------------------------------------------

// SpawnFromPatternResponse

// repeated .seshat.SpawnedEntity spawned_entities = 1 [json_name = "spawnedEntities"];
inline int SpawnFromPatternResponse::_internal_spawned_entities_size() const {
  return _internal_spawned_entities().size();
}
inline int SpawnFromPatternResponse::spawned_entities_size() const {
  return _internal_spawned_entities_size();
}
inline void SpawnFromPatternResponse::clear_spawned_entities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawned_entities_.Clear();
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnFromPatternResponse::mutable_spawned_entities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternResponse.spawned_entities)
  return _internal_mutable_spawned_entities()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL SpawnFromPatternResponse::mutable_spawned_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnFromPatternResponse.spawned_entities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_spawned_entities();
}
inline const ::seshat::SpawnedEntity& SpawnFromPatternResponse::spawned_entities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternResponse.spawned_entities)
  return _internal_spawned_entities().Get(index);
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnFromPatternResponse::add_spawned_entities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnedEntity* _add = _internal_mutable_spawned_entities()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnFromPatternResponse.spawned_entities)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& SpawnFromPatternResponse::spawned_entities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnFromPatternResponse.spawned_entities)
  return _internal_spawned_entities();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>&
SpawnFromPatternResponse::_internal_spawned_entities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawned_entities_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL
SpawnFromPatternResponse::_internal_mutable_spawned_entities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.spawned_entities_;
}

// .seshat.SpawnPattern pattern_used = 2 [json_name = "patternUsed"];
inline bool SpawnFromPatternResponse::has_pattern_used() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pattern_used_ != nullptr);
  return value;
}
inline void SpawnFromPatternResponse::clear_pattern_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_used_ != nullptr) _impl_.pattern_used_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnPattern& SpawnFromPatternResponse::_internal_pattern_used() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnPattern* p = _impl_.pattern_used_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnPattern&>(::seshat::_SpawnPattern_default_instance_);
}
inline const ::seshat::SpawnPattern& SpawnFromPatternResponse::pattern_used() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternResponse.pattern_used)
  return _internal_pattern_used();
}
inline void SpawnFromPatternResponse::unsafe_arena_set_allocated_pattern_used(
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_used_);
  }
  _impl_.pattern_used_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnFromPatternResponse.pattern_used)
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE SpawnFromPatternResponse::release_pattern_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* released = _impl_.pattern_used_;
  _impl_.pattern_used_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE SpawnFromPatternResponse::unsafe_arena_release_pattern_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnFromPatternResponse.pattern_used)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* temp = _impl_.pattern_used_;
  _impl_.pattern_used_ = nullptr;
  return temp;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL SpawnFromPatternResponse::_internal_mutable_pattern_used() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_used_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnPattern>(GetArena());
    _impl_.pattern_used_ = reinterpret_cast<::seshat::SpawnPattern*>(p);
  }
  return _impl_.pattern_used_;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL SpawnFromPatternResponse::mutable_pattern_used()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnPattern* _msg = _internal_mutable_pattern_used();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternResponse.pattern_used)
  return _msg;
}
inline void SpawnFromPatternResponse::set_allocated_pattern_used(::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_used_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pattern_used_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnFromPatternResponse.pattern_used)
}

// .seshat.SpawnAttemptResult attempt_result = 3 [json_name = "attemptResult"];
inline bool SpawnFromPatternResponse::has_attempt_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attempt_result_ != nullptr);
  return value;
}
inline void SpawnFromPatternResponse::clear_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ != nullptr) _impl_.attempt_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seshat::SpawnAttemptResult& SpawnFromPatternResponse::_internal_attempt_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnAttemptResult* p = _impl_.attempt_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnAttemptResult&>(::seshat::_SpawnAttemptResult_default_instance_);
}
inline const ::seshat::SpawnAttemptResult& SpawnFromPatternResponse::attempt_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternResponse.attempt_result)
  return _internal_attempt_result();
}
inline void SpawnFromPatternResponse::unsafe_arena_set_allocated_attempt_result(
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }
  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnFromPatternResponse.attempt_result)
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnFromPatternResponse::release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnAttemptResult* released = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnFromPatternResponse::unsafe_arena_release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnFromPatternResponse.attempt_result)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnAttemptResult* temp = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  return temp;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnFromPatternResponse::_internal_mutable_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnAttemptResult>(GetArena());
    _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(p);
  }
  return _impl_.attempt_result_;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnFromPatternResponse::mutable_attempt_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::SpawnAttemptResult* _msg = _internal_mutable_attempt_result();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternResponse.attempt_result)
  return _msg;
}
inline void SpawnFromPatternResponse::set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnFromPatternResponse.attempt_result)
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool SpawnFromPatternResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& SpawnFromPatternResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& SpawnFromPatternResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnFromPatternResponse.status)
  return _internal_status();
}
inline void SpawnFromPatternResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnFromPatternResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnFromPatternResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE SpawnFromPatternResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnFromPatternResponse.status)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnFromPatternResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL SpawnFromPatternResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnFromPatternResponse.status)
  return _msg;
}
inline void SpawnFromPatternResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnFromPatternResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnedEntity

// .seshat.Entity entity = 1 [json_name = "entity"];
inline bool SpawnedEntity::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline const ::seshat::Entity& SpawnedEntity::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Entity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Entity&>(::seshat::_Entity_default_instance_);
}
inline const ::seshat::Entity& SpawnedEntity::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnedEntity.entity)
  return _internal_entity();
}
inline void SpawnedEntity::unsafe_arena_set_allocated_entity(
    ::seshat::Entity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::seshat::Entity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnedEntity.entity)
}
inline ::seshat::Entity* PROTOBUF_NULLABLE SpawnedEntity::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Entity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Entity* PROTOBUF_NULLABLE SpawnedEntity::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnedEntity.entity)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Entity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::seshat::Entity* PROTOBUF_NONNULL SpawnedEntity::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Entity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::seshat::Entity*>(p);
  }
  return _impl_.entity_;
}
inline ::seshat::Entity* PROTOBUF_NONNULL SpawnedEntity::mutable_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seshat::Entity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnedEntity.entity)
  return _msg;
}
inline void SpawnedEntity::set_allocated_entity(::seshat::Entity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.entity_ = reinterpret_cast<::seshat::Entity*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnedEntity.entity)
}

// .seshat.Position position = 2 [json_name = "position"];
inline bool SpawnedEntity::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::seshat::Position& SpawnedEntity::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& SpawnedEntity::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnedEntity.position)
  return _internal_position();
}
inline void SpawnedEntity::unsafe_arena_set_allocated_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnedEntity.position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE SpawnedEntity::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE SpawnedEntity::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnedEntity.position)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL SpawnedEntity::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL SpawnedEntity::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnedEntity.position)
  return _msg;
}
inline void SpawnedEntity::set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnedEntity.position)
}

// string spawn_engine_id = 3 [json_name = "spawnEngineId"];
inline void SpawnedEntity::clear_spawn_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnedEntity::spawn_engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnedEntity.spawn_engine_id)
  return _internal_spawn_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnedEntity::set_spawn_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.spawn_engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnedEntity.spawn_engine_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnedEntity::mutable_spawn_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_spawn_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnedEntity.spawn_engine_id)
  return _s;
}
inline const ::std::string& SpawnedEntity::_internal_spawn_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_engine_id_.Get();
}
inline void SpawnedEntity::_internal_set_spawn_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.spawn_engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnedEntity::_internal_mutable_spawn_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.spawn_engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnedEntity::release_spawn_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnedEntity.spawn_engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.spawn_engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.spawn_engine_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnedEntity::set_allocated_spawn_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.spawn_engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.spawn_engine_id_.IsDefault()) {
    _impl_.spawn_engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnedEntity.spawn_engine_id)
}

// string pattern_id = 4 [json_name = "patternId"];
inline void SpawnedEntity::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnedEntity::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnedEntity.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnedEntity::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnedEntity.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL SpawnedEntity::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnedEntity.pattern_id)
  return _s;
}
inline const ::std::string& SpawnedEntity::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void SpawnedEntity::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnedEntity::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnedEntity::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnedEntity.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void SpawnedEntity::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnedEntity.pattern_id)
}

// int64 spawn_timestamp = 5 [json_name = "spawnTimestamp"];
inline void SpawnedEntity::clear_spawn_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t SpawnedEntity::spawn_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnedEntity.spawn_timestamp)
  return _internal_spawn_timestamp();
}
inline void SpawnedEntity::set_spawn_timestamp(::int64_t value) {
  _internal_set_spawn_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnedEntity.spawn_timestamp)
}
inline ::int64_t SpawnedEntity::_internal_spawn_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_timestamp_;
}
inline void SpawnedEntity::_internal_set_spawn_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_timestamp_ = value;
}

// map<string, string> spawn_metadata = 6 [json_name = "spawnMetadata"];
inline int SpawnedEntity::_internal_spawn_metadata_size() const {
  return _internal_spawn_metadata().size();
}
inline int SpawnedEntity::spawn_metadata_size() const {
  return _internal_spawn_metadata_size();
}
inline void SpawnedEntity::clear_spawn_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spawn_metadata_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnedEntity::_internal_spawn_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spawn_metadata_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnedEntity::spawn_metadata() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnedEntity.spawn_metadata)
  return _internal_spawn_metadata();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnedEntity::_internal_mutable_spawn_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.spawn_metadata_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnedEntity::mutable_spawn_metadata()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnedEntity.spawn_metadata)
  return _internal_mutable_spawn_metadata();
}

// -------------------------------------------------------------------

// SpawnAttemptResult

// int32 requested_count = 1 [json_name = "requestedCount"];
inline void SpawnAttemptResult::clear_requested_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SpawnAttemptResult::requested_count() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.requested_count)
  return _internal_requested_count();
}
inline void SpawnAttemptResult::set_requested_count(::int32_t value) {
  _internal_set_requested_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.SpawnAttemptResult.requested_count)
}
inline ::int32_t SpawnAttemptResult::_internal_requested_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_count_;
}
inline void SpawnAttemptResult::_internal_set_requested_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_count_ = value;
}

// int32 successful_spawns = 2 [json_name = "successfulSpawns"];
inline void SpawnAttemptResult::clear_successful_spawns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_spawns_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SpawnAttemptResult::successful_spawns() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.successful_spawns)
  return _internal_successful_spawns();
}
inline void SpawnAttemptResult::set_successful_spawns(::int32_t value) {
  _internal_set_successful_spawns(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SpawnAttemptResult.successful_spawns)
}
inline ::int32_t SpawnAttemptResult::_internal_successful_spawns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.successful_spawns_;
}
inline void SpawnAttemptResult::_internal_set_successful_spawns(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.successful_spawns_ = value;
}

// int32 failed_spawns = 3 [json_name = "failedSpawns"];
inline void SpawnAttemptResult::clear_failed_spawns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_spawns_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t SpawnAttemptResult::failed_spawns() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.failed_spawns)
  return _internal_failed_spawns();
}
inline void SpawnAttemptResult::set_failed_spawns(::int32_t value) {
  _internal_set_failed_spawns(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.SpawnAttemptResult.failed_spawns)
}
inline ::int32_t SpawnAttemptResult::_internal_failed_spawns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_spawns_;
}
inline void SpawnAttemptResult::_internal_set_failed_spawns(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_spawns_ = value;
}

// repeated string failure_reasons = 4 [json_name = "failureReasons"];
inline int SpawnAttemptResult::_internal_failure_reasons_size() const {
  return _internal_failure_reasons().size();
}
inline int SpawnAttemptResult::failure_reasons_size() const {
  return _internal_failure_reasons_size();
}
inline void SpawnAttemptResult::clear_failure_reasons() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reasons_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnAttemptResult::add_failure_reasons()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_failure_reasons()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnAttemptResult.failure_reasons)
  return _s;
}
inline const ::std::string& SpawnAttemptResult::failure_reasons(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.failure_reasons)
  return _internal_failure_reasons().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnAttemptResult::mutable_failure_reasons(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnAttemptResult.failure_reasons)
  return _internal_mutable_failure_reasons()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnAttemptResult::set_failure_reasons(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_failure_reasons()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnAttemptResult.failure_reasons)
}
template <typename Arg_, typename... Args_>
inline void SpawnAttemptResult::add_failure_reasons(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_failure_reasons(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnAttemptResult.failure_reasons)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnAttemptResult::failure_reasons()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnAttemptResult.failure_reasons)
  return _internal_failure_reasons();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnAttemptResult::mutable_failure_reasons() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnAttemptResult.failure_reasons)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failure_reasons();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnAttemptResult::_internal_failure_reasons() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failure_reasons_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnAttemptResult::_internal_mutable_failure_reasons() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failure_reasons_;
}

// float constraint_satisfaction = 5 [json_name = "constraintSatisfaction"];
inline void SpawnAttemptResult::clear_constraint_satisfaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_satisfaction_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float SpawnAttemptResult::constraint_satisfaction() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.constraint_satisfaction)
  return _internal_constraint_satisfaction();
}
inline void SpawnAttemptResult::set_constraint_satisfaction(float value) {
  _internal_set_constraint_satisfaction(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnAttemptResult.constraint_satisfaction)
}
inline float SpawnAttemptResult::_internal_constraint_satisfaction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_satisfaction_;
}
inline void SpawnAttemptResult::_internal_set_constraint_satisfaction(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_satisfaction_ = value;
}

// .seshat.Duration spawn_duration = 6 [json_name = "spawnDuration"];
inline bool SpawnAttemptResult::has_spawn_duration() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spawn_duration_ != nullptr);
  return value;
}
inline const ::seshat::Duration& SpawnAttemptResult::_internal_spawn_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Duration* p = _impl_.spawn_duration_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Duration&>(::seshat::_Duration_default_instance_);
}
inline const ::seshat::Duration& SpawnAttemptResult::spawn_duration() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnAttemptResult.spawn_duration)
  return _internal_spawn_duration();
}
inline void SpawnAttemptResult::unsafe_arena_set_allocated_spawn_duration(
    ::seshat::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawn_duration_);
  }
  _impl_.spawn_duration_ = reinterpret_cast<::seshat::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnAttemptResult.spawn_duration)
}
inline ::seshat::Duration* PROTOBUF_NULLABLE SpawnAttemptResult::release_spawn_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Duration* released = _impl_.spawn_duration_;
  _impl_.spawn_duration_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Duration* PROTOBUF_NULLABLE SpawnAttemptResult::unsafe_arena_release_spawn_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnAttemptResult.spawn_duration)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Duration* temp = _impl_.spawn_duration_;
  _impl_.spawn_duration_ = nullptr;
  return temp;
}
inline ::seshat::Duration* PROTOBUF_NONNULL SpawnAttemptResult::_internal_mutable_spawn_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spawn_duration_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Duration>(GetArena());
    _impl_.spawn_duration_ = reinterpret_cast<::seshat::Duration*>(p);
  }
  return _impl_.spawn_duration_;
}
inline ::seshat::Duration* PROTOBUF_NONNULL SpawnAttemptResult::mutable_spawn_duration()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Duration* _msg = _internal_mutable_spawn_duration();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnAttemptResult.spawn_duration)
  return _msg;
}
inline void SpawnAttemptResult::set_allocated_spawn_duration(::seshat::Duration* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spawn_duration_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spawn_duration_ = reinterpret_cast<::seshat::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnAttemptResult.spawn_duration)
}

// -------------------------------------------------------------------

// GetSpawnPatternsRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetSpawnPatternsRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetSpawnPatternsRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnPatternsRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnPatternsRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnPatternsRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnPatternsRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnPatternsRequest.engine_id)
  return _s;
}
inline const ::std::string& GetSpawnPatternsRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetSpawnPatternsRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnPatternsRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnPatternsRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnPatternsRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnPatternsRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnPatternsRequest.engine_id)
}

// .seshat.PatternType type = 2 [json_name = "type"];
inline void GetSpawnPatternsRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::seshat::PatternType GetSpawnPatternsRequest::type() const {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnPatternsRequest.type)
  return _internal_type();
}
inline void GetSpawnPatternsRequest::set_type(::seshat::PatternType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetSpawnPatternsRequest.type)
}
inline ::seshat::PatternType GetSpawnPatternsRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::PatternType>(_impl_.type_);
}
inline void GetSpawnPatternsRequest::_internal_set_type(::seshat::PatternType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// GetSpawnPatternsResponse

// repeated .seshat.SpawnPattern patterns = 1 [json_name = "patterns"];
inline int GetSpawnPatternsResponse::_internal_patterns_size() const {
  return _internal_patterns().size();
}
inline int GetSpawnPatternsResponse::patterns_size() const {
  return _internal_patterns_size();
}
inline void GetSpawnPatternsResponse::clear_patterns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.patterns_.Clear();
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL GetSpawnPatternsResponse::mutable_patterns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnPatternsResponse.patterns)
  return _internal_mutable_patterns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL GetSpawnPatternsResponse::mutable_patterns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetSpawnPatternsResponse.patterns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_patterns();
}
inline const ::seshat::SpawnPattern& GetSpawnPatternsResponse::patterns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnPatternsResponse.patterns)
  return _internal_patterns().Get(index);
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL GetSpawnPatternsResponse::add_patterns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnPattern* _add = _internal_mutable_patterns()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetSpawnPatternsResponse.patterns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>& GetSpawnPatternsResponse::patterns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetSpawnPatternsResponse.patterns)
  return _internal_patterns();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>&
GetSpawnPatternsResponse::_internal_patterns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.patterns_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnPattern>* PROTOBUF_NONNULL
GetSpawnPatternsResponse::_internal_mutable_patterns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.patterns_;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetSpawnPatternsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetSpawnPatternsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetSpawnPatternsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnPatternsResponse.status)
  return _internal_status();
}
inline void GetSpawnPatternsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSpawnPatternsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnPatternsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnPatternsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnPatternsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnPatternsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnPatternsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnPatternsResponse.status)
  return _msg;
}
inline void GetSpawnPatternsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnPatternsResponse.status)
}

// -------------------------------------------------------------------

// CreateSpawnPatternRequest

// string engine_id = 1 [json_name = "engineId"];
inline void CreateSpawnPatternRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& CreateSpawnPatternRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnPatternRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void CreateSpawnPatternRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.CreateSpawnPatternRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnPatternRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnPatternRequest.engine_id)
  return _s;
}
inline const ::std::string& CreateSpawnPatternRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void CreateSpawnPatternRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL CreateSpawnPatternRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE CreateSpawnPatternRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnPatternRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void CreateSpawnPatternRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnPatternRequest.engine_id)
}

// .seshat.SpawnPattern pattern = 2 [json_name = "pattern"];
inline bool CreateSpawnPatternRequest::has_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pattern_ != nullptr);
  return value;
}
inline void CreateSpawnPatternRequest::clear_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_ != nullptr) _impl_.pattern_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seshat::SpawnPattern& CreateSpawnPatternRequest::_internal_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnPattern* p = _impl_.pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnPattern&>(::seshat::_SpawnPattern_default_instance_);
}
inline const ::seshat::SpawnPattern& CreateSpawnPatternRequest::pattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnPatternRequest.pattern)
  return _internal_pattern();
}
inline void CreateSpawnPatternRequest::unsafe_arena_set_allocated_pattern(
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_);
  }
  _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnPatternRequest.pattern)
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE CreateSpawnPatternRequest::release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnPattern* released = _impl_.pattern_;
  _impl_.pattern_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE CreateSpawnPatternRequest::unsafe_arena_release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnPatternRequest.pattern)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnPattern* temp = _impl_.pattern_;
  _impl_.pattern_ = nullptr;
  return temp;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL CreateSpawnPatternRequest::_internal_mutable_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnPattern>(GetArena());
    _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(p);
  }
  return _impl_.pattern_;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL CreateSpawnPatternRequest::mutable_pattern()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::SpawnPattern* _msg = _internal_mutable_pattern();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnPatternRequest.pattern)
  return _msg;
}
inline void CreateSpawnPatternRequest::set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnPatternRequest.pattern)
}

// -------------------------------------------------------------------

// CreateSpawnPatternResponse

// .seshat.SpawnPattern created_pattern = 1 [json_name = "createdPattern"];
inline bool CreateSpawnPatternResponse::has_created_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_pattern_ != nullptr);
  return value;
}
inline void CreateSpawnPatternResponse::clear_created_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_pattern_ != nullptr) _impl_.created_pattern_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnPattern& CreateSpawnPatternResponse::_internal_created_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnPattern* p = _impl_.created_pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnPattern&>(::seshat::_SpawnPattern_default_instance_);
}
inline const ::seshat::SpawnPattern& CreateSpawnPatternResponse::created_pattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnPatternResponse.created_pattern)
  return _internal_created_pattern();
}
inline void CreateSpawnPatternResponse::unsafe_arena_set_allocated_created_pattern(
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_pattern_);
  }
  _impl_.created_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnPatternResponse.created_pattern)
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE CreateSpawnPatternResponse::release_created_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* released = _impl_.created_pattern_;
  _impl_.created_pattern_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE CreateSpawnPatternResponse::unsafe_arena_release_created_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnPatternResponse.created_pattern)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* temp = _impl_.created_pattern_;
  _impl_.created_pattern_ = nullptr;
  return temp;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL CreateSpawnPatternResponse::_internal_mutable_created_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.created_pattern_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnPattern>(GetArena());
    _impl_.created_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(p);
  }
  return _impl_.created_pattern_;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL CreateSpawnPatternResponse::mutable_created_pattern()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnPattern* _msg = _internal_mutable_created_pattern();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnPatternResponse.created_pattern)
  return _msg;
}
inline void CreateSpawnPatternResponse::set_allocated_created_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_pattern_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnPatternResponse.created_pattern)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool CreateSpawnPatternResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& CreateSpawnPatternResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& CreateSpawnPatternResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.CreateSpawnPatternResponse.status)
  return _internal_status();
}
inline void CreateSpawnPatternResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.CreateSpawnPatternResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateSpawnPatternResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE CreateSpawnPatternResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.CreateSpawnPatternResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateSpawnPatternResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL CreateSpawnPatternResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.CreateSpawnPatternResponse.status)
  return _msg;
}
inline void CreateSpawnPatternResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.CreateSpawnPatternResponse.status)
}

// -------------------------------------------------------------------

// UpdateSpawnPatternRequest

// string pattern_id = 1 [json_name = "patternId"];
inline void UpdateSpawnPatternRequest::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& UpdateSpawnPatternRequest::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateSpawnPatternRequest.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void UpdateSpawnPatternRequest::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.UpdateSpawnPatternRequest.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL UpdateSpawnPatternRequest::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateSpawnPatternRequest.pattern_id)
  return _s;
}
inline const ::std::string& UpdateSpawnPatternRequest::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void UpdateSpawnPatternRequest::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL UpdateSpawnPatternRequest::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE UpdateSpawnPatternRequest::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateSpawnPatternRequest.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void UpdateSpawnPatternRequest::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateSpawnPatternRequest.pattern_id)
}

// .seshat.SpawnPattern updated_pattern = 2 [json_name = "updatedPattern"];
inline bool UpdateSpawnPatternRequest::has_updated_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_pattern_ != nullptr);
  return value;
}
inline void UpdateSpawnPatternRequest::clear_updated_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_pattern_ != nullptr) _impl_.updated_pattern_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seshat::SpawnPattern& UpdateSpawnPatternRequest::_internal_updated_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnPattern* p = _impl_.updated_pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnPattern&>(::seshat::_SpawnPattern_default_instance_);
}
inline const ::seshat::SpawnPattern& UpdateSpawnPatternRequest::updated_pattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateSpawnPatternRequest.updated_pattern)
  return _internal_updated_pattern();
}
inline void UpdateSpawnPatternRequest::unsafe_arena_set_allocated_updated_pattern(
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_pattern_);
  }
  _impl_.updated_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateSpawnPatternRequest.updated_pattern)
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE UpdateSpawnPatternRequest::release_updated_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnPattern* released = _impl_.updated_pattern_;
  _impl_.updated_pattern_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE UpdateSpawnPatternRequest::unsafe_arena_release_updated_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateSpawnPatternRequest.updated_pattern)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnPattern* temp = _impl_.updated_pattern_;
  _impl_.updated_pattern_ = nullptr;
  return temp;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL UpdateSpawnPatternRequest::_internal_mutable_updated_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.updated_pattern_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnPattern>(GetArena());
    _impl_.updated_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(p);
  }
  return _impl_.updated_pattern_;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL UpdateSpawnPatternRequest::mutable_updated_pattern()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::SpawnPattern* _msg = _internal_mutable_updated_pattern();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateSpawnPatternRequest.updated_pattern)
  return _msg;
}
inline void UpdateSpawnPatternRequest::set_allocated_updated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_pattern_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.updated_pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateSpawnPatternRequest.updated_pattern)
}

// -------------------------------------------------------------------

// UpdateSpawnPatternResponse

// .seshat.SpawnPattern pattern = 1 [json_name = "pattern"];
inline bool UpdateSpawnPatternResponse::has_pattern() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pattern_ != nullptr);
  return value;
}
inline void UpdateSpawnPatternResponse::clear_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_ != nullptr) _impl_.pattern_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnPattern& UpdateSpawnPatternResponse::_internal_pattern() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnPattern* p = _impl_.pattern_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnPattern&>(::seshat::_SpawnPattern_default_instance_);
}
inline const ::seshat::SpawnPattern& UpdateSpawnPatternResponse::pattern() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateSpawnPatternResponse.pattern)
  return _internal_pattern();
}
inline void UpdateSpawnPatternResponse::unsafe_arena_set_allocated_pattern(
    ::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_);
  }
  _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateSpawnPatternResponse.pattern)
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE UpdateSpawnPatternResponse::release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* released = _impl_.pattern_;
  _impl_.pattern_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnPattern* PROTOBUF_NULLABLE UpdateSpawnPatternResponse::unsafe_arena_release_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateSpawnPatternResponse.pattern)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnPattern* temp = _impl_.pattern_;
  _impl_.pattern_ = nullptr;
  return temp;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL UpdateSpawnPatternResponse::_internal_mutable_pattern() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pattern_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnPattern>(GetArena());
    _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(p);
  }
  return _impl_.pattern_;
}
inline ::seshat::SpawnPattern* PROTOBUF_NONNULL UpdateSpawnPatternResponse::mutable_pattern()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnPattern* _msg = _internal_mutable_pattern();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateSpawnPatternResponse.pattern)
  return _msg;
}
inline void UpdateSpawnPatternResponse::set_allocated_pattern(::seshat::SpawnPattern* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pattern_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pattern_ = reinterpret_cast<::seshat::SpawnPattern*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateSpawnPatternResponse.pattern)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool UpdateSpawnPatternResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& UpdateSpawnPatternResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& UpdateSpawnPatternResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.UpdateSpawnPatternResponse.status)
  return _internal_status();
}
inline void UpdateSpawnPatternResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.UpdateSpawnPatternResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE UpdateSpawnPatternResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE UpdateSpawnPatternResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.UpdateSpawnPatternResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL UpdateSpawnPatternResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL UpdateSpawnPatternResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.UpdateSpawnPatternResponse.status)
  return _msg;
}
inline void UpdateSpawnPatternResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.UpdateSpawnPatternResponse.status)
}

// -------------------------------------------------------------------

// AddSpawnConstraintRequest

// string engine_id = 1 [json_name = "engineId"];
inline void AddSpawnConstraintRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AddSpawnConstraintRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AddSpawnConstraintRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AddSpawnConstraintRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.AddSpawnConstraintRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL AddSpawnConstraintRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.AddSpawnConstraintRequest.engine_id)
  return _s;
}
inline const ::std::string& AddSpawnConstraintRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void AddSpawnConstraintRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AddSpawnConstraintRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AddSpawnConstraintRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AddSpawnConstraintRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void AddSpawnConstraintRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.AddSpawnConstraintRequest.engine_id)
}

// .seshat.SpawnConstraint constraint = 2 [json_name = "constraint"];
inline bool AddSpawnConstraintRequest::has_constraint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.constraint_ != nullptr);
  return value;
}
inline void AddSpawnConstraintRequest::clear_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.constraint_ != nullptr) _impl_.constraint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::seshat::SpawnConstraint& AddSpawnConstraintRequest::_internal_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnConstraint* p = _impl_.constraint_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnConstraint&>(::seshat::_SpawnConstraint_default_instance_);
}
inline const ::seshat::SpawnConstraint& AddSpawnConstraintRequest::constraint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AddSpawnConstraintRequest.constraint)
  return _internal_constraint();
}
inline void AddSpawnConstraintRequest::unsafe_arena_set_allocated_constraint(
    ::seshat::SpawnConstraint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.constraint_);
  }
  _impl_.constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.AddSpawnConstraintRequest.constraint)
}
inline ::seshat::SpawnConstraint* PROTOBUF_NULLABLE AddSpawnConstraintRequest::release_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnConstraint* released = _impl_.constraint_;
  _impl_.constraint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NULLABLE AddSpawnConstraintRequest::unsafe_arena_release_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AddSpawnConstraintRequest.constraint)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::SpawnConstraint* temp = _impl_.constraint_;
  _impl_.constraint_ = nullptr;
  return temp;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL AddSpawnConstraintRequest::_internal_mutable_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.constraint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnConstraint>(GetArena());
    _impl_.constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(p);
  }
  return _impl_.constraint_;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL AddSpawnConstraintRequest::mutable_constraint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::SpawnConstraint* _msg = _internal_mutable_constraint();
  // @@protoc_insertion_point(field_mutable:seshat.AddSpawnConstraintRequest.constraint)
  return _msg;
}
inline void AddSpawnConstraintRequest::set_allocated_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.constraint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.AddSpawnConstraintRequest.constraint)
}

// -------------------------------------------------------------------

// AddSpawnConstraintResponse

// .seshat.SpawnConstraint added_constraint = 1 [json_name = "addedConstraint"];
inline bool AddSpawnConstraintResponse::has_added_constraint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.added_constraint_ != nullptr);
  return value;
}
inline void AddSpawnConstraintResponse::clear_added_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.added_constraint_ != nullptr) _impl_.added_constraint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnConstraint& AddSpawnConstraintResponse::_internal_added_constraint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnConstraint* p = _impl_.added_constraint_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnConstraint&>(::seshat::_SpawnConstraint_default_instance_);
}
inline const ::seshat::SpawnConstraint& AddSpawnConstraintResponse::added_constraint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AddSpawnConstraintResponse.added_constraint)
  return _internal_added_constraint();
}
inline void AddSpawnConstraintResponse::unsafe_arena_set_allocated_added_constraint(
    ::seshat::SpawnConstraint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.added_constraint_);
  }
  _impl_.added_constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.AddSpawnConstraintResponse.added_constraint)
}
inline ::seshat::SpawnConstraint* PROTOBUF_NULLABLE AddSpawnConstraintResponse::release_added_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnConstraint* released = _impl_.added_constraint_;
  _impl_.added_constraint_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NULLABLE AddSpawnConstraintResponse::unsafe_arena_release_added_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AddSpawnConstraintResponse.added_constraint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnConstraint* temp = _impl_.added_constraint_;
  _impl_.added_constraint_ = nullptr;
  return temp;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL AddSpawnConstraintResponse::_internal_mutable_added_constraint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.added_constraint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnConstraint>(GetArena());
    _impl_.added_constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(p);
  }
  return _impl_.added_constraint_;
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL AddSpawnConstraintResponse::mutable_added_constraint()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnConstraint* _msg = _internal_mutable_added_constraint();
  // @@protoc_insertion_point(field_mutable:seshat.AddSpawnConstraintResponse.added_constraint)
  return _msg;
}
inline void AddSpawnConstraintResponse::set_allocated_added_constraint(::seshat::SpawnConstraint* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.added_constraint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.added_constraint_ = reinterpret_cast<::seshat::SpawnConstraint*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.AddSpawnConstraintResponse.added_constraint)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool AddSpawnConstraintResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& AddSpawnConstraintResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& AddSpawnConstraintResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AddSpawnConstraintResponse.status)
  return _internal_status();
}
inline void AddSpawnConstraintResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.AddSpawnConstraintResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE AddSpawnConstraintResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE AddSpawnConstraintResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AddSpawnConstraintResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL AddSpawnConstraintResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL AddSpawnConstraintResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.AddSpawnConstraintResponse.status)
  return _msg;
}
inline void AddSpawnConstraintResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.AddSpawnConstraintResponse.status)
}

// -------------------------------------------------------------------

// RemoveSpawnConstraintRequest

// string engine_id = 1 [json_name = "engineId"];
inline void RemoveSpawnConstraintRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RemoveSpawnConstraintRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveSpawnConstraintRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoveSpawnConstraintRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RemoveSpawnConstraintRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL RemoveSpawnConstraintRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveSpawnConstraintRequest.engine_id)
  return _s;
}
inline const ::std::string& RemoveSpawnConstraintRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void RemoveSpawnConstraintRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoveSpawnConstraintRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoveSpawnConstraintRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveSpawnConstraintRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void RemoveSpawnConstraintRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveSpawnConstraintRequest.engine_id)
}

// string constraint_id = 2 [json_name = "constraintId"];
inline void RemoveSpawnConstraintRequest::clear_constraint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& RemoveSpawnConstraintRequest::constraint_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveSpawnConstraintRequest.constraint_id)
  return _internal_constraint_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RemoveSpawnConstraintRequest::set_constraint_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.constraint_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RemoveSpawnConstraintRequest.constraint_id)
}
inline ::std::string* PROTOBUF_NONNULL RemoveSpawnConstraintRequest::mutable_constraint_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_constraint_id();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveSpawnConstraintRequest.constraint_id)
  return _s;
}
inline const ::std::string& RemoveSpawnConstraintRequest::_internal_constraint_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_id_.Get();
}
inline void RemoveSpawnConstraintRequest::_internal_set_constraint_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.constraint_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RemoveSpawnConstraintRequest::_internal_mutable_constraint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.constraint_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RemoveSpawnConstraintRequest::release_constraint_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveSpawnConstraintRequest.constraint_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.constraint_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.constraint_id_.Set("", GetArena());
  }
  return released;
}
inline void RemoveSpawnConstraintRequest::set_allocated_constraint_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.constraint_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.constraint_id_.IsDefault()) {
    _impl_.constraint_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveSpawnConstraintRequest.constraint_id)
}

// -------------------------------------------------------------------

// RemoveSpawnConstraintResponse

// .seshat.Result status = 1 [json_name = "status"];
inline bool RemoveSpawnConstraintResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& RemoveSpawnConstraintResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& RemoveSpawnConstraintResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RemoveSpawnConstraintResponse.status)
  return _internal_status();
}
inline void RemoveSpawnConstraintResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.RemoveSpawnConstraintResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE RemoveSpawnConstraintResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE RemoveSpawnConstraintResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RemoveSpawnConstraintResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL RemoveSpawnConstraintResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL RemoveSpawnConstraintResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.RemoveSpawnConstraintResponse.status)
  return _msg;
}
inline void RemoveSpawnConstraintResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.RemoveSpawnConstraintResponse.status)
}

// -------------------------------------------------------------------

// GetSpawnConstraintsRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetSpawnConstraintsRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetSpawnConstraintsRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnConstraintsRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnConstraintsRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnConstraintsRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnConstraintsRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnConstraintsRequest.engine_id)
  return _s;
}
inline const ::std::string& GetSpawnConstraintsRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetSpawnConstraintsRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnConstraintsRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnConstraintsRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnConstraintsRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnConstraintsRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnConstraintsRequest.engine_id)
}

// .seshat.ConstraintType type = 2 [json_name = "type"];
inline void GetSpawnConstraintsRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::seshat::ConstraintType GetSpawnConstraintsRequest::type() const {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnConstraintsRequest.type)
  return _internal_type();
}
inline void GetSpawnConstraintsRequest::set_type(::seshat::ConstraintType value) {
  _internal_set_type(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetSpawnConstraintsRequest.type)
}
inline ::seshat::ConstraintType GetSpawnConstraintsRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::seshat::ConstraintType>(_impl_.type_);
}
inline void GetSpawnConstraintsRequest::_internal_set_type(::seshat::ConstraintType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// GetSpawnConstraintsResponse

// repeated .seshat.SpawnConstraint constraints = 1 [json_name = "constraints"];
inline int GetSpawnConstraintsResponse::_internal_constraints_size() const {
  return _internal_constraints().size();
}
inline int GetSpawnConstraintsResponse::constraints_size() const {
  return _internal_constraints_size();
}
inline void GetSpawnConstraintsResponse::clear_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraints_.Clear();
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL GetSpawnConstraintsResponse::mutable_constraints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnConstraintsResponse.constraints)
  return _internal_mutable_constraints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL GetSpawnConstraintsResponse::mutable_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetSpawnConstraintsResponse.constraints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_constraints();
}
inline const ::seshat::SpawnConstraint& GetSpawnConstraintsResponse::constraints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnConstraintsResponse.constraints)
  return _internal_constraints().Get(index);
}
inline ::seshat::SpawnConstraint* PROTOBUF_NONNULL GetSpawnConstraintsResponse::add_constraints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnConstraint* _add = _internal_mutable_constraints()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetSpawnConstraintsResponse.constraints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>& GetSpawnConstraintsResponse::constraints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetSpawnConstraintsResponse.constraints)
  return _internal_constraints();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>&
GetSpawnConstraintsResponse::_internal_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraints_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnConstraint>* PROTOBUF_NONNULL
GetSpawnConstraintsResponse::_internal_mutable_constraints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.constraints_;
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool GetSpawnConstraintsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetSpawnConstraintsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetSpawnConstraintsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnConstraintsResponse.status)
  return _internal_status();
}
inline void GetSpawnConstraintsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSpawnConstraintsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnConstraintsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnConstraintsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnConstraintsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnConstraintsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnConstraintsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnConstraintsResponse.status)
  return _msg;
}
inline void GetSpawnConstraintsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnConstraintsResponse.status)
}

// -------------------------------------------------------------------

// ValidateSpawnPositionRequest

// string engine_id = 1 [json_name = "engineId"];
inline void ValidateSpawnPositionRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& ValidateSpawnPositionRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ValidateSpawnPositionRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionRequest.engine_id)
  return _s;
}
inline const ::std::string& ValidateSpawnPositionRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void ValidateSpawnPositionRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ValidateSpawnPositionRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ValidateSpawnPositionRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void ValidateSpawnPositionRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ValidateSpawnPositionRequest.engine_id)
}

// .seshat.Position position = 2 [json_name = "position"];
inline bool ValidateSpawnPositionRequest::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::seshat::Position& ValidateSpawnPositionRequest::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& ValidateSpawnPositionRequest::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionRequest.position)
  return _internal_position();
}
inline void ValidateSpawnPositionRequest::unsafe_arena_set_allocated_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ValidateSpawnPositionRequest.position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE ValidateSpawnPositionRequest::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE ValidateSpawnPositionRequest::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ValidateSpawnPositionRequest.position)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL ValidateSpawnPositionRequest::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL ValidateSpawnPositionRequest::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seshat::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionRequest.position)
  return _msg;
}
inline void ValidateSpawnPositionRequest::set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ValidateSpawnPositionRequest.position)
}

// string entity_type = 3 [json_name = "entityType"];
inline void ValidateSpawnPositionRequest::clear_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& ValidateSpawnPositionRequest::entity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionRequest.entity_type)
  return _internal_entity_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ValidateSpawnPositionRequest::set_entity_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionRequest.entity_type)
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionRequest::mutable_entity_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_type();
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionRequest.entity_type)
  return _s;
}
inline const ::std::string& ValidateSpawnPositionRequest::_internal_entity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_type_.Get();
}
inline void ValidateSpawnPositionRequest::_internal_set_entity_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionRequest::_internal_mutable_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ValidateSpawnPositionRequest::release_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ValidateSpawnPositionRequest.entity_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.entity_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  return released;
}
inline void ValidateSpawnPositionRequest::set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_type_.IsDefault()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.ValidateSpawnPositionRequest.entity_type)
}

// -------------------------------------------------------------------

// ValidateSpawnPositionResponse

// bool is_valid = 1 [json_name = "isValid"];
inline void ValidateSpawnPositionResponse::clear_is_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_valid_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ValidateSpawnPositionResponse::is_valid() const {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionResponse.is_valid)
  return _internal_is_valid();
}
inline void ValidateSpawnPositionResponse::set_is_valid(bool value) {
  _internal_set_is_valid(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionResponse.is_valid)
}
inline bool ValidateSpawnPositionResponse::_internal_is_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_valid_;
}
inline void ValidateSpawnPositionResponse::_internal_set_is_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_valid_ = value;
}

// repeated string violations = 2 [json_name = "violations"];
inline int ValidateSpawnPositionResponse::_internal_violations_size() const {
  return _internal_violations().size();
}
inline int ValidateSpawnPositionResponse::violations_size() const {
  return _internal_violations_size();
}
inline void ValidateSpawnPositionResponse::clear_violations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.violations_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionResponse::add_violations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_violations()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ValidateSpawnPositionResponse.violations)
  return _s;
}
inline const ::std::string& ValidateSpawnPositionResponse::violations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionResponse.violations)
  return _internal_violations().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionResponse::mutable_violations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionResponse.violations)
  return _internal_mutable_violations()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ValidateSpawnPositionResponse::set_violations(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_violations()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionResponse.violations)
}
template <typename Arg_, typename... Args_>
inline void ValidateSpawnPositionResponse::add_violations(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_violations(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ValidateSpawnPositionResponse.violations)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ValidateSpawnPositionResponse::violations()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ValidateSpawnPositionResponse.violations)
  return _internal_violations();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateSpawnPositionResponse::mutable_violations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ValidateSpawnPositionResponse.violations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_violations();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ValidateSpawnPositionResponse::_internal_violations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.violations_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateSpawnPositionResponse::_internal_mutable_violations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.violations_;
}

// float constraint_score = 3 [json_name = "constraintScore"];
inline void ValidateSpawnPositionResponse::clear_constraint_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_score_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float ValidateSpawnPositionResponse::constraint_score() const {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionResponse.constraint_score)
  return _internal_constraint_score();
}
inline void ValidateSpawnPositionResponse::set_constraint_score(float value) {
  _internal_set_constraint_score(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionResponse.constraint_score)
}
inline float ValidateSpawnPositionResponse::_internal_constraint_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_score_;
}
inline void ValidateSpawnPositionResponse::_internal_set_constraint_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_score_ = value;
}

// repeated string suggestions = 4 [json_name = "suggestions"];
inline int ValidateSpawnPositionResponse::_internal_suggestions_size() const {
  return _internal_suggestions().size();
}
inline int ValidateSpawnPositionResponse::suggestions_size() const {
  return _internal_suggestions_size();
}
inline void ValidateSpawnPositionResponse::clear_suggestions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suggestions_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionResponse::add_suggestions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_suggestions()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.ValidateSpawnPositionResponse.suggestions)
  return _s;
}
inline const ::std::string& ValidateSpawnPositionResponse::suggestions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionResponse.suggestions)
  return _internal_suggestions().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ValidateSpawnPositionResponse::mutable_suggestions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionResponse.suggestions)
  return _internal_mutable_suggestions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ValidateSpawnPositionResponse::set_suggestions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_suggestions()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.ValidateSpawnPositionResponse.suggestions)
}
template <typename Arg_, typename... Args_>
inline void ValidateSpawnPositionResponse::add_suggestions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_suggestions(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.ValidateSpawnPositionResponse.suggestions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ValidateSpawnPositionResponse::suggestions()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.ValidateSpawnPositionResponse.suggestions)
  return _internal_suggestions();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateSpawnPositionResponse::mutable_suggestions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.ValidateSpawnPositionResponse.suggestions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suggestions();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ValidateSpawnPositionResponse::_internal_suggestions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suggestions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateSpawnPositionResponse::_internal_mutable_suggestions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suggestions_;
}

// .seshat.Result status = 5 [json_name = "status"];
inline bool ValidateSpawnPositionResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& ValidateSpawnPositionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& ValidateSpawnPositionResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.ValidateSpawnPositionResponse.status)
  return _internal_status();
}
inline void ValidateSpawnPositionResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.ValidateSpawnPositionResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE ValidateSpawnPositionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE ValidateSpawnPositionResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.ValidateSpawnPositionResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL ValidateSpawnPositionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL ValidateSpawnPositionResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.ValidateSpawnPositionResponse.status)
  return _msg;
}
inline void ValidateSpawnPositionResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.ValidateSpawnPositionResponse.status)
}

// -------------------------------------------------------------------

// AnalyzeSpawnCapacityRequest

// string engine_id = 1 [json_name = "engineId"];
inline void AnalyzeSpawnCapacityRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& AnalyzeSpawnCapacityRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AnalyzeSpawnCapacityRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void AnalyzeSpawnCapacityRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.AnalyzeSpawnCapacityRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL AnalyzeSpawnCapacityRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.AnalyzeSpawnCapacityRequest.engine_id)
  return _s;
}
inline const ::std::string& AnalyzeSpawnCapacityRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void AnalyzeSpawnCapacityRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL AnalyzeSpawnCapacityRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE AnalyzeSpawnCapacityRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AnalyzeSpawnCapacityRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void AnalyzeSpawnCapacityRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.AnalyzeSpawnCapacityRequest.engine_id)
}

// repeated string entity_types = 2 [json_name = "entityTypes"];
inline int AnalyzeSpawnCapacityRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int AnalyzeSpawnCapacityRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void AnalyzeSpawnCapacityRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL AnalyzeSpawnCapacityRequest::add_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.AnalyzeSpawnCapacityRequest.entity_types)
  return _s;
}
inline const ::std::string& AnalyzeSpawnCapacityRequest::entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AnalyzeSpawnCapacityRequest.entity_types)
  return _internal_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL AnalyzeSpawnCapacityRequest::mutable_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.AnalyzeSpawnCapacityRequest.entity_types)
  return _internal_mutable_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void AnalyzeSpawnCapacityRequest::set_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.AnalyzeSpawnCapacityRequest.entity_types)
}
template <typename Arg_, typename... Args_>
inline void AnalyzeSpawnCapacityRequest::add_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.AnalyzeSpawnCapacityRequest.entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& AnalyzeSpawnCapacityRequest::entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.AnalyzeSpawnCapacityRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
AnalyzeSpawnCapacityRequest::mutable_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.AnalyzeSpawnCapacityRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
AnalyzeSpawnCapacityRequest::_internal_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
AnalyzeSpawnCapacityRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// -------------------------------------------------------------------

// AnalyzeSpawnCapacityResponse

// .seshat.SpawnCapacityAnalysis analysis = 1 [json_name = "analysis"];
inline bool AnalyzeSpawnCapacityResponse::has_analysis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.analysis_ != nullptr);
  return value;
}
inline void AnalyzeSpawnCapacityResponse::clear_analysis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.analysis_ != nullptr) _impl_.analysis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnCapacityAnalysis& AnalyzeSpawnCapacityResponse::_internal_analysis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnCapacityAnalysis* p = _impl_.analysis_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnCapacityAnalysis&>(::seshat::_SpawnCapacityAnalysis_default_instance_);
}
inline const ::seshat::SpawnCapacityAnalysis& AnalyzeSpawnCapacityResponse::analysis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AnalyzeSpawnCapacityResponse.analysis)
  return _internal_analysis();
}
inline void AnalyzeSpawnCapacityResponse::unsafe_arena_set_allocated_analysis(
    ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.analysis_);
  }
  _impl_.analysis_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.AnalyzeSpawnCapacityResponse.analysis)
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE AnalyzeSpawnCapacityResponse::release_analysis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnCapacityAnalysis* released = _impl_.analysis_;
  _impl_.analysis_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE AnalyzeSpawnCapacityResponse::unsafe_arena_release_analysis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AnalyzeSpawnCapacityResponse.analysis)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnCapacityAnalysis* temp = _impl_.analysis_;
  _impl_.analysis_ = nullptr;
  return temp;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL AnalyzeSpawnCapacityResponse::_internal_mutable_analysis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.analysis_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnCapacityAnalysis>(GetArena());
    _impl_.analysis_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(p);
  }
  return _impl_.analysis_;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL AnalyzeSpawnCapacityResponse::mutable_analysis()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnCapacityAnalysis* _msg = _internal_mutable_analysis();
  // @@protoc_insertion_point(field_mutable:seshat.AnalyzeSpawnCapacityResponse.analysis)
  return _msg;
}
inline void AnalyzeSpawnCapacityResponse::set_allocated_analysis(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.analysis_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.analysis_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.AnalyzeSpawnCapacityResponse.analysis)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool AnalyzeSpawnCapacityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& AnalyzeSpawnCapacityResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& AnalyzeSpawnCapacityResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.AnalyzeSpawnCapacityResponse.status)
  return _internal_status();
}
inline void AnalyzeSpawnCapacityResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.AnalyzeSpawnCapacityResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE AnalyzeSpawnCapacityResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE AnalyzeSpawnCapacityResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.AnalyzeSpawnCapacityResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL AnalyzeSpawnCapacityResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL AnalyzeSpawnCapacityResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.AnalyzeSpawnCapacityResponse.status)
  return _msg;
}
inline void AnalyzeSpawnCapacityResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.AnalyzeSpawnCapacityResponse.status)
}

// -------------------------------------------------------------------

// SpawnCapacityAnalysis

// int32 total_positions = 1 [json_name = "totalPositions"];
inline void SpawnCapacityAnalysis::clear_total_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_positions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::int32_t SpawnCapacityAnalysis::total_positions() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.total_positions)
  return _internal_total_positions();
}
inline void SpawnCapacityAnalysis::set_total_positions(::int32_t value) {
  _internal_set_total_positions(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.total_positions)
}
inline ::int32_t SpawnCapacityAnalysis::_internal_total_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_positions_;
}
inline void SpawnCapacityAnalysis::_internal_set_total_positions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_positions_ = value;
}

// int32 valid_positions = 2 [json_name = "validPositions"];
inline void SpawnCapacityAnalysis::clear_valid_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_positions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t SpawnCapacityAnalysis::valid_positions() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.valid_positions)
  return _internal_valid_positions();
}
inline void SpawnCapacityAnalysis::set_valid_positions(::int32_t value) {
  _internal_set_valid_positions(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.valid_positions)
}
inline ::int32_t SpawnCapacityAnalysis::_internal_valid_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.valid_positions_;
}
inline void SpawnCapacityAnalysis::_internal_set_valid_positions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_positions_ = value;
}

// int32 constrained_positions = 3 [json_name = "constrainedPositions"];
inline void SpawnCapacityAnalysis::clear_constrained_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constrained_positions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t SpawnCapacityAnalysis::constrained_positions() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.constrained_positions)
  return _internal_constrained_positions();
}
inline void SpawnCapacityAnalysis::set_constrained_positions(::int32_t value) {
  _internal_set_constrained_positions(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.constrained_positions)
}
inline ::int32_t SpawnCapacityAnalysis::_internal_constrained_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constrained_positions_;
}
inline void SpawnCapacityAnalysis::_internal_set_constrained_positions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constrained_positions_ = value;
}

// int32 occupied_positions = 4 [json_name = "occupiedPositions"];
inline void SpawnCapacityAnalysis::clear_occupied_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.occupied_positions_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t SpawnCapacityAnalysis::occupied_positions() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.occupied_positions)
  return _internal_occupied_positions();
}
inline void SpawnCapacityAnalysis::set_occupied_positions(::int32_t value) {
  _internal_set_occupied_positions(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.occupied_positions)
}
inline ::int32_t SpawnCapacityAnalysis::_internal_occupied_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.occupied_positions_;
}
inline void SpawnCapacityAnalysis::_internal_set_occupied_positions(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.occupied_positions_ = value;
}

// repeated .seshat.EntityTypeCapacity type_capacities = 5 [json_name = "typeCapacities"];
inline int SpawnCapacityAnalysis::_internal_type_capacities_size() const {
  return _internal_type_capacities().size();
}
inline int SpawnCapacityAnalysis::type_capacities_size() const {
  return _internal_type_capacities_size();
}
inline void SpawnCapacityAnalysis::clear_type_capacities() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_capacities_.Clear();
}
inline ::seshat::EntityTypeCapacity* PROTOBUF_NONNULL SpawnCapacityAnalysis::mutable_type_capacities(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnCapacityAnalysis.type_capacities)
  return _internal_mutable_type_capacities()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>* PROTOBUF_NONNULL SpawnCapacityAnalysis::mutable_type_capacities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnCapacityAnalysis.type_capacities)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_type_capacities();
}
inline const ::seshat::EntityTypeCapacity& SpawnCapacityAnalysis::type_capacities(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.type_capacities)
  return _internal_type_capacities().Get(index);
}
inline ::seshat::EntityTypeCapacity* PROTOBUF_NONNULL SpawnCapacityAnalysis::add_type_capacities()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::EntityTypeCapacity* _add = _internal_mutable_type_capacities()->Add();
  // @@protoc_insertion_point(field_add:seshat.SpawnCapacityAnalysis.type_capacities)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>& SpawnCapacityAnalysis::type_capacities() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnCapacityAnalysis.type_capacities)
  return _internal_type_capacities();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>&
SpawnCapacityAnalysis::_internal_type_capacities() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_capacities_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::EntityTypeCapacity>* PROTOBUF_NONNULL
SpawnCapacityAnalysis::_internal_mutable_type_capacities() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.type_capacities_;
}

// float overall_utilization = 6 [json_name = "overallUtilization"];
inline void SpawnCapacityAnalysis::clear_overall_utilization() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overall_utilization_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline float SpawnCapacityAnalysis::overall_utilization() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.overall_utilization)
  return _internal_overall_utilization();
}
inline void SpawnCapacityAnalysis::set_overall_utilization(float value) {
  _internal_set_overall_utilization(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.overall_utilization)
}
inline float SpawnCapacityAnalysis::_internal_overall_utilization() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overall_utilization_;
}
inline void SpawnCapacityAnalysis::_internal_set_overall_utilization(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overall_utilization_ = value;
}

// bool is_over_capacity = 7 [json_name = "isOverCapacity"];
inline void SpawnCapacityAnalysis::clear_is_over_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_over_capacity_ = false;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline bool SpawnCapacityAnalysis::is_over_capacity() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.is_over_capacity)
  return _internal_is_over_capacity();
}
inline void SpawnCapacityAnalysis::set_is_over_capacity(bool value) {
  _internal_set_is_over_capacity(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.is_over_capacity)
}
inline bool SpawnCapacityAnalysis::_internal_is_over_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_over_capacity_;
}
inline void SpawnCapacityAnalysis::_internal_set_is_over_capacity(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_over_capacity_ = value;
}

// repeated string capacity_warnings = 8 [json_name = "capacityWarnings"];
inline int SpawnCapacityAnalysis::_internal_capacity_warnings_size() const {
  return _internal_capacity_warnings().size();
}
inline int SpawnCapacityAnalysis::capacity_warnings_size() const {
  return _internal_capacity_warnings_size();
}
inline void SpawnCapacityAnalysis::clear_capacity_warnings() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_warnings_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnCapacityAnalysis::add_capacity_warnings()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_capacity_warnings()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnCapacityAnalysis.capacity_warnings)
  return _s;
}
inline const ::std::string& SpawnCapacityAnalysis::capacity_warnings(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.capacity_warnings)
  return _internal_capacity_warnings().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnCapacityAnalysis::mutable_capacity_warnings(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnCapacityAnalysis.capacity_warnings)
  return _internal_mutable_capacity_warnings()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnCapacityAnalysis::set_capacity_warnings(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_capacity_warnings()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.capacity_warnings)
}
template <typename Arg_, typename... Args_>
inline void SpawnCapacityAnalysis::add_capacity_warnings(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_capacity_warnings(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnCapacityAnalysis.capacity_warnings)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnCapacityAnalysis::capacity_warnings()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnCapacityAnalysis.capacity_warnings)
  return _internal_capacity_warnings();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnCapacityAnalysis::mutable_capacity_warnings() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnCapacityAnalysis.capacity_warnings)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_capacity_warnings();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnCapacityAnalysis::_internal_capacity_warnings() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_warnings_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnCapacityAnalysis::_internal_mutable_capacity_warnings() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.capacity_warnings_;
}

// repeated string optimization_suggestions = 9 [json_name = "optimizationSuggestions"];
inline int SpawnCapacityAnalysis::_internal_optimization_suggestions_size() const {
  return _internal_optimization_suggestions().size();
}
inline int SpawnCapacityAnalysis::optimization_suggestions_size() const {
  return _internal_optimization_suggestions_size();
}
inline void SpawnCapacityAnalysis::clear_optimization_suggestions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimization_suggestions_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL SpawnCapacityAnalysis::add_optimization_suggestions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_optimization_suggestions()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.SpawnCapacityAnalysis.optimization_suggestions)
  return _s;
}
inline const ::std::string& SpawnCapacityAnalysis::optimization_suggestions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnCapacityAnalysis.optimization_suggestions)
  return _internal_optimization_suggestions().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL SpawnCapacityAnalysis::mutable_optimization_suggestions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.SpawnCapacityAnalysis.optimization_suggestions)
  return _internal_mutable_optimization_suggestions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void SpawnCapacityAnalysis::set_optimization_suggestions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_optimization_suggestions()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.SpawnCapacityAnalysis.optimization_suggestions)
}
template <typename Arg_, typename... Args_>
inline void SpawnCapacityAnalysis::add_optimization_suggestions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_optimization_suggestions(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.SpawnCapacityAnalysis.optimization_suggestions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& SpawnCapacityAnalysis::optimization_suggestions()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.SpawnCapacityAnalysis.optimization_suggestions)
  return _internal_optimization_suggestions();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnCapacityAnalysis::mutable_optimization_suggestions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.SpawnCapacityAnalysis.optimization_suggestions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_optimization_suggestions();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
SpawnCapacityAnalysis::_internal_optimization_suggestions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optimization_suggestions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
SpawnCapacityAnalysis::_internal_mutable_optimization_suggestions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.optimization_suggestions_;
}

// -------------------------------------------------------------------

// EntityTypeCapacity

// string entity_type = 1 [json_name = "entityType"];
inline void EntityTypeCapacity::clear_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& EntityTypeCapacity::entity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EntityTypeCapacity.entity_type)
  return _internal_entity_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void EntityTypeCapacity::set_entity_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.EntityTypeCapacity.entity_type)
}
inline ::std::string* PROTOBUF_NONNULL EntityTypeCapacity::mutable_entity_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_type();
  // @@protoc_insertion_point(field_mutable:seshat.EntityTypeCapacity.entity_type)
  return _s;
}
inline const ::std::string& EntityTypeCapacity::_internal_entity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_type_.Get();
}
inline void EntityTypeCapacity::_internal_set_entity_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL EntityTypeCapacity::_internal_mutable_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE EntityTypeCapacity::release_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.EntityTypeCapacity.entity_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  return released;
}
inline void EntityTypeCapacity::set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_type_.IsDefault()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.EntityTypeCapacity.entity_type)
}

// int32 current_count = 2 [json_name = "currentCount"];
inline void EntityTypeCapacity::clear_current_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t EntityTypeCapacity::current_count() const {
  // @@protoc_insertion_point(field_get:seshat.EntityTypeCapacity.current_count)
  return _internal_current_count();
}
inline void EntityTypeCapacity::set_current_count(::int32_t value) {
  _internal_set_current_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.EntityTypeCapacity.current_count)
}
inline ::int32_t EntityTypeCapacity::_internal_current_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.current_count_;
}
inline void EntityTypeCapacity::_internal_set_current_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.current_count_ = value;
}

// int32 max_capacity = 3 [json_name = "maxCapacity"];
inline void EntityTypeCapacity::clear_max_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_capacity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t EntityTypeCapacity::max_capacity() const {
  // @@protoc_insertion_point(field_get:seshat.EntityTypeCapacity.max_capacity)
  return _internal_max_capacity();
}
inline void EntityTypeCapacity::set_max_capacity(::int32_t value) {
  _internal_set_max_capacity(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.EntityTypeCapacity.max_capacity)
}
inline ::int32_t EntityTypeCapacity::_internal_max_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_capacity_;
}
inline void EntityTypeCapacity::_internal_set_max_capacity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_capacity_ = value;
}

// int32 recommended_max = 4 [json_name = "recommendedMax"];
inline void EntityTypeCapacity::clear_recommended_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_max_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t EntityTypeCapacity::recommended_max() const {
  // @@protoc_insertion_point(field_get:seshat.EntityTypeCapacity.recommended_max)
  return _internal_recommended_max();
}
inline void EntityTypeCapacity::set_recommended_max(::int32_t value) {
  _internal_set_recommended_max(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.EntityTypeCapacity.recommended_max)
}
inline ::int32_t EntityTypeCapacity::_internal_recommended_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recommended_max_;
}
inline void EntityTypeCapacity::_internal_set_recommended_max(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recommended_max_ = value;
}

// repeated .seshat.Position available_positions = 5 [json_name = "availablePositions"];
inline int EntityTypeCapacity::_internal_available_positions_size() const {
  return _internal_available_positions().size();
}
inline int EntityTypeCapacity::available_positions_size() const {
  return _internal_available_positions_size();
}
inline ::seshat::Position* PROTOBUF_NONNULL EntityTypeCapacity::mutable_available_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.EntityTypeCapacity.available_positions)
  return _internal_mutable_available_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL EntityTypeCapacity::mutable_available_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.EntityTypeCapacity.available_positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_available_positions();
}
inline const ::seshat::Position& EntityTypeCapacity::available_positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.EntityTypeCapacity.available_positions)
  return _internal_available_positions().Get(index);
}
inline ::seshat::Position* PROTOBUF_NONNULL EntityTypeCapacity::add_available_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Position* _add = _internal_mutable_available_positions()->Add();
  // @@protoc_insertion_point(field_add:seshat.EntityTypeCapacity.available_positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>& EntityTypeCapacity::available_positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.EntityTypeCapacity.available_positions)
  return _internal_available_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Position>&
EntityTypeCapacity::_internal_available_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.available_positions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Position>* PROTOBUF_NONNULL
EntityTypeCapacity::_internal_mutable_available_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.available_positions_;
}

// -------------------------------------------------------------------

// GetOptimalSpawnPositionsRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetOptimalSpawnPositionsRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetOptimalSpawnPositionsRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsRequest.engine_id)
  return _s;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetOptimalSpawnPositionsRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetOptimalSpawnPositionsRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetOptimalSpawnPositionsRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetOptimalSpawnPositionsRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetOptimalSpawnPositionsRequest.engine_id)
}

// string entity_type = 2 [json_name = "entityType"];
inline void GetOptimalSpawnPositionsRequest::clear_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::entity_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsRequest.entity_type)
  return _internal_entity_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetOptimalSpawnPositionsRequest::set_entity_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsRequest.entity_type)
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::mutable_entity_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_type();
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsRequest.entity_type)
  return _s;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::_internal_entity_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_type_.Get();
}
inline void GetOptimalSpawnPositionsRequest::_internal_set_entity_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.entity_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::_internal_mutable_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.entity_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetOptimalSpawnPositionsRequest::release_entity_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetOptimalSpawnPositionsRequest.entity_type)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.entity_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  return released;
}
inline void GetOptimalSpawnPositionsRequest::set_allocated_entity_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.entity_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_type_.IsDefault()) {
    _impl_.entity_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetOptimalSpawnPositionsRequest.entity_type)
}

// int32 count = 3 [json_name = "count"];
inline void GetOptimalSpawnPositionsRequest::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GetOptimalSpawnPositionsRequest::count() const {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsRequest.count)
  return _internal_count();
}
inline void GetOptimalSpawnPositionsRequest::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsRequest.count)
}
inline ::int32_t GetOptimalSpawnPositionsRequest::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void GetOptimalSpawnPositionsRequest::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// string pattern_id = 4 [json_name = "patternId"];
inline void GetOptimalSpawnPositionsRequest::clear_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pattern_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::pattern_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsRequest.pattern_id)
  return _internal_pattern_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetOptimalSpawnPositionsRequest::set_pattern_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pattern_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsRequest.pattern_id)
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::mutable_pattern_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_pattern_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsRequest.pattern_id)
  return _s;
}
inline const ::std::string& GetOptimalSpawnPositionsRequest::_internal_pattern_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pattern_id_.Get();
}
inline void GetOptimalSpawnPositionsRequest::_internal_set_pattern_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.pattern_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsRequest::_internal_mutable_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.pattern_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetOptimalSpawnPositionsRequest::release_pattern_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetOptimalSpawnPositionsRequest.pattern_id)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.pattern_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  return released;
}
inline void GetOptimalSpawnPositionsRequest::set_allocated_pattern_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.pattern_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.pattern_id_.IsDefault()) {
    _impl_.pattern_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetOptimalSpawnPositionsRequest.pattern_id)
}

// -------------------------------------------------------------------

// GetOptimalSpawnPositionsResponse

// repeated .seshat.OptimalPosition positions = 1 [json_name = "positions"];
inline int GetOptimalSpawnPositionsResponse::_internal_positions_size() const {
  return _internal_positions().size();
}
inline int GetOptimalSpawnPositionsResponse::positions_size() const {
  return _internal_positions_size();
}
inline void GetOptimalSpawnPositionsResponse::clear_positions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.positions_.Clear();
}
inline ::seshat::OptimalPosition* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::mutable_positions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsResponse.positions)
  return _internal_mutable_positions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::mutable_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetOptimalSpawnPositionsResponse.positions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_positions();
}
inline const ::seshat::OptimalPosition& GetOptimalSpawnPositionsResponse::positions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsResponse.positions)
  return _internal_positions().Get(index);
}
inline ::seshat::OptimalPosition* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::add_positions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::OptimalPosition* _add = _internal_mutable_positions()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetOptimalSpawnPositionsResponse.positions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>& GetOptimalSpawnPositionsResponse::positions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetOptimalSpawnPositionsResponse.positions)
  return _internal_positions();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>&
GetOptimalSpawnPositionsResponse::_internal_positions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.positions_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::OptimalPosition>* PROTOBUF_NONNULL
GetOptimalSpawnPositionsResponse::_internal_mutable_positions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.positions_;
}

// float overall_score = 2 [json_name = "overallScore"];
inline void GetOptimalSpawnPositionsResponse::clear_overall_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overall_score_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float GetOptimalSpawnPositionsResponse::overall_score() const {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsResponse.overall_score)
  return _internal_overall_score();
}
inline void GetOptimalSpawnPositionsResponse::set_overall_score(float value) {
  _internal_set_overall_score(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsResponse.overall_score)
}
inline float GetOptimalSpawnPositionsResponse::_internal_overall_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overall_score_;
}
inline void GetOptimalSpawnPositionsResponse::_internal_set_overall_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overall_score_ = value;
}

// repeated string optimization_notes = 3 [json_name = "optimizationNotes"];
inline int GetOptimalSpawnPositionsResponse::_internal_optimization_notes_size() const {
  return _internal_optimization_notes().size();
}
inline int GetOptimalSpawnPositionsResponse::optimization_notes_size() const {
  return _internal_optimization_notes_size();
}
inline void GetOptimalSpawnPositionsResponse::clear_optimization_notes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.optimization_notes_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::add_optimization_notes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_optimization_notes()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
  return _s;
}
inline const ::std::string& GetOptimalSpawnPositionsResponse::optimization_notes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
  return _internal_optimization_notes().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::mutable_optimization_notes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
  return _internal_mutable_optimization_notes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetOptimalSpawnPositionsResponse::set_optimization_notes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_optimization_notes()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
}
template <typename Arg_, typename... Args_>
inline void GetOptimalSpawnPositionsResponse::add_optimization_notes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_optimization_notes(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetOptimalSpawnPositionsResponse::optimization_notes()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
  return _internal_optimization_notes();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetOptimalSpawnPositionsResponse::mutable_optimization_notes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetOptimalSpawnPositionsResponse.optimization_notes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_optimization_notes();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetOptimalSpawnPositionsResponse::_internal_optimization_notes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.optimization_notes_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetOptimalSpawnPositionsResponse::_internal_mutable_optimization_notes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.optimization_notes_;
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool GetOptimalSpawnPositionsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetOptimalSpawnPositionsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetOptimalSpawnPositionsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetOptimalSpawnPositionsResponse.status)
  return _internal_status();
}
inline void GetOptimalSpawnPositionsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetOptimalSpawnPositionsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetOptimalSpawnPositionsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetOptimalSpawnPositionsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetOptimalSpawnPositionsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetOptimalSpawnPositionsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetOptimalSpawnPositionsResponse.status)
  return _msg;
}
inline void GetOptimalSpawnPositionsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetOptimalSpawnPositionsResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// OptimalPosition

// .seshat.Position position = 1 [json_name = "position"];
inline bool OptimalPosition::has_position() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.position_ != nullptr);
  return value;
}
inline const ::seshat::Position& OptimalPosition::_internal_position() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Position* p = _impl_.position_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Position&>(::seshat::_Position_default_instance_);
}
inline const ::seshat::Position& OptimalPosition::position() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.OptimalPosition.position)
  return _internal_position();
}
inline void OptimalPosition::unsafe_arena_set_allocated_position(
    ::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }
  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.OptimalPosition.position)
}
inline ::seshat::Position* PROTOBUF_NULLABLE OptimalPosition::release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Position* released = _impl_.position_;
  _impl_.position_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Position* PROTOBUF_NULLABLE OptimalPosition::unsafe_arena_release_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.OptimalPosition.position)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Position* temp = _impl_.position_;
  _impl_.position_ = nullptr;
  return temp;
}
inline ::seshat::Position* PROTOBUF_NONNULL OptimalPosition::_internal_mutable_position() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.position_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Position>(GetArena());
    _impl_.position_ = reinterpret_cast<::seshat::Position*>(p);
  }
  return _impl_.position_;
}
inline ::seshat::Position* PROTOBUF_NONNULL OptimalPosition::mutable_position()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Position* _msg = _internal_mutable_position();
  // @@protoc_insertion_point(field_mutable:seshat.OptimalPosition.position)
  return _msg;
}
inline void OptimalPosition::set_allocated_position(::seshat::Position* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.position_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.position_ = reinterpret_cast<::seshat::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.OptimalPosition.position)
}

// float score = 2 [json_name = "score"];
inline void OptimalPosition::clear_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline float OptimalPosition::score() const {
  // @@protoc_insertion_point(field_get:seshat.OptimalPosition.score)
  return _internal_score();
}
inline void OptimalPosition::set_score(float value) {
  _internal_set_score(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.OptimalPosition.score)
}
inline float OptimalPosition::_internal_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.score_;
}
inline void OptimalPosition::_internal_set_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.score_ = value;
}

// map<string, float> constraint_scores = 3 [json_name = "constraintScores"];
inline int OptimalPosition::_internal_constraint_scores_size() const {
  return _internal_constraint_scores().size();
}
inline int OptimalPosition::constraint_scores_size() const {
  return _internal_constraint_scores_size();
}
inline void OptimalPosition::clear_constraint_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.constraint_scores_.Clear();
}
inline const ::google::protobuf::Map<std::string, float>& OptimalPosition::_internal_constraint_scores() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.constraint_scores_.GetMap();
}
inline const ::google::protobuf::Map<std::string, float>& OptimalPosition::constraint_scores() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.OptimalPosition.constraint_scores)
  return _internal_constraint_scores();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL OptimalPosition::_internal_mutable_constraint_scores() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.constraint_scores_.MutableMap();
}
inline ::google::protobuf::Map<std::string, float>* PROTOBUF_NONNULL OptimalPosition::mutable_constraint_scores()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.OptimalPosition.constraint_scores)
  return _internal_mutable_constraint_scores();
}

// repeated string benefits = 4 [json_name = "benefits"];
inline int OptimalPosition::_internal_benefits_size() const {
  return _internal_benefits().size();
}
inline int OptimalPosition::benefits_size() const {
  return _internal_benefits_size();
}
inline void OptimalPosition::clear_benefits() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.benefits_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL OptimalPosition::add_benefits()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_benefits()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.OptimalPosition.benefits)
  return _s;
}
inline const ::std::string& OptimalPosition::benefits(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.OptimalPosition.benefits)
  return _internal_benefits().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL OptimalPosition::mutable_benefits(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.OptimalPosition.benefits)
  return _internal_mutable_benefits()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptimalPosition::set_benefits(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_benefits()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.OptimalPosition.benefits)
}
template <typename Arg_, typename... Args_>
inline void OptimalPosition::add_benefits(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_benefits(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.OptimalPosition.benefits)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& OptimalPosition::benefits()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.OptimalPosition.benefits)
  return _internal_benefits();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
OptimalPosition::mutable_benefits() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.OptimalPosition.benefits)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_benefits();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
OptimalPosition::_internal_benefits() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.benefits_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
OptimalPosition::_internal_mutable_benefits() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.benefits_;
}

// repeated string drawbacks = 5 [json_name = "drawbacks"];
inline int OptimalPosition::_internal_drawbacks_size() const {
  return _internal_drawbacks().size();
}
inline int OptimalPosition::drawbacks_size() const {
  return _internal_drawbacks_size();
}
inline void OptimalPosition::clear_drawbacks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.drawbacks_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL OptimalPosition::add_drawbacks()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_drawbacks()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.OptimalPosition.drawbacks)
  return _s;
}
inline const ::std::string& OptimalPosition::drawbacks(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.OptimalPosition.drawbacks)
  return _internal_drawbacks().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL OptimalPosition::mutable_drawbacks(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.OptimalPosition.drawbacks)
  return _internal_mutable_drawbacks()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void OptimalPosition::set_drawbacks(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_drawbacks()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.OptimalPosition.drawbacks)
}
template <typename Arg_, typename... Args_>
inline void OptimalPosition::add_drawbacks(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_drawbacks(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.OptimalPosition.drawbacks)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& OptimalPosition::drawbacks()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.OptimalPosition.drawbacks)
  return _internal_drawbacks();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
OptimalPosition::mutable_drawbacks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.OptimalPosition.drawbacks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_drawbacks();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
OptimalPosition::_internal_drawbacks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.drawbacks_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
OptimalPosition::_internal_mutable_drawbacks() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.drawbacks_;
}

// -------------------------------------------------------------------

// RecommendRoomSplitRequest

// string engine_id = 1 [json_name = "engineId"];
inline void RecommendRoomSplitRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RecommendRoomSplitRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RecommendRoomSplitRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RecommendRoomSplitRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.RecommendRoomSplitRequest.engine_id)
  return _s;
}
inline const ::std::string& RecommendRoomSplitRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void RecommendRoomSplitRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RecommendRoomSplitRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RecommendRoomSplitRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void RecommendRoomSplitRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RecommendRoomSplitRequest.engine_id)
}

// int32 target_entity_count = 2 [json_name = "targetEntityCount"];
inline void RecommendRoomSplitRequest::clear_target_entity_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_entity_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t RecommendRoomSplitRequest::target_entity_count() const {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitRequest.target_entity_count)
  return _internal_target_entity_count();
}
inline void RecommendRoomSplitRequest::set_target_entity_count(::int32_t value) {
  _internal_set_target_entity_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.RecommendRoomSplitRequest.target_entity_count)
}
inline ::int32_t RecommendRoomSplitRequest::_internal_target_entity_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_entity_count_;
}
inline void RecommendRoomSplitRequest::_internal_set_target_entity_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_entity_count_ = value;
}

// repeated string entity_types = 3 [json_name = "entityTypes"];
inline int RecommendRoomSplitRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int RecommendRoomSplitRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void RecommendRoomSplitRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitRequest::add_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.RecommendRoomSplitRequest.entity_types)
  return _s;
}
inline const ::std::string& RecommendRoomSplitRequest::entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitRequest.entity_types)
  return _internal_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitRequest::mutable_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.RecommendRoomSplitRequest.entity_types)
  return _internal_mutable_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RecommendRoomSplitRequest::set_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.RecommendRoomSplitRequest.entity_types)
}
template <typename Arg_, typename... Args_>
inline void RecommendRoomSplitRequest::add_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.RecommendRoomSplitRequest.entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& RecommendRoomSplitRequest::entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.RecommendRoomSplitRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RecommendRoomSplitRequest::mutable_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.RecommendRoomSplitRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
RecommendRoomSplitRequest::_internal_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RecommendRoomSplitRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// -------------------------------------------------------------------

// RecommendRoomSplitResponse

// bool should_split = 1 [json_name = "shouldSplit"];
inline void RecommendRoomSplitResponse::clear_should_split() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_split_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool RecommendRoomSplitResponse::should_split() const {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitResponse.should_split)
  return _internal_should_split();
}
inline void RecommendRoomSplitResponse::set_should_split(bool value) {
  _internal_set_should_split(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.RecommendRoomSplitResponse.should_split)
}
inline bool RecommendRoomSplitResponse::_internal_should_split() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.should_split_;
}
inline void RecommendRoomSplitResponse::_internal_set_should_split(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.should_split_ = value;
}

// repeated .seshat.RoomSplitOption options = 2 [json_name = "options"];
inline int RecommendRoomSplitResponse::_internal_options_size() const {
  return _internal_options().size();
}
inline int RecommendRoomSplitResponse::options_size() const {
  return _internal_options_size();
}
inline void RecommendRoomSplitResponse::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline ::seshat::RoomSplitOption* PROTOBUF_NONNULL RecommendRoomSplitResponse::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.RecommendRoomSplitResponse.options)
  return _internal_mutable_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>* PROTOBUF_NONNULL RecommendRoomSplitResponse::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.RecommendRoomSplitResponse.options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_options();
}
inline const ::seshat::RoomSplitOption& RecommendRoomSplitResponse::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitResponse.options)
  return _internal_options().Get(index);
}
inline ::seshat::RoomSplitOption* PROTOBUF_NONNULL RecommendRoomSplitResponse::add_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::RoomSplitOption* _add = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add:seshat.RecommendRoomSplitResponse.options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>& RecommendRoomSplitResponse::options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.RecommendRoomSplitResponse.options)
  return _internal_options();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>&
RecommendRoomSplitResponse::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::RoomSplitOption>* PROTOBUF_NONNULL
RecommendRoomSplitResponse::_internal_mutable_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.options_;
}

// string reasoning = 3 [json_name = "reasoning"];
inline void RecommendRoomSplitResponse::clear_reasoning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reasoning_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RecommendRoomSplitResponse::reasoning() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitResponse.reasoning)
  return _internal_reasoning();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RecommendRoomSplitResponse::set_reasoning(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reasoning_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RecommendRoomSplitResponse.reasoning)
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitResponse::mutable_reasoning()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reasoning();
  // @@protoc_insertion_point(field_mutable:seshat.RecommendRoomSplitResponse.reasoning)
  return _s;
}
inline const ::std::string& RecommendRoomSplitResponse::_internal_reasoning() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reasoning_.Get();
}
inline void RecommendRoomSplitResponse::_internal_set_reasoning(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.reasoning_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RecommendRoomSplitResponse::_internal_mutable_reasoning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.reasoning_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RecommendRoomSplitResponse::release_reasoning() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RecommendRoomSplitResponse.reasoning)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.reasoning_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reasoning_.Set("", GetArena());
  }
  return released;
}
inline void RecommendRoomSplitResponse::set_allocated_reasoning(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.reasoning_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reasoning_.IsDefault()) {
    _impl_.reasoning_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RecommendRoomSplitResponse.reasoning)
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool RecommendRoomSplitResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& RecommendRoomSplitResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& RecommendRoomSplitResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RecommendRoomSplitResponse.status)
  return _internal_status();
}
inline void RecommendRoomSplitResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.RecommendRoomSplitResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE RecommendRoomSplitResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE RecommendRoomSplitResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RecommendRoomSplitResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL RecommendRoomSplitResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL RecommendRoomSplitResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.RecommendRoomSplitResponse.status)
  return _msg;
}
inline void RecommendRoomSplitResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.RecommendRoomSplitResponse.status)
}

// -------------------------------------------------------------------

// RoomSplitOption

// string split_type = 1 [json_name = "splitType"];
inline void RoomSplitOption::clear_split_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.split_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& RoomSplitOption::split_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.split_type)
  return _internal_split_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RoomSplitOption::set_split_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.split_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.RoomSplitOption.split_type)
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::mutable_split_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_split_type();
  // @@protoc_insertion_point(field_mutable:seshat.RoomSplitOption.split_type)
  return _s;
}
inline const ::std::string& RoomSplitOption::_internal_split_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.split_type_.Get();
}
inline void RoomSplitOption::_internal_set_split_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.split_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::_internal_mutable_split_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.split_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RoomSplitOption::release_split_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.RoomSplitOption.split_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.split_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.split_type_.Set("", GetArena());
  }
  return released;
}
inline void RoomSplitOption::set_allocated_split_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.split_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.split_type_.IsDefault()) {
    _impl_.split_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.RoomSplitOption.split_type)
}

// repeated .seshat.Room suggested_rooms = 2 [json_name = "suggestedRooms"];
inline int RoomSplitOption::_internal_suggested_rooms_size() const {
  return _internal_suggested_rooms().size();
}
inline int RoomSplitOption::suggested_rooms_size() const {
  return _internal_suggested_rooms_size();
}
inline ::seshat::Room* PROTOBUF_NONNULL RoomSplitOption::mutable_suggested_rooms(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.RoomSplitOption.suggested_rooms)
  return _internal_mutable_suggested_rooms()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Room>* PROTOBUF_NONNULL RoomSplitOption::mutable_suggested_rooms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.RoomSplitOption.suggested_rooms)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_suggested_rooms();
}
inline const ::seshat::Room& RoomSplitOption::suggested_rooms(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.suggested_rooms)
  return _internal_suggested_rooms().Get(index);
}
inline ::seshat::Room* PROTOBUF_NONNULL RoomSplitOption::add_suggested_rooms()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::Room* _add = _internal_mutable_suggested_rooms()->Add();
  // @@protoc_insertion_point(field_add:seshat.RoomSplitOption.suggested_rooms)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Room>& RoomSplitOption::suggested_rooms() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.RoomSplitOption.suggested_rooms)
  return _internal_suggested_rooms();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::Room>&
RoomSplitOption::_internal_suggested_rooms() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suggested_rooms_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::Room>* PROTOBUF_NONNULL
RoomSplitOption::_internal_mutable_suggested_rooms() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.suggested_rooms_;
}

// int32 estimated_capacity = 3 [json_name = "estimatedCapacity"];
inline void RoomSplitOption::clear_estimated_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_capacity_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t RoomSplitOption::estimated_capacity() const {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.estimated_capacity)
  return _internal_estimated_capacity();
}
inline void RoomSplitOption::set_estimated_capacity(::int32_t value) {
  _internal_set_estimated_capacity(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.RoomSplitOption.estimated_capacity)
}
inline ::int32_t RoomSplitOption::_internal_estimated_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.estimated_capacity_;
}
inline void RoomSplitOption::_internal_set_estimated_capacity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.estimated_capacity_ = value;
}

// float complexity_score = 4 [json_name = "complexityScore"];
inline void RoomSplitOption::clear_complexity_score() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.complexity_score_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline float RoomSplitOption::complexity_score() const {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.complexity_score)
  return _internal_complexity_score();
}
inline void RoomSplitOption::set_complexity_score(float value) {
  _internal_set_complexity_score(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.RoomSplitOption.complexity_score)
}
inline float RoomSplitOption::_internal_complexity_score() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.complexity_score_;
}
inline void RoomSplitOption::_internal_set_complexity_score(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.complexity_score_ = value;
}

// repeated string advantages = 5 [json_name = "advantages"];
inline int RoomSplitOption::_internal_advantages_size() const {
  return _internal_advantages().size();
}
inline int RoomSplitOption::advantages_size() const {
  return _internal_advantages_size();
}
inline void RoomSplitOption::clear_advantages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advantages_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::add_advantages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_advantages()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.RoomSplitOption.advantages)
  return _s;
}
inline const ::std::string& RoomSplitOption::advantages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.advantages)
  return _internal_advantages().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::mutable_advantages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.RoomSplitOption.advantages)
  return _internal_mutable_advantages()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RoomSplitOption::set_advantages(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_advantages()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.RoomSplitOption.advantages)
}
template <typename Arg_, typename... Args_>
inline void RoomSplitOption::add_advantages(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_advantages(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.RoomSplitOption.advantages)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& RoomSplitOption::advantages()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.RoomSplitOption.advantages)
  return _internal_advantages();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RoomSplitOption::mutable_advantages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.RoomSplitOption.advantages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_advantages();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
RoomSplitOption::_internal_advantages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advantages_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RoomSplitOption::_internal_mutable_advantages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.advantages_;
}

// repeated string disadvantages = 6 [json_name = "disadvantages"];
inline int RoomSplitOption::_internal_disadvantages_size() const {
  return _internal_disadvantages().size();
}
inline int RoomSplitOption::disadvantages_size() const {
  return _internal_disadvantages_size();
}
inline void RoomSplitOption::clear_disadvantages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disadvantages_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::add_disadvantages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_disadvantages()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.RoomSplitOption.disadvantages)
  return _s;
}
inline const ::std::string& RoomSplitOption::disadvantages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.RoomSplitOption.disadvantages)
  return _internal_disadvantages().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL RoomSplitOption::mutable_disadvantages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.RoomSplitOption.disadvantages)
  return _internal_mutable_disadvantages()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void RoomSplitOption::set_disadvantages(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_disadvantages()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.RoomSplitOption.disadvantages)
}
template <typename Arg_, typename... Args_>
inline void RoomSplitOption::add_disadvantages(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_disadvantages(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.RoomSplitOption.disadvantages)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& RoomSplitOption::disadvantages()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.RoomSplitOption.disadvantages)
  return _internal_disadvantages();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RoomSplitOption::mutable_disadvantages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.RoomSplitOption.disadvantages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_disadvantages();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
RoomSplitOption::_internal_disadvantages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disadvantages_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
RoomSplitOption::_internal_mutable_disadvantages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.disadvantages_;
}

// -------------------------------------------------------------------

// GetSpawnHistoryRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetSpawnHistoryRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetSpawnHistoryRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnHistoryRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnHistoryRequest.engine_id)
  return _s;
}
inline const ::std::string& GetSpawnHistoryRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetSpawnHistoryRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnHistoryRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnHistoryRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnHistoryRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnHistoryRequest.engine_id)
}

// string room_id = 2 [json_name = "roomId"];
inline void GetSpawnHistoryRequest::clear_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetSpawnHistoryRequest::room_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryRequest.room_id)
  return _internal_room_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetSpawnHistoryRequest::set_room_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryRequest.room_id)
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::mutable_room_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_room_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnHistoryRequest.room_id)
  return _s;
}
inline const ::std::string& GetSpawnHistoryRequest::_internal_room_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_id_.Get();
}
inline void GetSpawnHistoryRequest::_internal_set_room_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::_internal_mutable_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.room_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetSpawnHistoryRequest::release_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnHistoryRequest.room_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.room_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_id_.Set("", GetArena());
  }
  return released;
}
inline void GetSpawnHistoryRequest::set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.room_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_id_.IsDefault()) {
    _impl_.room_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnHistoryRequest.room_id)
}

// int32 limit = 3 [json_name = "limit"];
inline void GetSpawnHistoryRequest::clear_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::int32_t GetSpawnHistoryRequest::limit() const {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryRequest.limit)
  return _internal_limit();
}
inline void GetSpawnHistoryRequest::set_limit(::int32_t value) {
  _internal_set_limit(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryRequest.limit)
}
inline ::int32_t GetSpawnHistoryRequest::_internal_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limit_;
}
inline void GetSpawnHistoryRequest::_internal_set_limit(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limit_ = value;
}

// int64 since_timestamp = 4 [json_name = "sinceTimestamp"];
inline void GetSpawnHistoryRequest::clear_since_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t GetSpawnHistoryRequest::since_timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryRequest.since_timestamp)
  return _internal_since_timestamp();
}
inline void GetSpawnHistoryRequest::set_since_timestamp(::int64_t value) {
  _internal_set_since_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryRequest.since_timestamp)
}
inline ::int64_t GetSpawnHistoryRequest::_internal_since_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.since_timestamp_;
}
inline void GetSpawnHistoryRequest::_internal_set_since_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_timestamp_ = value;
}

// repeated string entity_types = 5 [json_name = "entityTypes"];
inline int GetSpawnHistoryRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int GetSpawnHistoryRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void GetSpawnHistoryRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::add_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetSpawnHistoryRequest.entity_types)
  return _s;
}
inline const ::std::string& GetSpawnHistoryRequest::entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryRequest.entity_types)
  return _internal_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetSpawnHistoryRequest::mutable_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnHistoryRequest.entity_types)
  return _internal_mutable_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetSpawnHistoryRequest::set_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryRequest.entity_types)
}
template <typename Arg_, typename... Args_>
inline void GetSpawnHistoryRequest::add_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetSpawnHistoryRequest.entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetSpawnHistoryRequest::entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetSpawnHistoryRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetSpawnHistoryRequest::mutable_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetSpawnHistoryRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetSpawnHistoryRequest::_internal_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetSpawnHistoryRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// -------------------------------------------------------------------

// GetSpawnHistoryResponse

// repeated .seshat.SpawnHistoryEntry history = 1 [json_name = "history"];
inline int GetSpawnHistoryResponse::_internal_history_size() const {
  return _internal_history().size();
}
inline int GetSpawnHistoryResponse::history_size() const {
  return _internal_history_size();
}
inline void GetSpawnHistoryResponse::clear_history() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.history_.Clear();
}
inline ::seshat::SpawnHistoryEntry* PROTOBUF_NONNULL GetSpawnHistoryResponse::mutable_history(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnHistoryResponse.history)
  return _internal_mutable_history()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>* PROTOBUF_NONNULL GetSpawnHistoryResponse::mutable_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetSpawnHistoryResponse.history)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_history();
}
inline const ::seshat::SpawnHistoryEntry& GetSpawnHistoryResponse::history(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryResponse.history)
  return _internal_history().Get(index);
}
inline ::seshat::SpawnHistoryEntry* PROTOBUF_NONNULL GetSpawnHistoryResponse::add_history()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnHistoryEntry* _add = _internal_mutable_history()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetSpawnHistoryResponse.history)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>& GetSpawnHistoryResponse::history() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetSpawnHistoryResponse.history)
  return _internal_history();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>&
GetSpawnHistoryResponse::_internal_history() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.history_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnHistoryEntry>* PROTOBUF_NONNULL
GetSpawnHistoryResponse::_internal_mutable_history() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.history_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void GetSpawnHistoryResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::int32_t GetSpawnHistoryResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryResponse.total_count)
  return _internal_total_count();
}
inline void GetSpawnHistoryResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:seshat.GetSpawnHistoryResponse.total_count)
}
inline ::int32_t GetSpawnHistoryResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetSpawnHistoryResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.Result status = 3 [json_name = "status"];
inline bool GetSpawnHistoryResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetSpawnHistoryResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetSpawnHistoryResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetSpawnHistoryResponse.status)
  return _internal_status();
}
inline void GetSpawnHistoryResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetSpawnHistoryResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnHistoryResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetSpawnHistoryResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetSpawnHistoryResponse.status)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnHistoryResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetSpawnHistoryResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetSpawnHistoryResponse.status)
  return _msg;
}
inline void GetSpawnHistoryResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetSpawnHistoryResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SpawnHistoryEntry

// .seshat.SpawnedEntity entity = 1 [json_name = "entity"];
inline bool SpawnHistoryEntry::has_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.entity_ != nullptr);
  return value;
}
inline void SpawnHistoryEntry::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ != nullptr) _impl_.entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::seshat::SpawnedEntity& SpawnHistoryEntry::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnedEntity* p = _impl_.entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnedEntity&>(::seshat::_SpawnedEntity_default_instance_);
}
inline const ::seshat::SpawnedEntity& SpawnHistoryEntry::entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnHistoryEntry.entity)
  return _internal_entity();
}
inline void SpawnHistoryEntry::unsafe_arena_set_allocated_entity(
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }
  _impl_.entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnHistoryEntry.entity)
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE SpawnHistoryEntry::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::SpawnedEntity* released = _impl_.entity_;
  _impl_.entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE SpawnHistoryEntry::unsafe_arena_release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnHistoryEntry.entity)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::seshat::SpawnedEntity* temp = _impl_.entity_;
  _impl_.entity_ = nullptr;
  return temp;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnHistoryEntry::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnedEntity>(GetArena());
    _impl_.entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(p);
  }
  return _impl_.entity_;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL SpawnHistoryEntry::mutable_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::seshat::SpawnedEntity* _msg = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnHistoryEntry.entity)
  return _msg;
}
inline void SpawnHistoryEntry::set_allocated_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnHistoryEntry.entity)
}

// string action = 2 [json_name = "action"];
inline void SpawnHistoryEntry::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& SpawnHistoryEntry::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnHistoryEntry.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnHistoryEntry::set_action(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnHistoryEntry.action)
}
inline ::std::string* PROTOBUF_NONNULL SpawnHistoryEntry::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnHistoryEntry.action)
  return _s;
}
inline const ::std::string& SpawnHistoryEntry::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void SpawnHistoryEntry::_internal_set_action(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.action_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnHistoryEntry::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.action_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnHistoryEntry::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnHistoryEntry.action)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.action_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.action_.Set("", GetArena());
  }
  return released;
}
inline void SpawnHistoryEntry::set_allocated_action(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnHistoryEntry.action)
}

// int64 timestamp = 3 [json_name = "timestamp"];
inline void SpawnHistoryEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int64_t SpawnHistoryEntry::timestamp() const {
  // @@protoc_insertion_point(field_get:seshat.SpawnHistoryEntry.timestamp)
  return _internal_timestamp();
}
inline void SpawnHistoryEntry::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:seshat.SpawnHistoryEntry.timestamp)
}
inline ::int64_t SpawnHistoryEntry::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void SpawnHistoryEntry::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string reason = 4 [json_name = "reason"];
inline void SpawnHistoryEntry::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& SpawnHistoryEntry::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnHistoryEntry.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SpawnHistoryEntry::set_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.SpawnHistoryEntry.reason)
}
inline ::std::string* PROTOBUF_NONNULL SpawnHistoryEntry::mutable_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnHistoryEntry.reason)
  return _s;
}
inline const ::std::string& SpawnHistoryEntry::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void SpawnHistoryEntry::_internal_set_reason(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL SpawnHistoryEntry::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.reason_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE SpawnHistoryEntry::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnHistoryEntry.reason)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reason_.Set("", GetArena());
  }
  return released;
}
inline void SpawnHistoryEntry::set_allocated_reason(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnHistoryEntry.reason)
}

// .seshat.SpawnAttemptResult attempt_result = 5 [json_name = "attemptResult"];
inline bool SpawnHistoryEntry::has_attempt_result() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.attempt_result_ != nullptr);
  return value;
}
inline void SpawnHistoryEntry::clear_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ != nullptr) _impl_.attempt_result_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::seshat::SpawnAttemptResult& SpawnHistoryEntry::_internal_attempt_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnAttemptResult* p = _impl_.attempt_result_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnAttemptResult&>(::seshat::_SpawnAttemptResult_default_instance_);
}
inline const ::seshat::SpawnAttemptResult& SpawnHistoryEntry::attempt_result() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.SpawnHistoryEntry.attempt_result)
  return _internal_attempt_result();
}
inline void SpawnHistoryEntry::unsafe_arena_set_allocated_attempt_result(
    ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }
  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.SpawnHistoryEntry.attempt_result)
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnHistoryEntry::release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::SpawnAttemptResult* released = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE SpawnHistoryEntry::unsafe_arena_release_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.SpawnHistoryEntry.attempt_result)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::seshat::SpawnAttemptResult* temp = _impl_.attempt_result_;
  _impl_.attempt_result_ = nullptr;
  return temp;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnHistoryEntry::_internal_mutable_attempt_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attempt_result_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnAttemptResult>(GetArena());
    _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(p);
  }
  return _impl_.attempt_result_;
}
inline ::seshat::SpawnAttemptResult* PROTOBUF_NONNULL SpawnHistoryEntry::mutable_attempt_result()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::seshat::SpawnAttemptResult* _msg = _internal_mutable_attempt_result();
  // @@protoc_insertion_point(field_mutable:seshat.SpawnHistoryEntry.attempt_result)
  return _msg;
}
inline void SpawnHistoryEntry::set_allocated_attempt_result(::seshat::SpawnAttemptResult* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.attempt_result_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.attempt_result_ = reinterpret_cast<::seshat::SpawnAttemptResult*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.SpawnHistoryEntry.attempt_result)
}

// map<string, string> details = 6 [json_name = "details"];
inline int SpawnHistoryEntry::_internal_details_size() const {
  return _internal_details().size();
}
inline int SpawnHistoryEntry::details_size() const {
  return _internal_details_size();
}
inline void SpawnHistoryEntry::clear_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.details_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnHistoryEntry::_internal_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.details_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& SpawnHistoryEntry::details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:seshat.SpawnHistoryEntry.details)
  return _internal_details();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnHistoryEntry::_internal_mutable_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.details_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* PROTOBUF_NONNULL SpawnHistoryEntry::mutable_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:seshat.SpawnHistoryEntry.details)
  return _internal_mutable_details();
}

// -------------------------------------------------------------------

// GetActiveSpawnsRequest

// string engine_id = 1 [json_name = "engineId"];
inline void GetActiveSpawnsRequest::clear_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.engine_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& GetActiveSpawnsRequest::engine_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsRequest.engine_id)
  return _internal_engine_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetActiveSpawnsRequest::set_engine_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetActiveSpawnsRequest.engine_id)
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::mutable_engine_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_engine_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsRequest.engine_id)
  return _s;
}
inline const ::std::string& GetActiveSpawnsRequest::_internal_engine_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.engine_id_.Get();
}
inline void GetActiveSpawnsRequest::_internal_set_engine_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.engine_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::_internal_mutable_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.engine_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetActiveSpawnsRequest::release_engine_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetActiveSpawnsRequest.engine_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.engine_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  return released;
}
inline void GetActiveSpawnsRequest::set_allocated_engine_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.engine_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.engine_id_.IsDefault()) {
    _impl_.engine_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetActiveSpawnsRequest.engine_id)
}

// string room_id = 2 [json_name = "roomId"];
inline void GetActiveSpawnsRequest::clear_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.room_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& GetActiveSpawnsRequest::room_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsRequest.room_id)
  return _internal_room_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void GetActiveSpawnsRequest::set_room_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.GetActiveSpawnsRequest.room_id)
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::mutable_room_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_room_id();
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsRequest.room_id)
  return _s;
}
inline const ::std::string& GetActiveSpawnsRequest::_internal_room_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.room_id_.Get();
}
inline void GetActiveSpawnsRequest::_internal_set_room_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.room_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::_internal_mutable_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.room_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE GetActiveSpawnsRequest::release_room_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetActiveSpawnsRequest.room_id)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.room_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.room_id_.Set("", GetArena());
  }
  return released;
}
inline void GetActiveSpawnsRequest::set_allocated_room_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.room_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.room_id_.IsDefault()) {
    _impl_.room_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.GetActiveSpawnsRequest.room_id)
}

// repeated string entity_types = 3 [json_name = "entityTypes"];
inline int GetActiveSpawnsRequest::_internal_entity_types_size() const {
  return _internal_entity_types().size();
}
inline int GetActiveSpawnsRequest::entity_types_size() const {
  return _internal_entity_types_size();
}
inline void GetActiveSpawnsRequest::clear_entity_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_types_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::add_entity_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_entity_types()->Add();
  // @@protoc_insertion_point(field_add_mutable:seshat.GetActiveSpawnsRequest.entity_types)
  return _s;
}
inline const ::std::string& GetActiveSpawnsRequest::entity_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsRequest.entity_types)
  return _internal_entity_types().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL GetActiveSpawnsRequest::mutable_entity_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsRequest.entity_types)
  return _internal_mutable_entity_types()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetActiveSpawnsRequest::set_entity_types(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_entity_types()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:seshat.GetActiveSpawnsRequest.entity_types)
}
template <typename Arg_, typename... Args_>
inline void GetActiveSpawnsRequest::add_entity_types(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_entity_types(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:seshat.GetActiveSpawnsRequest.entity_types)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& GetActiveSpawnsRequest::entity_types()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetActiveSpawnsRequest.entity_types)
  return _internal_entity_types();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetActiveSpawnsRequest::mutable_entity_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetActiveSpawnsRequest.entity_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_entity_types();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
GetActiveSpawnsRequest::_internal_entity_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_types_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
GetActiveSpawnsRequest::_internal_mutable_entity_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.entity_types_;
}

// -------------------------------------------------------------------

// GetActiveSpawnsResponse

// repeated .seshat.SpawnedEntity active_spawns = 1 [json_name = "activeSpawns"];
inline int GetActiveSpawnsResponse::_internal_active_spawns_size() const {
  return _internal_active_spawns().size();
}
inline int GetActiveSpawnsResponse::active_spawns_size() const {
  return _internal_active_spawns_size();
}
inline void GetActiveSpawnsResponse::clear_active_spawns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_spawns_.Clear();
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL GetActiveSpawnsResponse::mutable_active_spawns(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsResponse.active_spawns)
  return _internal_mutable_active_spawns()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL GetActiveSpawnsResponse::mutable_active_spawns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:seshat.GetActiveSpawnsResponse.active_spawns)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_active_spawns();
}
inline const ::seshat::SpawnedEntity& GetActiveSpawnsResponse::active_spawns(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsResponse.active_spawns)
  return _internal_active_spawns().Get(index);
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL GetActiveSpawnsResponse::add_active_spawns()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::seshat::SpawnedEntity* _add = _internal_mutable_active_spawns()->Add();
  // @@protoc_insertion_point(field_add:seshat.GetActiveSpawnsResponse.active_spawns)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>& GetActiveSpawnsResponse::active_spawns() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:seshat.GetActiveSpawnsResponse.active_spawns)
  return _internal_active_spawns();
}
inline const ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>&
GetActiveSpawnsResponse::_internal_active_spawns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_spawns_;
}
inline ::google::protobuf::RepeatedPtrField<::seshat::SpawnedEntity>* PROTOBUF_NONNULL
GetActiveSpawnsResponse::_internal_mutable_active_spawns() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.active_spawns_;
}

// int32 total_count = 2 [json_name = "totalCount"];
inline void GetActiveSpawnsResponse::clear_total_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int32_t GetActiveSpawnsResponse::total_count() const {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsResponse.total_count)
  return _internal_total_count();
}
inline void GetActiveSpawnsResponse::set_total_count(::int32_t value) {
  _internal_set_total_count(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:seshat.GetActiveSpawnsResponse.total_count)
}
inline ::int32_t GetActiveSpawnsResponse::_internal_total_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_count_;
}
inline void GetActiveSpawnsResponse::_internal_set_total_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_count_ = value;
}

// .seshat.SpawnCapacityAnalysis current_capacity = 3 [json_name = "currentCapacity"];
inline bool GetActiveSpawnsResponse::has_current_capacity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_capacity_ != nullptr);
  return value;
}
inline void GetActiveSpawnsResponse::clear_current_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_capacity_ != nullptr) _impl_.current_capacity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnCapacityAnalysis& GetActiveSpawnsResponse::_internal_current_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnCapacityAnalysis* p = _impl_.current_capacity_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnCapacityAnalysis&>(::seshat::_SpawnCapacityAnalysis_default_instance_);
}
inline const ::seshat::SpawnCapacityAnalysis& GetActiveSpawnsResponse::current_capacity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsResponse.current_capacity)
  return _internal_current_capacity();
}
inline void GetActiveSpawnsResponse::unsafe_arena_set_allocated_current_capacity(
    ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_capacity_);
  }
  _impl_.current_capacity_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetActiveSpawnsResponse.current_capacity)
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE GetActiveSpawnsResponse::release_current_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnCapacityAnalysis* released = _impl_.current_capacity_;
  _impl_.current_capacity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE GetActiveSpawnsResponse::unsafe_arena_release_current_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetActiveSpawnsResponse.current_capacity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnCapacityAnalysis* temp = _impl_.current_capacity_;
  _impl_.current_capacity_ = nullptr;
  return temp;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL GetActiveSpawnsResponse::_internal_mutable_current_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.current_capacity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnCapacityAnalysis>(GetArena());
    _impl_.current_capacity_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(p);
  }
  return _impl_.current_capacity_;
}
inline ::seshat::SpawnCapacityAnalysis* PROTOBUF_NONNULL GetActiveSpawnsResponse::mutable_current_capacity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnCapacityAnalysis* _msg = _internal_mutable_current_capacity();
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsResponse.current_capacity)
  return _msg;
}
inline void GetActiveSpawnsResponse::set_allocated_current_capacity(::seshat::SpawnCapacityAnalysis* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_capacity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.current_capacity_ = reinterpret_cast<::seshat::SpawnCapacityAnalysis*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetActiveSpawnsResponse.current_capacity)
}

// .seshat.Result status = 4 [json_name = "status"];
inline bool GetActiveSpawnsResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& GetActiveSpawnsResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& GetActiveSpawnsResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.GetActiveSpawnsResponse.status)
  return _internal_status();
}
inline void GetActiveSpawnsResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.GetActiveSpawnsResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetActiveSpawnsResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE GetActiveSpawnsResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.GetActiveSpawnsResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetActiveSpawnsResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL GetActiveSpawnsResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.GetActiveSpawnsResponse.status)
  return _msg;
}
inline void GetActiveSpawnsResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.GetActiveSpawnsResponse.status)
}

// -------------------------------------------------------------------

// DespawnEntityRequest

// string entity_id = 1 [json_name = "entityId"];
inline void DespawnEntityRequest::clear_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::std::string& DespawnEntityRequest::entity_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DespawnEntityRequest.entity_id)
  return _internal_entity_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DespawnEntityRequest::set_entity_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.DespawnEntityRequest.entity_id)
}
inline ::std::string* PROTOBUF_NONNULL DespawnEntityRequest::mutable_entity_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_entity_id();
  // @@protoc_insertion_point(field_mutable:seshat.DespawnEntityRequest.entity_id)
  return _s;
}
inline const ::std::string& DespawnEntityRequest::_internal_entity_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_id_.Get();
}
inline void DespawnEntityRequest::_internal_set_entity_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entity_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DespawnEntityRequest::_internal_mutable_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.entity_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DespawnEntityRequest::release_entity_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DespawnEntityRequest.entity_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.entity_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  return released;
}
inline void DespawnEntityRequest::set_allocated_entity_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.entity_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.entity_id_.IsDefault()) {
    _impl_.entity_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.DespawnEntityRequest.entity_id)
}

// string reason = 2 [json_name = "reason"];
inline void DespawnEntityRequest::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::std::string& DespawnEntityRequest::reason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DespawnEntityRequest.reason)
  return _internal_reason();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void DespawnEntityRequest::set_reason(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:seshat.DespawnEntityRequest.reason)
}
inline ::std::string* PROTOBUF_NONNULL DespawnEntityRequest::mutable_reason()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_reason();
  // @@protoc_insertion_point(field_mutable:seshat.DespawnEntityRequest.reason)
  return _s;
}
inline const ::std::string& DespawnEntityRequest::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reason_.Get();
}
inline void DespawnEntityRequest::_internal_set_reason(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.reason_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL DespawnEntityRequest::_internal_mutable_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.reason_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE DespawnEntityRequest::release_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DespawnEntityRequest.reason)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.reason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.reason_.Set("", GetArena());
  }
  return released;
}
inline void DespawnEntityRequest::set_allocated_reason(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.reason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.reason_.IsDefault()) {
    _impl_.reason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:seshat.DespawnEntityRequest.reason)
}

// -------------------------------------------------------------------

// DespawnEntityResponse

// .seshat.SpawnedEntity despawned_entity = 1 [json_name = "despawnedEntity"];
inline bool DespawnEntityResponse::has_despawned_entity() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.despawned_entity_ != nullptr);
  return value;
}
inline void DespawnEntityResponse::clear_despawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.despawned_entity_ != nullptr) _impl_.despawned_entity_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::seshat::SpawnedEntity& DespawnEntityResponse::_internal_despawned_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::SpawnedEntity* p = _impl_.despawned_entity_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::SpawnedEntity&>(::seshat::_SpawnedEntity_default_instance_);
}
inline const ::seshat::SpawnedEntity& DespawnEntityResponse::despawned_entity() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DespawnEntityResponse.despawned_entity)
  return _internal_despawned_entity();
}
inline void DespawnEntityResponse::unsafe_arena_set_allocated_despawned_entity(
    ::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.despawned_entity_);
  }
  _impl_.despawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.DespawnEntityResponse.despawned_entity)
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE DespawnEntityResponse::release_despawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnedEntity* released = _impl_.despawned_entity_;
  _impl_.despawned_entity_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NULLABLE DespawnEntityResponse::unsafe_arena_release_despawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DespawnEntityResponse.despawned_entity)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::seshat::SpawnedEntity* temp = _impl_.despawned_entity_;
  _impl_.despawned_entity_ = nullptr;
  return temp;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL DespawnEntityResponse::_internal_mutable_despawned_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.despawned_entity_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::SpawnedEntity>(GetArena());
    _impl_.despawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(p);
  }
  return _impl_.despawned_entity_;
}
inline ::seshat::SpawnedEntity* PROTOBUF_NONNULL DespawnEntityResponse::mutable_despawned_entity()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::seshat::SpawnedEntity* _msg = _internal_mutable_despawned_entity();
  // @@protoc_insertion_point(field_mutable:seshat.DespawnEntityResponse.despawned_entity)
  return _msg;
}
inline void DespawnEntityResponse::set_allocated_despawned_entity(::seshat::SpawnedEntity* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.despawned_entity_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.despawned_entity_ = reinterpret_cast<::seshat::SpawnedEntity*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.DespawnEntityResponse.despawned_entity)
}

// .seshat.Result status = 2 [json_name = "status"];
inline bool DespawnEntityResponse::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.status_ != nullptr);
  return value;
}
inline const ::seshat::Result& DespawnEntityResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::seshat::Result* p = _impl_.status_;
  return p != nullptr ? *p : reinterpret_cast<const ::seshat::Result&>(::seshat::_Result_default_instance_);
}
inline const ::seshat::Result& DespawnEntityResponse::status() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:seshat.DespawnEntityResponse.status)
  return _internal_status();
}
inline void DespawnEntityResponse::unsafe_arena_set_allocated_status(
    ::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }
  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:seshat.DespawnEntityResponse.status)
}
inline ::seshat::Result* PROTOBUF_NULLABLE DespawnEntityResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* released = _impl_.status_;
  _impl_.status_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::seshat::Result* PROTOBUF_NULLABLE DespawnEntityResponse::unsafe_arena_release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:seshat.DespawnEntityResponse.status)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::seshat::Result* temp = _impl_.status_;
  _impl_.status_ = nullptr;
  return temp;
}
inline ::seshat::Result* PROTOBUF_NONNULL DespawnEntityResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.status_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::seshat::Result>(GetArena());
    _impl_.status_ = reinterpret_cast<::seshat::Result*>(p);
  }
  return _impl_.status_;
}
inline ::seshat::Result* PROTOBUF_NONNULL DespawnEntityResponse::mutable_status()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::seshat::Result* _msg = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:seshat.DespawnEntityResponse.status)
  return _msg;
}
inline void DespawnEntityResponse::set_allocated_status(::seshat::Result* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.status_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.status_ = reinterpret_cast<::seshat::Result*>(value);
  // @@protoc_insertion_point(field_set_allocated:seshat.DespawnEntityResponse.status)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace seshat


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::seshat::SpawnTiming> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::SpawnTiming>() {
  return ::seshat::SpawnTiming_descriptor();
}
template <>
struct is_proto_enum<::seshat::PatternType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::PatternType>() {
  return ::seshat::PatternType_descriptor();
}
template <>
struct is_proto_enum<::seshat::ConstraintType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::seshat::ConstraintType>() {
  return ::seshat::ConstraintType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // seshat_2fspawn_2eproto_2epb_2eh
