// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: seshat/selectables.proto

package seshat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SelectionMode int32

const (
	SelectionMode_SELECTION_MODE_UNSPECIFIED SelectionMode = 0
	SelectionMode_SELECTION_MODE_SINGLE      SelectionMode = 1 // Select one item
	SelectionMode_SELECTION_MODE_MULTIPLE    SelectionMode = 2 // Select multiple items
	SelectionMode_SELECTION_MODE_UNIQUE      SelectionMode = 3 // No duplicate selections
	SelectionMode_SELECTION_MODE_VARIABLE    SelectionMode = 4 // Variable count based on context
)

// Enum value maps for SelectionMode.
var (
	SelectionMode_name = map[int32]string{
		0: "SELECTION_MODE_UNSPECIFIED",
		1: "SELECTION_MODE_SINGLE",
		2: "SELECTION_MODE_MULTIPLE",
		3: "SELECTION_MODE_UNIQUE",
		4: "SELECTION_MODE_VARIABLE",
	}
	SelectionMode_value = map[string]int32{
		"SELECTION_MODE_UNSPECIFIED": 0,
		"SELECTION_MODE_SINGLE":      1,
		"SELECTION_MODE_MULTIPLE":    2,
		"SELECTION_MODE_UNIQUE":      3,
		"SELECTION_MODE_VARIABLE":    4,
	}
)

func (x SelectionMode) Enum() *SelectionMode {
	p := new(SelectionMode)
	*p = x
	return p
}

func (x SelectionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_seshat_selectables_proto_enumTypes[0].Descriptor()
}

func (SelectionMode) Type() protoreflect.EnumType {
	return &file_seshat_selectables_proto_enumTypes[0]
}

func (x SelectionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SelectionMode.Descriptor instead.
func (SelectionMode) EnumDescriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{0}
}

type MergeStrategy int32

const (
	MergeStrategy_MERGE_STRATEGY_UNSPECIFIED MergeStrategy = 0
	MergeStrategy_MERGE_STRATEGY_COMBINE     MergeStrategy = 1 // Keep all items, add weights for duplicates
	MergeStrategy_MERGE_STRATEGY_AVERAGE     MergeStrategy = 2 // Average weights for duplicate items
	MergeStrategy_MERGE_STRATEGY_HIGHEST     MergeStrategy = 3 // Keep highest weight for duplicates
	MergeStrategy_MERGE_STRATEGY_REPLACE     MergeStrategy = 4 // Last table wins for duplicates
)

// Enum value maps for MergeStrategy.
var (
	MergeStrategy_name = map[int32]string{
		0: "MERGE_STRATEGY_UNSPECIFIED",
		1: "MERGE_STRATEGY_COMBINE",
		2: "MERGE_STRATEGY_AVERAGE",
		3: "MERGE_STRATEGY_HIGHEST",
		4: "MERGE_STRATEGY_REPLACE",
	}
	MergeStrategy_value = map[string]int32{
		"MERGE_STRATEGY_UNSPECIFIED": 0,
		"MERGE_STRATEGY_COMBINE":     1,
		"MERGE_STRATEGY_AVERAGE":     2,
		"MERGE_STRATEGY_HIGHEST":     3,
		"MERGE_STRATEGY_REPLACE":     4,
	}
)

func (x MergeStrategy) Enum() *MergeStrategy {
	p := new(MergeStrategy)
	*p = x
	return p
}

func (x MergeStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MergeStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_seshat_selectables_proto_enumTypes[1].Descriptor()
}

func (MergeStrategy) Type() protoreflect.EnumType {
	return &file_seshat_selectables_proto_enumTypes[1]
}

func (x MergeStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MergeStrategy.Descriptor instead.
func (MergeStrategy) EnumDescriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{1}
}

// Table creation
type CreateTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Optional, generated if empty
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Config        *TableConfig           `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableRequest) Reset() {
	*x = CreateTableRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableRequest) ProtoMessage() {}

func (x *CreateTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableRequest.ProtoReflect.Descriptor instead.
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTableRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateTableRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTableRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTableRequest) GetConfig() *TableConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         *SelectionTable        `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Status        *Result                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTableResponse) Reset() {
	*x = CreateTableResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTableResponse) ProtoMessage() {}

func (x *CreateTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTableResponse.ProtoReflect.Descriptor instead.
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTableResponse) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *CreateTableResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type TableConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Mode            SelectionMode          `protobuf:"varint,1,opt,name=mode,proto3,enum=seshat.SelectionMode" json:"mode,omitempty"`
	AllowDuplicates bool                   `protobuf:"varint,2,opt,name=allow_duplicates,json=allowDuplicates,proto3" json:"allow_duplicates,omitempty"` // In multi-selection
	DefaultWeight   int32                  `protobuf:"varint,3,opt,name=default_weight,json=defaultWeight,proto3" json:"default_weight,omitempty"`       // Weight for items without explicit weight
	Properties      map[string]string      `protobuf:"bytes,4,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TableConfig) Reset() {
	*x = TableConfig{}
	mi := &file_seshat_selectables_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TableConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableConfig) ProtoMessage() {}

func (x *TableConfig) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableConfig.ProtoReflect.Descriptor instead.
func (*TableConfig) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{2}
}

func (x *TableConfig) GetMode() SelectionMode {
	if x != nil {
		return x.Mode
	}
	return SelectionMode_SELECTION_MODE_UNSPECIFIED
}

func (x *TableConfig) GetAllowDuplicates() bool {
	if x != nil {
		return x.AllowDuplicates
	}
	return false
}

func (x *TableConfig) GetDefaultWeight() int32 {
	if x != nil {
		return x.DefaultWeight
	}
	return 0
}

func (x *TableConfig) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type SelectionTable struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Config            *TableConfig           `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	Items             []*SelectableItem      `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	TotalWeight       int32                  `protobuf:"varint,6,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	CreatedTimestamp  int64                  `protobuf:"varint,7,opt,name=created_timestamp,json=createdTimestamp,proto3" json:"created_timestamp,omitempty"`
	ModifiedTimestamp int64                  `protobuf:"varint,8,opt,name=modified_timestamp,json=modifiedTimestamp,proto3" json:"modified_timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SelectionTable) Reset() {
	*x = SelectionTable{}
	mi := &file_seshat_selectables_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionTable) ProtoMessage() {}

func (x *SelectionTable) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionTable.ProtoReflect.Descriptor instead.
func (*SelectionTable) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{3}
}

func (x *SelectionTable) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SelectionTable) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SelectionTable) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SelectionTable) GetConfig() *TableConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SelectionTable) GetItems() []*SelectableItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SelectionTable) GetTotalWeight() int32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *SelectionTable) GetCreatedTimestamp() int64 {
	if x != nil {
		return x.CreatedTimestamp
	}
	return 0
}

func (x *SelectionTable) GetModifiedTimestamp() int64 {
	if x != nil {
		return x.ModifiedTimestamp
	}
	return 0
}

type SelectableItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                            // The actual item (JSON or string)
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // "string", "json", "entity_id", etc.
	Weight        int32                  `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional metadata
	Conditions    []*ContextCondition    `protobuf:"bytes,6,rep,name=conditions,proto3" json:"conditions,omitempty"`                                                                           // When this item is available
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectableItem) Reset() {
	*x = SelectableItem{}
	mi := &file_seshat_selectables_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectableItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectableItem) ProtoMessage() {}

func (x *SelectableItem) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectableItem.ProtoReflect.Descriptor instead.
func (*SelectableItem) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{4}
}

func (x *SelectableItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SelectableItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SelectableItem) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *SelectableItem) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SelectableItem) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SelectableItem) GetConditions() []*ContextCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type ContextCondition struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`           // Context key to check
	Operator      string                 `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"` // "equals", "greater_than", "contains", etc.
	Value         string                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`       // Expected value
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContextCondition) Reset() {
	*x = ContextCondition{}
	mi := &file_seshat_selectables_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContextCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContextCondition) ProtoMessage() {}

func (x *ContextCondition) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContextCondition.ProtoReflect.Descriptor instead.
func (*ContextCondition) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{5}
}

func (x *ContextCondition) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ContextCondition) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *ContextCondition) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Item management
type AddItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Item          *SelectableItem        `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddItemRequest) Reset() {
	*x = AddItemRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemRequest) ProtoMessage() {}

func (x *AddItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemRequest.ProtoReflect.Descriptor instead.
func (*AddItemRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{6}
}

func (x *AddItemRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *AddItemRequest) GetItem() *SelectableItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type AddItemResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	AddedItem      *SelectableItem        `protobuf:"bytes,1,opt,name=added_item,json=addedItem,proto3" json:"added_item,omitempty"`
	NewTotalWeight int32                  `protobuf:"varint,2,opt,name=new_total_weight,json=newTotalWeight,proto3" json:"new_total_weight,omitempty"`
	Status         *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddItemResponse) Reset() {
	*x = AddItemResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddItemResponse) ProtoMessage() {}

func (x *AddItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddItemResponse.ProtoReflect.Descriptor instead.
func (*AddItemResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{7}
}

func (x *AddItemResponse) GetAddedItem() *SelectableItem {
	if x != nil {
		return x.AddedItem
	}
	return nil
}

func (x *AddItemResponse) GetNewTotalWeight() int32 {
	if x != nil {
		return x.NewTotalWeight
	}
	return 0
}

func (x *AddItemResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type RemoveItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveItemRequest) Reset() {
	*x = RemoveItemRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemRequest) ProtoMessage() {}

func (x *RemoveItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemRequest.ProtoReflect.Descriptor instead.
func (*RemoveItemRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{8}
}

func (x *RemoveItemRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RemoveItemRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type RemoveItemResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RemovedItem    *SelectableItem        `protobuf:"bytes,1,opt,name=removed_item,json=removedItem,proto3" json:"removed_item,omitempty"`
	NewTotalWeight int32                  `protobuf:"varint,2,opt,name=new_total_weight,json=newTotalWeight,proto3" json:"new_total_weight,omitempty"`
	Status         *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RemoveItemResponse) Reset() {
	*x = RemoveItemResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveItemResponse) ProtoMessage() {}

func (x *RemoveItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveItemResponse.ProtoReflect.Descriptor instead.
func (*RemoveItemResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveItemResponse) GetRemovedItem() *SelectableItem {
	if x != nil {
		return x.RemovedItem
	}
	return nil
}

func (x *RemoveItemResponse) GetNewTotalWeight() int32 {
	if x != nil {
		return x.NewTotalWeight
	}
	return 0
}

func (x *RemoveItemResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type UpdateWeightRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	ItemId        string                 `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	NewWeight     int32                  `protobuf:"varint,3,opt,name=new_weight,json=newWeight,proto3" json:"new_weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateWeightRequest) Reset() {
	*x = UpdateWeightRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeightRequest) ProtoMessage() {}

func (x *UpdateWeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeightRequest.ProtoReflect.Descriptor instead.
func (*UpdateWeightRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateWeightRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *UpdateWeightRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *UpdateWeightRequest) GetNewWeight() int32 {
	if x != nil {
		return x.NewWeight
	}
	return 0
}

type UpdateWeightResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	UpdatedItem    *SelectableItem        `protobuf:"bytes,1,opt,name=updated_item,json=updatedItem,proto3" json:"updated_item,omitempty"`
	NewTotalWeight int32                  `protobuf:"varint,2,opt,name=new_total_weight,json=newTotalWeight,proto3" json:"new_total_weight,omitempty"`
	Status         *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateWeightResponse) Reset() {
	*x = UpdateWeightResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateWeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWeightResponse) ProtoMessage() {}

func (x *UpdateWeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWeightResponse.ProtoReflect.Descriptor instead.
func (*UpdateWeightResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateWeightResponse) GetUpdatedItem() *SelectableItem {
	if x != nil {
		return x.UpdatedItem
	}
	return nil
}

func (x *UpdateWeightResponse) GetNewTotalWeight() int32 {
	if x != nil {
		return x.NewTotalWeight
	}
	return 0
}

func (x *UpdateWeightResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

// Selection operations
type SelectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Context       *SelectionContext      `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectRequest) Reset() {
	*x = SelectRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectRequest) ProtoMessage() {}

func (x *SelectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectRequest.ProtoReflect.Descriptor instead.
func (*SelectRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{12}
}

func (x *SelectRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SelectRequest) GetContext() *SelectionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type SelectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SelectedItem  *SelectableItem        `protobuf:"bytes,1,opt,name=selected_item,json=selectedItem,proto3" json:"selected_item,omitempty"`
	Result        *SelectionResult       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Status        *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectResponse) Reset() {
	*x = SelectResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectResponse) ProtoMessage() {}

func (x *SelectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectResponse.ProtoReflect.Descriptor instead.
func (*SelectResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{13}
}

func (x *SelectResponse) GetSelectedItem() *SelectableItem {
	if x != nil {
		return x.SelectedItem
	}
	return nil
}

func (x *SelectResponse) GetResult() *SelectionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SelectResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type SelectMultipleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Context       *SelectionContext      `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectMultipleRequest) Reset() {
	*x = SelectMultipleRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectMultipleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectMultipleRequest) ProtoMessage() {}

func (x *SelectMultipleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectMultipleRequest.ProtoReflect.Descriptor instead.
func (*SelectMultipleRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{14}
}

func (x *SelectMultipleRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SelectMultipleRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SelectMultipleRequest) GetContext() *SelectionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type SelectMultipleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SelectedItems []*SelectableItem      `protobuf:"bytes,1,rep,name=selected_items,json=selectedItems,proto3" json:"selected_items,omitempty"`
	Result        *SelectionResult       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Status        *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectMultipleResponse) Reset() {
	*x = SelectMultipleResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectMultipleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectMultipleResponse) ProtoMessage() {}

func (x *SelectMultipleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectMultipleResponse.ProtoReflect.Descriptor instead.
func (*SelectMultipleResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{15}
}

func (x *SelectMultipleResponse) GetSelectedItems() []*SelectableItem {
	if x != nil {
		return x.SelectedItems
	}
	return nil
}

func (x *SelectMultipleResponse) GetResult() *SelectionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SelectMultipleResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type SelectWithContextRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Context       *SelectionContext      `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"`
	Options       *SelectionOptions      `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectWithContextRequest) Reset() {
	*x = SelectWithContextRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectWithContextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectWithContextRequest) ProtoMessage() {}

func (x *SelectWithContextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectWithContextRequest.ProtoReflect.Descriptor instead.
func (*SelectWithContextRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{16}
}

func (x *SelectWithContextRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *SelectWithContextRequest) GetContext() *SelectionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *SelectWithContextRequest) GetOptions() *SelectionOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type SelectWithContextResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SelectedItems []*SelectableItem      `protobuf:"bytes,1,rep,name=selected_items,json=selectedItems,proto3" json:"selected_items,omitempty"`
	Result        *SelectionResult       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
	Status        *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectWithContextResponse) Reset() {
	*x = SelectWithContextResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectWithContextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectWithContextResponse) ProtoMessage() {}

func (x *SelectWithContextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectWithContextResponse.ProtoReflect.Descriptor instead.
func (*SelectWithContextResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{17}
}

func (x *SelectWithContextResponse) GetSelectedItems() []*SelectableItem {
	if x != nil {
		return x.SelectedItems
	}
	return nil
}

func (x *SelectWithContextResponse) GetResult() *SelectionResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *SelectWithContextResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type SelectionContext struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          map[string]string      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Context data for conditional selection
	EntityId      string                 `protobuf:"bytes,2,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`                                                   // Entity making the selection
	PlayerLevel   int32                  `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`                                         // For level-based loot tables
	Location      string                 `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`                                                                   // For location-based selection
	Tags          []string               `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty"`                                                                           // Additional context tags
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectionContext) Reset() {
	*x = SelectionContext{}
	mi := &file_seshat_selectables_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionContext) ProtoMessage() {}

func (x *SelectionContext) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionContext.ProtoReflect.Descriptor instead.
func (*SelectionContext) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{18}
}

func (x *SelectionContext) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SelectionContext) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *SelectionContext) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *SelectionContext) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *SelectionContext) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SelectionOptions struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MinCount       int32                  `protobuf:"varint,1,opt,name=min_count,json=minCount,proto3" json:"min_count,omitempty"`                    // Minimum items to select
	MaxCount       int32                  `protobuf:"varint,2,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`                    // Maximum items to select
	AllowEmpty     bool                   `protobuf:"varint,3,opt,name=allow_empty,json=allowEmpty,proto3" json:"allow_empty,omitempty"`              // Can return no items
	RequiredTags   []string               `protobuf:"bytes,4,rep,name=required_tags,json=requiredTags,proto3" json:"required_tags,omitempty"`         // Items must have these tags
	ExcludedTags   []string               `protobuf:"bytes,5,rep,name=excluded_tags,json=excludedTags,proto3" json:"excluded_tags,omitempty"`         // Items cannot have these tags
	WeightModifier float32                `protobuf:"fixed32,6,opt,name=weight_modifier,json=weightModifier,proto3" json:"weight_modifier,omitempty"` // Multiply all weights by this
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SelectionOptions) Reset() {
	*x = SelectionOptions{}
	mi := &file_seshat_selectables_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionOptions) ProtoMessage() {}

func (x *SelectionOptions) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionOptions.ProtoReflect.Descriptor instead.
func (*SelectionOptions) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{19}
}

func (x *SelectionOptions) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *SelectionOptions) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *SelectionOptions) GetAllowEmpty() bool {
	if x != nil {
		return x.AllowEmpty
	}
	return false
}

func (x *SelectionOptions) GetRequiredTags() []string {
	if x != nil {
		return x.RequiredTags
	}
	return nil
}

func (x *SelectionOptions) GetExcludedTags() []string {
	if x != nil {
		return x.ExcludedTags
	}
	return nil
}

func (x *SelectionOptions) GetWeightModifier() float32 {
	if x != nil {
		return x.WeightModifier
	}
	return 0
}

type SelectionResult struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TotalWeight        int32                  `protobuf:"varint,1,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`          // Total weight of table at selection time
	RollValue          int32                  `protobuf:"varint,2,opt,name=roll_value,json=rollValue,proto3" json:"roll_value,omitempty"`                // Random value that was rolled
	ItemsEvaluated     int32                  `protobuf:"varint,3,opt,name=items_evaluated,json=itemsEvaluated,proto3" json:"items_evaluated,omitempty"` // How many items were considered
	ItemsFiltered      int32                  `protobuf:"varint,4,opt,name=items_filtered,json=itemsFiltered,proto3" json:"items_filtered,omitempty"`    // How many items were filtered out
	SelectionTimestamp int64                  `protobuf:"varint,5,opt,name=selection_timestamp,json=selectionTimestamp,proto3" json:"selection_timestamp,omitempty"`
	SelectionId        string                 `protobuf:"bytes,6,opt,name=selection_id,json=selectionId,proto3" json:"selection_id,omitempty"` // Unique ID for this selection
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SelectionResult) Reset() {
	*x = SelectionResult{}
	mi := &file_seshat_selectables_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionResult) ProtoMessage() {}

func (x *SelectionResult) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionResult.ProtoReflect.Descriptor instead.
func (*SelectionResult) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{20}
}

func (x *SelectionResult) GetTotalWeight() int32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *SelectionResult) GetRollValue() int32 {
	if x != nil {
		return x.RollValue
	}
	return 0
}

func (x *SelectionResult) GetItemsEvaluated() int32 {
	if x != nil {
		return x.ItemsEvaluated
	}
	return 0
}

func (x *SelectionResult) GetItemsFiltered() int32 {
	if x != nil {
		return x.ItemsFiltered
	}
	return 0
}

func (x *SelectionResult) GetSelectionTimestamp() int64 {
	if x != nil {
		return x.SelectionTimestamp
	}
	return 0
}

func (x *SelectionResult) GetSelectionId() string {
	if x != nil {
		return x.SelectionId
	}
	return ""
}

// Table management
type GetTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	IncludeItems  bool                   `protobuf:"varint,2,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"` // Include full item list
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableRequest) Reset() {
	*x = GetTableRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableRequest) ProtoMessage() {}

func (x *GetTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableRequest.ProtoReflect.Descriptor instead.
func (*GetTableRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{21}
}

func (x *GetTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetTableRequest) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

type GetTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Table         *SelectionTable        `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	Status        *Result                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTableResponse) Reset() {
	*x = GetTableResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTableResponse) ProtoMessage() {}

func (x *GetTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTableResponse.ProtoReflect.Descriptor instead.
func (*GetTableResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{22}
}

func (x *GetTableResponse) GetTable() *SelectionTable {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *GetTableResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type ListTablesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`                           // Pagination
	NameFilter    string                 `protobuf:"bytes,3,opt,name=name_filter,json=nameFilter,proto3" json:"name_filter,omitempty"` // Filter by name pattern
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`                               // Filter by tags
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTablesRequest) Reset() {
	*x = ListTablesRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesRequest) ProtoMessage() {}

func (x *ListTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesRequest.ProtoReflect.Descriptor instead.
func (*ListTablesRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{23}
}

func (x *ListTablesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTablesRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListTablesRequest) GetNameFilter() string {
	if x != nil {
		return x.NameFilter
	}
	return ""
}

func (x *ListTablesRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ListTablesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tables        []*SelectionTable      `protobuf:"bytes,1,rep,name=tables,proto3" json:"tables,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Status        *Result                `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTablesResponse) Reset() {
	*x = ListTablesResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTablesResponse) ProtoMessage() {}

func (x *ListTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTablesResponse.ProtoReflect.Descriptor instead.
func (*ListTablesResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{24}
}

func (x *ListTablesResponse) GetTables() []*SelectionTable {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *ListTablesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListTablesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTablesResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type DeleteTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableRequest) Reset() {
	*x = DeleteTableRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableRequest) ProtoMessage() {}

func (x *DeleteTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableRequest.ProtoReflect.Descriptor instead.
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteTableRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

type DeleteTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *Result                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTableResponse) Reset() {
	*x = DeleteTableResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTableResponse) ProtoMessage() {}

func (x *DeleteTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTableResponse.ProtoReflect.Descriptor instead.
func (*DeleteTableResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{26}
}

func (x *DeleteTableResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type CloneTableRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceTableId string                 `protobuf:"bytes,1,opt,name=source_table_id,json=sourceTableId,proto3" json:"source_table_id,omitempty"`
	NewName       string                 `protobuf:"bytes,2,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	CopyItems     bool                   `protobuf:"varint,3,opt,name=copy_items,json=copyItems,proto3" json:"copy_items,omitempty"` // Copy items or just structure
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneTableRequest) Reset() {
	*x = CloneTableRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneTableRequest) ProtoMessage() {}

func (x *CloneTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneTableRequest.ProtoReflect.Descriptor instead.
func (*CloneTableRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{27}
}

func (x *CloneTableRequest) GetSourceTableId() string {
	if x != nil {
		return x.SourceTableId
	}
	return ""
}

func (x *CloneTableRequest) GetNewName() string {
	if x != nil {
		return x.NewName
	}
	return ""
}

func (x *CloneTableRequest) GetCopyItems() bool {
	if x != nil {
		return x.CopyItems
	}
	return false
}

type CloneTableResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClonedTable   *SelectionTable        `protobuf:"bytes,1,opt,name=cloned_table,json=clonedTable,proto3" json:"cloned_table,omitempty"`
	Status        *Result                `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneTableResponse) Reset() {
	*x = CloneTableResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneTableResponse) ProtoMessage() {}

func (x *CloneTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneTableResponse.ProtoReflect.Descriptor instead.
func (*CloneTableResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{28}
}

func (x *CloneTableResponse) GetClonedTable() *SelectionTable {
	if x != nil {
		return x.ClonedTable
	}
	return nil
}

func (x *CloneTableResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

// Advanced analysis
type GetProbabilitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	Context       *SelectionContext      `protobuf:"bytes,2,opt,name=context,proto3" json:"context,omitempty"` // Context affects probabilities
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProbabilitiesRequest) Reset() {
	*x = GetProbabilitiesRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProbabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProbabilitiesRequest) ProtoMessage() {}

func (x *GetProbabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProbabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetProbabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{29}
}

func (x *GetProbabilitiesRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *GetProbabilitiesRequest) GetContext() *SelectionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type GetProbabilitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Probabilities []*ItemProbability     `protobuf:"bytes,1,rep,name=probabilities,proto3" json:"probabilities,omitempty"`
	TotalWeight   int32                  `protobuf:"varint,2,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	Status        *Result                `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProbabilitiesResponse) Reset() {
	*x = GetProbabilitiesResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProbabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProbabilitiesResponse) ProtoMessage() {}

func (x *GetProbabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProbabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetProbabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{30}
}

func (x *GetProbabilitiesResponse) GetProbabilities() []*ItemProbability {
	if x != nil {
		return x.Probabilities
	}
	return nil
}

func (x *GetProbabilitiesResponse) GetTotalWeight() int32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *GetProbabilitiesResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type ItemProbability struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Item            *SelectableItem        `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Probability     float32                `protobuf:"fixed32,2,opt,name=probability,proto3" json:"probability,omitempty"`                               // 0.0 to 1.0
	Percentage      float32                `protobuf:"fixed32,3,opt,name=percentage,proto3" json:"percentage,omitempty"`                                 // 0.0 to 100.0
	EffectiveWeight int32                  `protobuf:"varint,4,opt,name=effective_weight,json=effectiveWeight,proto3" json:"effective_weight,omitempty"` // Weight after context filtering
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ItemProbability) Reset() {
	*x = ItemProbability{}
	mi := &file_seshat_selectables_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemProbability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemProbability) ProtoMessage() {}

func (x *ItemProbability) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemProbability.ProtoReflect.Descriptor instead.
func (*ItemProbability) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{31}
}

func (x *ItemProbability) GetItem() *SelectableItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemProbability) GetProbability() float32 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *ItemProbability) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *ItemProbability) GetEffectiveWeight() int32 {
	if x != nil {
		return x.EffectiveWeight
	}
	return 0
}

type TestDistributionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TableId       string                 `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	SampleSize    int32                  `protobuf:"varint,2,opt,name=sample_size,json=sampleSize,proto3" json:"sample_size,omitempty"` // Number of selections to test
	Context       *SelectionContext      `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestDistributionRequest) Reset() {
	*x = TestDistributionRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDistributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDistributionRequest) ProtoMessage() {}

func (x *TestDistributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDistributionRequest.ProtoReflect.Descriptor instead.
func (*TestDistributionRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{32}
}

func (x *TestDistributionRequest) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *TestDistributionRequest) GetSampleSize() int32 {
	if x != nil {
		return x.SampleSize
	}
	return 0
}

func (x *TestDistributionRequest) GetContext() *SelectionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

type TestDistributionResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Distributions   []*ItemDistribution    `protobuf:"bytes,1,rep,name=distributions,proto3" json:"distributions,omitempty"`
	TotalSelections int32                  `protobuf:"varint,2,opt,name=total_selections,json=totalSelections,proto3" json:"total_selections,omitempty"`
	ChiSquared      float32                `protobuf:"fixed32,3,opt,name=chi_squared,json=chiSquared,proto3" json:"chi_squared,omitempty"` // Statistical test result
	IsFair          bool                   `protobuf:"varint,4,opt,name=is_fair,json=isFair,proto3" json:"is_fair,omitempty"`              // Distribution matches expected
	Status          *Result                `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TestDistributionResponse) Reset() {
	*x = TestDistributionResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestDistributionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDistributionResponse) ProtoMessage() {}

func (x *TestDistributionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDistributionResponse.ProtoReflect.Descriptor instead.
func (*TestDistributionResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{33}
}

func (x *TestDistributionResponse) GetDistributions() []*ItemDistribution {
	if x != nil {
		return x.Distributions
	}
	return nil
}

func (x *TestDistributionResponse) GetTotalSelections() int32 {
	if x != nil {
		return x.TotalSelections
	}
	return 0
}

func (x *TestDistributionResponse) GetChiSquared() float32 {
	if x != nil {
		return x.ChiSquared
	}
	return 0
}

func (x *TestDistributionResponse) GetIsFair() bool {
	if x != nil {
		return x.IsFair
	}
	return false
}

func (x *TestDistributionResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

type ItemDistribution struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Item               *SelectableItem        `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	SelectedCount      int32                  `protobuf:"varint,2,opt,name=selected_count,json=selectedCount,proto3" json:"selected_count,omitempty"`
	ExpectedCount      float32                `protobuf:"fixed32,3,opt,name=expected_count,json=expectedCount,proto3" json:"expected_count,omitempty"`
	ActualPercentage   float32                `protobuf:"fixed32,4,opt,name=actual_percentage,json=actualPercentage,proto3" json:"actual_percentage,omitempty"`
	ExpectedPercentage float32                `protobuf:"fixed32,5,opt,name=expected_percentage,json=expectedPercentage,proto3" json:"expected_percentage,omitempty"`
	Deviation          float32                `protobuf:"fixed32,6,opt,name=deviation,proto3" json:"deviation,omitempty"` // Difference from expected
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ItemDistribution) Reset() {
	*x = ItemDistribution{}
	mi := &file_seshat_selectables_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemDistribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDistribution) ProtoMessage() {}

func (x *ItemDistribution) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDistribution.ProtoReflect.Descriptor instead.
func (*ItemDistribution) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{34}
}

func (x *ItemDistribution) GetItem() *SelectableItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemDistribution) GetSelectedCount() int32 {
	if x != nil {
		return x.SelectedCount
	}
	return 0
}

func (x *ItemDistribution) GetExpectedCount() float32 {
	if x != nil {
		return x.ExpectedCount
	}
	return 0
}

func (x *ItemDistribution) GetActualPercentage() float32 {
	if x != nil {
		return x.ActualPercentage
	}
	return 0
}

func (x *ItemDistribution) GetExpectedPercentage() float32 {
	if x != nil {
		return x.ExpectedPercentage
	}
	return 0
}

func (x *ItemDistribution) GetDeviation() float32 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

type MergeTablesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourceTableIds  []string               `protobuf:"bytes,1,rep,name=source_table_ids,json=sourceTableIds,proto3" json:"source_table_ids,omitempty"`
	TargetTableName string                 `protobuf:"bytes,2,opt,name=target_table_name,json=targetTableName,proto3" json:"target_table_name,omitempty"`
	Strategy        MergeStrategy          `protobuf:"varint,3,opt,name=strategy,proto3,enum=seshat.MergeStrategy" json:"strategy,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MergeTablesRequest) Reset() {
	*x = MergeTablesRequest{}
	mi := &file_seshat_selectables_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeTablesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTablesRequest) ProtoMessage() {}

func (x *MergeTablesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTablesRequest.ProtoReflect.Descriptor instead.
func (*MergeTablesRequest) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{35}
}

func (x *MergeTablesRequest) GetSourceTableIds() []string {
	if x != nil {
		return x.SourceTableIds
	}
	return nil
}

func (x *MergeTablesRequest) GetTargetTableName() string {
	if x != nil {
		return x.TargetTableName
	}
	return ""
}

func (x *MergeTablesRequest) GetStrategy() MergeStrategy {
	if x != nil {
		return x.Strategy
	}
	return MergeStrategy_MERGE_STRATEGY_UNSPECIFIED
}

type MergeTablesResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MergedTable          *SelectionTable        `protobuf:"bytes,1,opt,name=merged_table,json=mergedTable,proto3" json:"merged_table,omitempty"`
	TotalItems           int32                  `protobuf:"varint,2,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	DuplicateItemsMerged int32                  `protobuf:"varint,3,opt,name=duplicate_items_merged,json=duplicateItemsMerged,proto3" json:"duplicate_items_merged,omitempty"`
	Status               *Result                `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *MergeTablesResponse) Reset() {
	*x = MergeTablesResponse{}
	mi := &file_seshat_selectables_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeTablesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTablesResponse) ProtoMessage() {}

func (x *MergeTablesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_seshat_selectables_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTablesResponse.ProtoReflect.Descriptor instead.
func (*MergeTablesResponse) Descriptor() ([]byte, []int) {
	return file_seshat_selectables_proto_rawDescGZIP(), []int{36}
}

func (x *MergeTablesResponse) GetMergedTable() *SelectionTable {
	if x != nil {
		return x.MergedTable
	}
	return nil
}

func (x *MergeTablesResponse) GetTotalItems() int32 {
	if x != nil {
		return x.TotalItems
	}
	return 0
}

func (x *MergeTablesResponse) GetDuplicateItemsMerged() int32 {
	if x != nil {
		return x.DuplicateItemsMerged
	}
	return 0
}

func (x *MergeTablesResponse) GetStatus() *Result {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_seshat_selectables_proto protoreflect.FileDescriptor

const file_seshat_selectables_proto_rawDesc = "" +
	"\n" +
	"\x18seshat/selectables.proto\x12\x06seshat\x1a\x13seshat/common.proto\"\x87\x01\n" +
	"\x12CreateTableRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06config\x18\x04 \x01(\v2\x13.seshat.TableConfigR\x06config\"k\n" +
	"\x13CreateTableResponse\x12,\n" +
	"\x05table\x18\x01 \x01(\v2\x16.seshat.SelectionTableR\x05table\x12&\n" +
	"\x06status\x18\x02 \x01(\v2\x0e.seshat.ResultR\x06status\"\x8e\x02\n" +
	"\vTableConfig\x12)\n" +
	"\x04mode\x18\x01 \x01(\x0e2\x15.seshat.SelectionModeR\x04mode\x12)\n" +
	"\x10allow_duplicates\x18\x02 \x01(\bR\x0fallowDuplicates\x12%\n" +
	"\x0edefault_weight\x18\x03 \x01(\x05R\rdefaultWeight\x12C\n" +
	"\n" +
	"properties\x18\x04 \x03(\v2#.seshat.TableConfig.PropertiesEntryR\n" +
	"properties\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x02\n" +
	"\x0eSelectionTable\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12+\n" +
	"\x06config\x18\x04 \x01(\v2\x13.seshat.TableConfigR\x06config\x12,\n" +
	"\x05items\x18\x05 \x03(\v2\x16.seshat.SelectableItemR\x05items\x12!\n" +
	"\ftotal_weight\x18\x06 \x01(\x05R\vtotalWeight\x12+\n" +
	"\x11created_timestamp\x18\a \x01(\x03R\x10createdTimestamp\x12-\n" +
	"\x12modified_timestamp\x18\b \x01(\x03R\x11modifiedTimestamp\"\xb6\x02\n" +
	"\x0eSelectableItem\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\x05R\x06weight\x12F\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2&.seshat.SelectableItem.PropertiesEntryR\n" +
	"properties\x128\n" +
	"\n" +
	"conditions\x18\x06 \x03(\v2\x18.seshat.ContextConditionR\n" +
	"conditions\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"V\n" +
	"\x10ContextCondition\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x1a\n" +
	"\boperator\x18\x02 \x01(\tR\boperator\x12\x14\n" +
	"\x05value\x18\x03 \x01(\tR\x05value\"W\n" +
	"\x0eAddItemRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12*\n" +
	"\x04item\x18\x02 \x01(\v2\x16.seshat.SelectableItemR\x04item\"\x9a\x01\n" +
	"\x0fAddItemResponse\x125\n" +
	"\n" +
	"added_item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\taddedItem\x12(\n" +
	"\x10new_total_weight\x18\x02 \x01(\x05R\x0enewTotalWeight\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"G\n" +
	"\x11RemoveItemRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x17\n" +
	"\aitem_id\x18\x02 \x01(\tR\x06itemId\"\xa1\x01\n" +
	"\x12RemoveItemResponse\x129\n" +
	"\fremoved_item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\vremovedItem\x12(\n" +
	"\x10new_total_weight\x18\x02 \x01(\x05R\x0enewTotalWeight\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"h\n" +
	"\x13UpdateWeightRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x17\n" +
	"\aitem_id\x18\x02 \x01(\tR\x06itemId\x12\x1d\n" +
	"\n" +
	"new_weight\x18\x03 \x01(\x05R\tnewWeight\"\xa3\x01\n" +
	"\x14UpdateWeightResponse\x129\n" +
	"\fupdated_item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\vupdatedItem\x12(\n" +
	"\x10new_total_weight\x18\x02 \x01(\x05R\x0enewTotalWeight\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"^\n" +
	"\rSelectRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\acontext\x18\x02 \x01(\v2\x18.seshat.SelectionContextR\acontext\"\xa6\x01\n" +
	"\x0eSelectResponse\x12;\n" +
	"\rselected_item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\fselectedItem\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.seshat.SelectionResultR\x06result\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"|\n" +
	"\x15SelectMultipleRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x122\n" +
	"\acontext\x18\x03 \x01(\v2\x18.seshat.SelectionContextR\acontext\"\xb0\x01\n" +
	"\x16SelectMultipleResponse\x12=\n" +
	"\x0eselected_items\x18\x01 \x03(\v2\x16.seshat.SelectableItemR\rselectedItems\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.seshat.SelectionResultR\x06result\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"\x9d\x01\n" +
	"\x18SelectWithContextRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\acontext\x18\x02 \x01(\v2\x18.seshat.SelectionContextR\acontext\x122\n" +
	"\aoptions\x18\x03 \x01(\v2\x18.seshat.SelectionOptionsR\aoptions\"\xb3\x01\n" +
	"\x19SelectWithContextResponse\x12=\n" +
	"\x0eselected_items\x18\x01 \x03(\v2\x16.seshat.SelectableItemR\rselectedItems\x12/\n" +
	"\x06result\x18\x02 \x01(\v2\x17.seshat.SelectionResultR\x06result\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"\xf3\x01\n" +
	"\x10SelectionContext\x126\n" +
	"\x04data\x18\x01 \x03(\v2\".seshat.SelectionContext.DataEntryR\x04data\x12\x1b\n" +
	"\tentity_id\x18\x02 \x01(\tR\bentityId\x12!\n" +
	"\fplayer_level\x18\x03 \x01(\x05R\vplayerLevel\x12\x1a\n" +
	"\blocation\x18\x04 \x01(\tR\blocation\x12\x12\n" +
	"\x04tags\x18\x05 \x03(\tR\x04tags\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x01\n" +
	"\x10SelectionOptions\x12\x1b\n" +
	"\tmin_count\x18\x01 \x01(\x05R\bminCount\x12\x1b\n" +
	"\tmax_count\x18\x02 \x01(\x05R\bmaxCount\x12\x1f\n" +
	"\vallow_empty\x18\x03 \x01(\bR\n" +
	"allowEmpty\x12#\n" +
	"\rrequired_tags\x18\x04 \x03(\tR\frequiredTags\x12#\n" +
	"\rexcluded_tags\x18\x05 \x03(\tR\fexcludedTags\x12'\n" +
	"\x0fweight_modifier\x18\x06 \x01(\x02R\x0eweightModifier\"\xf7\x01\n" +
	"\x0fSelectionResult\x12!\n" +
	"\ftotal_weight\x18\x01 \x01(\x05R\vtotalWeight\x12\x1d\n" +
	"\n" +
	"roll_value\x18\x02 \x01(\x05R\trollValue\x12'\n" +
	"\x0fitems_evaluated\x18\x03 \x01(\x05R\x0eitemsEvaluated\x12%\n" +
	"\x0eitems_filtered\x18\x04 \x01(\x05R\ritemsFiltered\x12/\n" +
	"\x13selection_timestamp\x18\x05 \x01(\x03R\x12selectionTimestamp\x12!\n" +
	"\fselection_id\x18\x06 \x01(\tR\vselectionId\"Q\n" +
	"\x0fGetTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12#\n" +
	"\rinclude_items\x18\x02 \x01(\bR\fincludeItems\"h\n" +
	"\x10GetTableResponse\x12,\n" +
	"\x05table\x18\x01 \x01(\v2\x16.seshat.SelectionTableR\x05table\x12&\n" +
	"\x06status\x18\x02 \x01(\v2\x0e.seshat.ResultR\x06status\"v\n" +
	"\x11ListTablesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x12\x1f\n" +
	"\vname_filter\x18\x03 \x01(\tR\n" +
	"nameFilter\x12\x12\n" +
	"\x04tags\x18\x04 \x03(\tR\x04tags\"\xae\x01\n" +
	"\x12ListTablesResponse\x12.\n" +
	"\x06tables\x18\x01 \x03(\v2\x16.seshat.SelectionTableR\x06tables\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\x12&\n" +
	"\x06status\x18\x04 \x01(\v2\x0e.seshat.ResultR\x06status\"/\n" +
	"\x12DeleteTableRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\"=\n" +
	"\x13DeleteTableResponse\x12&\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.seshat.ResultR\x06status\"u\n" +
	"\x11CloneTableRequest\x12&\n" +
	"\x0fsource_table_id\x18\x01 \x01(\tR\rsourceTableId\x12\x19\n" +
	"\bnew_name\x18\x02 \x01(\tR\anewName\x12\x1d\n" +
	"\n" +
	"copy_items\x18\x03 \x01(\bR\tcopyItems\"w\n" +
	"\x12CloneTableResponse\x129\n" +
	"\fcloned_table\x18\x01 \x01(\v2\x16.seshat.SelectionTableR\vclonedTable\x12&\n" +
	"\x06status\x18\x02 \x01(\v2\x0e.seshat.ResultR\x06status\"h\n" +
	"\x17GetProbabilitiesRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x122\n" +
	"\acontext\x18\x02 \x01(\v2\x18.seshat.SelectionContextR\acontext\"\xa4\x01\n" +
	"\x18GetProbabilitiesResponse\x12=\n" +
	"\rprobabilities\x18\x01 \x03(\v2\x17.seshat.ItemProbabilityR\rprobabilities\x12!\n" +
	"\ftotal_weight\x18\x02 \x01(\x05R\vtotalWeight\x12&\n" +
	"\x06status\x18\x03 \x01(\v2\x0e.seshat.ResultR\x06status\"\xaa\x01\n" +
	"\x0fItemProbability\x12*\n" +
	"\x04item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\x04item\x12 \n" +
	"\vprobability\x18\x02 \x01(\x02R\vprobability\x12\x1e\n" +
	"\n" +
	"percentage\x18\x03 \x01(\x02R\n" +
	"percentage\x12)\n" +
	"\x10effective_weight\x18\x04 \x01(\x05R\x0feffectiveWeight\"\x89\x01\n" +
	"\x17TestDistributionRequest\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12\x1f\n" +
	"\vsample_size\x18\x02 \x01(\x05R\n" +
	"sampleSize\x122\n" +
	"\acontext\x18\x03 \x01(\v2\x18.seshat.SelectionContextR\acontext\"\xe7\x01\n" +
	"\x18TestDistributionResponse\x12>\n" +
	"\rdistributions\x18\x01 \x03(\v2\x18.seshat.ItemDistributionR\rdistributions\x12)\n" +
	"\x10total_selections\x18\x02 \x01(\x05R\x0ftotalSelections\x12\x1f\n" +
	"\vchi_squared\x18\x03 \x01(\x02R\n" +
	"chiSquared\x12\x17\n" +
	"\ais_fair\x18\x04 \x01(\bR\x06isFair\x12&\n" +
	"\x06status\x18\x05 \x01(\v2\x0e.seshat.ResultR\x06status\"\x88\x02\n" +
	"\x10ItemDistribution\x12*\n" +
	"\x04item\x18\x01 \x01(\v2\x16.seshat.SelectableItemR\x04item\x12%\n" +
	"\x0eselected_count\x18\x02 \x01(\x05R\rselectedCount\x12%\n" +
	"\x0eexpected_count\x18\x03 \x01(\x02R\rexpectedCount\x12+\n" +
	"\x11actual_percentage\x18\x04 \x01(\x02R\x10actualPercentage\x12/\n" +
	"\x13expected_percentage\x18\x05 \x01(\x02R\x12expectedPercentage\x12\x1c\n" +
	"\tdeviation\x18\x06 \x01(\x02R\tdeviation\"\x9d\x01\n" +
	"\x12MergeTablesRequest\x12(\n" +
	"\x10source_table_ids\x18\x01 \x03(\tR\x0esourceTableIds\x12*\n" +
	"\x11target_table_name\x18\x02 \x01(\tR\x0ftargetTableName\x121\n" +
	"\bstrategy\x18\x03 \x01(\x0e2\x15.seshat.MergeStrategyR\bstrategy\"\xcf\x01\n" +
	"\x13MergeTablesResponse\x129\n" +
	"\fmerged_table\x18\x01 \x01(\v2\x16.seshat.SelectionTableR\vmergedTable\x12\x1f\n" +
	"\vtotal_items\x18\x02 \x01(\x05R\n" +
	"totalItems\x124\n" +
	"\x16duplicate_items_merged\x18\x03 \x01(\x05R\x14duplicateItemsMerged\x12&\n" +
	"\x06status\x18\x04 \x01(\v2\x0e.seshat.ResultR\x06status*\x9f\x01\n" +
	"\rSelectionMode\x12\x1e\n" +
	"\x1aSELECTION_MODE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15SELECTION_MODE_SINGLE\x10\x01\x12\x1b\n" +
	"\x17SELECTION_MODE_MULTIPLE\x10\x02\x12\x19\n" +
	"\x15SELECTION_MODE_UNIQUE\x10\x03\x12\x1b\n" +
	"\x17SELECTION_MODE_VARIABLE\x10\x04*\x9f\x01\n" +
	"\rMergeStrategy\x12\x1e\n" +
	"\x1aMERGE_STRATEGY_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16MERGE_STRATEGY_COMBINE\x10\x01\x12\x1a\n" +
	"\x16MERGE_STRATEGY_AVERAGE\x10\x02\x12\x1a\n" +
	"\x16MERGE_STRATEGY_HIGHEST\x10\x03\x12\x1a\n" +
	"\x16MERGE_STRATEGY_REPLACE\x10\x042\x93\b\n" +
	"\x12SelectablesService\x12F\n" +
	"\vCreateTable\x12\x1a.seshat.CreateTableRequest\x1a\x1b.seshat.CreateTableResponse\x12:\n" +
	"\aAddItem\x12\x16.seshat.AddItemRequest\x1a\x17.seshat.AddItemResponse\x12C\n" +
	"\n" +
	"RemoveItem\x12\x19.seshat.RemoveItemRequest\x1a\x1a.seshat.RemoveItemResponse\x12I\n" +
	"\fUpdateWeight\x12\x1b.seshat.UpdateWeightRequest\x1a\x1c.seshat.UpdateWeightResponse\x127\n" +
	"\x06Select\x12\x15.seshat.SelectRequest\x1a\x16.seshat.SelectResponse\x12O\n" +
	"\x0eSelectMultiple\x12\x1d.seshat.SelectMultipleRequest\x1a\x1e.seshat.SelectMultipleResponse\x12X\n" +
	"\x11SelectWithContext\x12 .seshat.SelectWithContextRequest\x1a!.seshat.SelectWithContextResponse\x12=\n" +
	"\bGetTable\x12\x17.seshat.GetTableRequest\x1a\x18.seshat.GetTableResponse\x12C\n" +
	"\n" +
	"ListTables\x12\x19.seshat.ListTablesRequest\x1a\x1a.seshat.ListTablesResponse\x12F\n" +
	"\vDeleteTable\x12\x1a.seshat.DeleteTableRequest\x1a\x1b.seshat.DeleteTableResponse\x12C\n" +
	"\n" +
	"CloneTable\x12\x19.seshat.CloneTableRequest\x1a\x1a.seshat.CloneTableResponse\x12U\n" +
	"\x10GetProbabilities\x12\x1f.seshat.GetProbabilitiesRequest\x1a .seshat.GetProbabilitiesResponse\x12U\n" +
	"\x10TestDistribution\x12\x1f.seshat.TestDistributionRequest\x1a .seshat.TestDistributionResponse\x12F\n" +
	"\vMergeTables\x12\x1a.seshat.MergeTablesRequest\x1a\x1b.seshat.MergeTablesResponseB!Z\x1fgithub.com/seshat/protos/seshatb\x06proto3"

var (
	file_seshat_selectables_proto_rawDescOnce sync.Once
	file_seshat_selectables_proto_rawDescData []byte
)

func file_seshat_selectables_proto_rawDescGZIP() []byte {
	file_seshat_selectables_proto_rawDescOnce.Do(func() {
		file_seshat_selectables_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_seshat_selectables_proto_rawDesc), len(file_seshat_selectables_proto_rawDesc)))
	})
	return file_seshat_selectables_proto_rawDescData
}

var file_seshat_selectables_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_seshat_selectables_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_seshat_selectables_proto_goTypes = []any{
	(SelectionMode)(0),                // 0: seshat.SelectionMode
	(MergeStrategy)(0),                // 1: seshat.MergeStrategy
	(*CreateTableRequest)(nil),        // 2: seshat.CreateTableRequest
	(*CreateTableResponse)(nil),       // 3: seshat.CreateTableResponse
	(*TableConfig)(nil),               // 4: seshat.TableConfig
	(*SelectionTable)(nil),            // 5: seshat.SelectionTable
	(*SelectableItem)(nil),            // 6: seshat.SelectableItem
	(*ContextCondition)(nil),          // 7: seshat.ContextCondition
	(*AddItemRequest)(nil),            // 8: seshat.AddItemRequest
	(*AddItemResponse)(nil),           // 9: seshat.AddItemResponse
	(*RemoveItemRequest)(nil),         // 10: seshat.RemoveItemRequest
	(*RemoveItemResponse)(nil),        // 11: seshat.RemoveItemResponse
	(*UpdateWeightRequest)(nil),       // 12: seshat.UpdateWeightRequest
	(*UpdateWeightResponse)(nil),      // 13: seshat.UpdateWeightResponse
	(*SelectRequest)(nil),             // 14: seshat.SelectRequest
	(*SelectResponse)(nil),            // 15: seshat.SelectResponse
	(*SelectMultipleRequest)(nil),     // 16: seshat.SelectMultipleRequest
	(*SelectMultipleResponse)(nil),    // 17: seshat.SelectMultipleResponse
	(*SelectWithContextRequest)(nil),  // 18: seshat.SelectWithContextRequest
	(*SelectWithContextResponse)(nil), // 19: seshat.SelectWithContextResponse
	(*SelectionContext)(nil),          // 20: seshat.SelectionContext
	(*SelectionOptions)(nil),          // 21: seshat.SelectionOptions
	(*SelectionResult)(nil),           // 22: seshat.SelectionResult
	(*GetTableRequest)(nil),           // 23: seshat.GetTableRequest
	(*GetTableResponse)(nil),          // 24: seshat.GetTableResponse
	(*ListTablesRequest)(nil),         // 25: seshat.ListTablesRequest
	(*ListTablesResponse)(nil),        // 26: seshat.ListTablesResponse
	(*DeleteTableRequest)(nil),        // 27: seshat.DeleteTableRequest
	(*DeleteTableResponse)(nil),       // 28: seshat.DeleteTableResponse
	(*CloneTableRequest)(nil),         // 29: seshat.CloneTableRequest
	(*CloneTableResponse)(nil),        // 30: seshat.CloneTableResponse
	(*GetProbabilitiesRequest)(nil),   // 31: seshat.GetProbabilitiesRequest
	(*GetProbabilitiesResponse)(nil),  // 32: seshat.GetProbabilitiesResponse
	(*ItemProbability)(nil),           // 33: seshat.ItemProbability
	(*TestDistributionRequest)(nil),   // 34: seshat.TestDistributionRequest
	(*TestDistributionResponse)(nil),  // 35: seshat.TestDistributionResponse
	(*ItemDistribution)(nil),          // 36: seshat.ItemDistribution
	(*MergeTablesRequest)(nil),        // 37: seshat.MergeTablesRequest
	(*MergeTablesResponse)(nil),       // 38: seshat.MergeTablesResponse
	nil,                               // 39: seshat.TableConfig.PropertiesEntry
	nil,                               // 40: seshat.SelectableItem.PropertiesEntry
	nil,                               // 41: seshat.SelectionContext.DataEntry
	(*Result)(nil),                    // 42: seshat.Result
}
var file_seshat_selectables_proto_depIdxs = []int32{
	4,  // 0: seshat.CreateTableRequest.config:type_name -> seshat.TableConfig
	5,  // 1: seshat.CreateTableResponse.table:type_name -> seshat.SelectionTable
	42, // 2: seshat.CreateTableResponse.status:type_name -> seshat.Result
	0,  // 3: seshat.TableConfig.mode:type_name -> seshat.SelectionMode
	39, // 4: seshat.TableConfig.properties:type_name -> seshat.TableConfig.PropertiesEntry
	4,  // 5: seshat.SelectionTable.config:type_name -> seshat.TableConfig
	6,  // 6: seshat.SelectionTable.items:type_name -> seshat.SelectableItem
	40, // 7: seshat.SelectableItem.properties:type_name -> seshat.SelectableItem.PropertiesEntry
	7,  // 8: seshat.SelectableItem.conditions:type_name -> seshat.ContextCondition
	6,  // 9: seshat.AddItemRequest.item:type_name -> seshat.SelectableItem
	6,  // 10: seshat.AddItemResponse.added_item:type_name -> seshat.SelectableItem
	42, // 11: seshat.AddItemResponse.status:type_name -> seshat.Result
	6,  // 12: seshat.RemoveItemResponse.removed_item:type_name -> seshat.SelectableItem
	42, // 13: seshat.RemoveItemResponse.status:type_name -> seshat.Result
	6,  // 14: seshat.UpdateWeightResponse.updated_item:type_name -> seshat.SelectableItem
	42, // 15: seshat.UpdateWeightResponse.status:type_name -> seshat.Result
	20, // 16: seshat.SelectRequest.context:type_name -> seshat.SelectionContext
	6,  // 17: seshat.SelectResponse.selected_item:type_name -> seshat.SelectableItem
	22, // 18: seshat.SelectResponse.result:type_name -> seshat.SelectionResult
	42, // 19: seshat.SelectResponse.status:type_name -> seshat.Result
	20, // 20: seshat.SelectMultipleRequest.context:type_name -> seshat.SelectionContext
	6,  // 21: seshat.SelectMultipleResponse.selected_items:type_name -> seshat.SelectableItem
	22, // 22: seshat.SelectMultipleResponse.result:type_name -> seshat.SelectionResult
	42, // 23: seshat.SelectMultipleResponse.status:type_name -> seshat.Result
	20, // 24: seshat.SelectWithContextRequest.context:type_name -> seshat.SelectionContext
	21, // 25: seshat.SelectWithContextRequest.options:type_name -> seshat.SelectionOptions
	6,  // 26: seshat.SelectWithContextResponse.selected_items:type_name -> seshat.SelectableItem
	22, // 27: seshat.SelectWithContextResponse.result:type_name -> seshat.SelectionResult
	42, // 28: seshat.SelectWithContextResponse.status:type_name -> seshat.Result
	41, // 29: seshat.SelectionContext.data:type_name -> seshat.SelectionContext.DataEntry
	5,  // 30: seshat.GetTableResponse.table:type_name -> seshat.SelectionTable
	42, // 31: seshat.GetTableResponse.status:type_name -> seshat.Result
	5,  // 32: seshat.ListTablesResponse.tables:type_name -> seshat.SelectionTable
	42, // 33: seshat.ListTablesResponse.status:type_name -> seshat.Result
	42, // 34: seshat.DeleteTableResponse.status:type_name -> seshat.Result
	5,  // 35: seshat.CloneTableResponse.cloned_table:type_name -> seshat.SelectionTable
	42, // 36: seshat.CloneTableResponse.status:type_name -> seshat.Result
	20, // 37: seshat.GetProbabilitiesRequest.context:type_name -> seshat.SelectionContext
	33, // 38: seshat.GetProbabilitiesResponse.probabilities:type_name -> seshat.ItemProbability
	42, // 39: seshat.GetProbabilitiesResponse.status:type_name -> seshat.Result
	6,  // 40: seshat.ItemProbability.item:type_name -> seshat.SelectableItem
	20, // 41: seshat.TestDistributionRequest.context:type_name -> seshat.SelectionContext
	36, // 42: seshat.TestDistributionResponse.distributions:type_name -> seshat.ItemDistribution
	42, // 43: seshat.TestDistributionResponse.status:type_name -> seshat.Result
	6,  // 44: seshat.ItemDistribution.item:type_name -> seshat.SelectableItem
	1,  // 45: seshat.MergeTablesRequest.strategy:type_name -> seshat.MergeStrategy
	5,  // 46: seshat.MergeTablesResponse.merged_table:type_name -> seshat.SelectionTable
	42, // 47: seshat.MergeTablesResponse.status:type_name -> seshat.Result
	2,  // 48: seshat.SelectablesService.CreateTable:input_type -> seshat.CreateTableRequest
	8,  // 49: seshat.SelectablesService.AddItem:input_type -> seshat.AddItemRequest
	10, // 50: seshat.SelectablesService.RemoveItem:input_type -> seshat.RemoveItemRequest
	12, // 51: seshat.SelectablesService.UpdateWeight:input_type -> seshat.UpdateWeightRequest
	14, // 52: seshat.SelectablesService.Select:input_type -> seshat.SelectRequest
	16, // 53: seshat.SelectablesService.SelectMultiple:input_type -> seshat.SelectMultipleRequest
	18, // 54: seshat.SelectablesService.SelectWithContext:input_type -> seshat.SelectWithContextRequest
	23, // 55: seshat.SelectablesService.GetTable:input_type -> seshat.GetTableRequest
	25, // 56: seshat.SelectablesService.ListTables:input_type -> seshat.ListTablesRequest
	27, // 57: seshat.SelectablesService.DeleteTable:input_type -> seshat.DeleteTableRequest
	29, // 58: seshat.SelectablesService.CloneTable:input_type -> seshat.CloneTableRequest
	31, // 59: seshat.SelectablesService.GetProbabilities:input_type -> seshat.GetProbabilitiesRequest
	34, // 60: seshat.SelectablesService.TestDistribution:input_type -> seshat.TestDistributionRequest
	37, // 61: seshat.SelectablesService.MergeTables:input_type -> seshat.MergeTablesRequest
	3,  // 62: seshat.SelectablesService.CreateTable:output_type -> seshat.CreateTableResponse
	9,  // 63: seshat.SelectablesService.AddItem:output_type -> seshat.AddItemResponse
	11, // 64: seshat.SelectablesService.RemoveItem:output_type -> seshat.RemoveItemResponse
	13, // 65: seshat.SelectablesService.UpdateWeight:output_type -> seshat.UpdateWeightResponse
	15, // 66: seshat.SelectablesService.Select:output_type -> seshat.SelectResponse
	17, // 67: seshat.SelectablesService.SelectMultiple:output_type -> seshat.SelectMultipleResponse
	19, // 68: seshat.SelectablesService.SelectWithContext:output_type -> seshat.SelectWithContextResponse
	24, // 69: seshat.SelectablesService.GetTable:output_type -> seshat.GetTableResponse
	26, // 70: seshat.SelectablesService.ListTables:output_type -> seshat.ListTablesResponse
	28, // 71: seshat.SelectablesService.DeleteTable:output_type -> seshat.DeleteTableResponse
	30, // 72: seshat.SelectablesService.CloneTable:output_type -> seshat.CloneTableResponse
	32, // 73: seshat.SelectablesService.GetProbabilities:output_type -> seshat.GetProbabilitiesResponse
	35, // 74: seshat.SelectablesService.TestDistribution:output_type -> seshat.TestDistributionResponse
	38, // 75: seshat.SelectablesService.MergeTables:output_type -> seshat.MergeTablesResponse
	62, // [62:76] is the sub-list for method output_type
	48, // [48:62] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_seshat_selectables_proto_init() }
func file_seshat_selectables_proto_init() {
	if File_seshat_selectables_proto != nil {
		return
	}
	file_seshat_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_seshat_selectables_proto_rawDesc), len(file_seshat_selectables_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_seshat_selectables_proto_goTypes,
		DependencyIndexes: file_seshat_selectables_proto_depIdxs,
		EnumInfos:         file_seshat_selectables_proto_enumTypes,
		MessageInfos:      file_seshat_selectables_proto_msgTypes,
	}.Build()
	File_seshat_selectables_proto = out.File
	file_seshat_selectables_proto_goTypes = nil
	file_seshat_selectables_proto_depIdxs = nil
}
